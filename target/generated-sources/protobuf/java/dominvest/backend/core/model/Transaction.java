// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PortfolioAtheneService.proto

package dominvest.backend.core.model;

/**
 * Protobuf type {@code dominvest.backend.core.model.Transaction}
 */
public  final class Transaction extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:dominvest.backend.core.model.Transaction)
    TransactionOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Transaction.newBuilder() to construct.
  private Transaction(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Transaction() {
    transactionType_ = 0;
    clientId_ = "";
    transactionId_ = "";
    securityId_ = "";
    exchange_ = 0;
    board_ = "";
    ticker_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Transaction();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Transaction(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            id_ = input.readUInt64();
            break;
          }
          case 18: {
            dominvest.backend.core.model.DateTime.Builder subBuilder = null;
            if (transactionDateTime_ != null) {
              subBuilder = transactionDateTime_.toBuilder();
            }
            transactionDateTime_ = input.readMessage(dominvest.backend.core.model.DateTime.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(transactionDateTime_);
              transactionDateTime_ = subBuilder.buildPartial();
            }

            break;
          }
          case 24: {
            int rawValue = input.readEnum();

            transactionType_ = rawValue;
            break;
          }
          case 34: {
            java.lang.String s = input.readStringRequireUtf8();

            clientId_ = s;
            break;
          }
          case 42: {
            java.lang.String s = input.readStringRequireUtf8();

            transactionId_ = s;
            break;
          }
          case 50: {
            java.lang.String s = input.readStringRequireUtf8();

            securityId_ = s;
            break;
          }
          case 56: {
            int rawValue = input.readEnum();

            exchange_ = rawValue;
            break;
          }
          case 66: {
            java.lang.String s = input.readStringRequireUtf8();

            board_ = s;
            break;
          }
          case 74: {
            java.lang.String s = input.readStringRequireUtf8();

            ticker_ = s;
            break;
          }
          case 80: {

            tradeOrderId_ = input.readUInt64();
            break;
          }
          case 90: {
            dominvest.backend.core.model.Decimal.Builder subBuilder = null;
            if (qtyLots_ != null) {
              subBuilder = qtyLots_.toBuilder();
            }
            qtyLots_ = input.readMessage(dominvest.backend.core.model.Decimal.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(qtyLots_);
              qtyLots_ = subBuilder.buildPartial();
            }

            break;
          }
          case 98: {
            dominvest.backend.core.model.DateTime.Builder subBuilder = null;
            if (createdAt_ != null) {
              subBuilder = createdAt_.toBuilder();
            }
            createdAt_ = input.readMessage(dominvest.backend.core.model.DateTime.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(createdAt_);
              createdAt_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return dominvest.backend.core.model.PortfolioAtheneService.internal_static_dominvest_backend_core_model_Transaction_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return dominvest.backend.core.model.PortfolioAtheneService.internal_static_dominvest_backend_core_model_Transaction_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            dominvest.backend.core.model.Transaction.class, dominvest.backend.core.model.Transaction.Builder.class);
  }

  public static final int ID_FIELD_NUMBER = 1;
  private long id_;
  /**
   * <pre>
   * id записи из таблицы транзакций
   * </pre>
   *
   * <code>uint64 id = 1;</code>
   */
  public long getId() {
    return id_;
  }

  public static final int TRANSACTIONDATETIME_FIELD_NUMBER = 2;
  private dominvest.backend.core.model.DateTime transactionDateTime_;
  /**
   * <pre>
   * Дата и время операции (из колонок date, time)
   * </pre>
   *
   * <code>.dominvest.backend.core.model.DateTime transactionDateTime = 2;</code>
   */
  public boolean hasTransactionDateTime() {
    return transactionDateTime_ != null;
  }
  /**
   * <pre>
   * Дата и время операции (из колонок date, time)
   * </pre>
   *
   * <code>.dominvest.backend.core.model.DateTime transactionDateTime = 2;</code>
   */
  public dominvest.backend.core.model.DateTime getTransactionDateTime() {
    return transactionDateTime_ == null ? dominvest.backend.core.model.DateTime.getDefaultInstance() : transactionDateTime_;
  }
  /**
   * <pre>
   * Дата и время операции (из колонок date, time)
   * </pre>
   *
   * <code>.dominvest.backend.core.model.DateTime transactionDateTime = 2;</code>
   */
  public dominvest.backend.core.model.DateTimeOrBuilder getTransactionDateTimeOrBuilder() {
    return getTransactionDateTime();
  }

  public static final int TRANSACTIONTYPE_FIELD_NUMBER = 3;
  private int transactionType_;
  /**
   * <pre>
   * Значение из колонки type
   * </pre>
   *
   * <code>.dominvest.backend.core.model.txn.TransactionType transactionType = 3;</code>
   */
  public int getTransactionTypeValue() {
    return transactionType_;
  }
  /**
   * <pre>
   * Значение из колонки type
   * </pre>
   *
   * <code>.dominvest.backend.core.model.txn.TransactionType transactionType = 3;</code>
   */
  public dominvest.backend.core.model.txn.TransactionTypeOuterClass.TransactionType getTransactionType() {
    @SuppressWarnings("deprecation")
    dominvest.backend.core.model.txn.TransactionTypeOuterClass.TransactionType result = dominvest.backend.core.model.txn.TransactionTypeOuterClass.TransactionType.valueOf(transactionType_);
    return result == null ? dominvest.backend.core.model.txn.TransactionTypeOuterClass.TransactionType.UNRECOGNIZED : result;
  }

  public static final int CLIENTID_FIELD_NUMBER = 4;
  private volatile java.lang.Object clientId_;
  /**
   * <pre>
   * </pre>
   *
   * <code>string clientId = 4;</code>
   */
  public java.lang.String getClientId() {
    java.lang.Object ref = clientId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      clientId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * </pre>
   *
   * <code>string clientId = 4;</code>
   */
  public com.google.protobuf.ByteString
      getClientIdBytes() {
    java.lang.Object ref = clientId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      clientId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TRANSACTIONID_FIELD_NUMBER = 5;
  private volatile java.lang.Object transactionId_;
  /**
   * <pre>
   * </pre>
   *
   * <code>string transactionId = 5;</code>
   */
  public java.lang.String getTransactionId() {
    java.lang.Object ref = transactionId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      transactionId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * </pre>
   *
   * <code>string transactionId = 5;</code>
   */
  public com.google.protobuf.ByteString
      getTransactionIdBytes() {
    java.lang.Object ref = transactionId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      transactionId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SECURITYID_FIELD_NUMBER = 6;
  private volatile java.lang.Object securityId_;
  /**
   * <pre>
   * id инструмента
   * </pre>
   *
   * <code>string securityId = 6;</code>
   */
  public java.lang.String getSecurityId() {
    java.lang.Object ref = securityId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      securityId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * id инструмента
   * </pre>
   *
   * <code>string securityId = 6;</code>
   */
  public com.google.protobuf.ByteString
      getSecurityIdBytes() {
    java.lang.Object ref = securityId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      securityId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int EXCHANGE_FIELD_NUMBER = 7;
  private int exchange_;
  /**
   * <pre>
   * Биржа, например, MOEX
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Exchange exchange = 7;</code>
   */
  public int getExchangeValue() {
    return exchange_;
  }
  /**
   * <pre>
   * Биржа, например, MOEX
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Exchange exchange = 7;</code>
   */
  public dominvest.backend.core.model.Exchange getExchange() {
    @SuppressWarnings("deprecation")
    dominvest.backend.core.model.Exchange result = dominvest.backend.core.model.Exchange.valueOf(exchange_);
    return result == null ? dominvest.backend.core.model.Exchange.UNRECOGNIZED : result;
  }

  public static final int BOARD_FIELD_NUMBER = 8;
  private volatile java.lang.Object board_;
  /**
   * <pre>
   * Борда биржи, например TQOB
   * </pre>
   *
   * <code>string board = 8;</code>
   */
  public java.lang.String getBoard() {
    java.lang.Object ref = board_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      board_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Борда биржи, например TQOB
   * </pre>
   *
   * <code>string board = 8;</code>
   */
  public com.google.protobuf.ByteString
      getBoardBytes() {
    java.lang.Object ref = board_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      board_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TICKER_FIELD_NUMBER = 9;
  private volatile java.lang.Object ticker_;
  /**
   * <pre>
   * Тикер
   * </pre>
   *
   * <code>string ticker = 9;</code>
   */
  public java.lang.String getTicker() {
    java.lang.Object ref = ticker_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      ticker_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Тикер
   * </pre>
   *
   * <code>string ticker = 9;</code>
   */
  public com.google.protobuf.ByteString
      getTickerBytes() {
    java.lang.Object ref = ticker_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      ticker_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TRADEORDERID_FIELD_NUMBER = 10;
  private long tradeOrderId_;
  /**
   * <code>uint64 tradeOrderId = 10;</code>
   */
  public long getTradeOrderId() {
    return tradeOrderId_;
  }

  public static final int QTYLOTS_FIELD_NUMBER = 11;
  private dominvest.backend.core.model.Decimal qtyLots_;
  /**
   * <pre>
   * Кол-во лотов из колонки qty_lots
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal qtyLots = 11;</code>
   */
  public boolean hasQtyLots() {
    return qtyLots_ != null;
  }
  /**
   * <pre>
   * Кол-во лотов из колонки qty_lots
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal qtyLots = 11;</code>
   */
  public dominvest.backend.core.model.Decimal getQtyLots() {
    return qtyLots_ == null ? dominvest.backend.core.model.Decimal.getDefaultInstance() : qtyLots_;
  }
  /**
   * <pre>
   * Кол-во лотов из колонки qty_lots
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal qtyLots = 11;</code>
   */
  public dominvest.backend.core.model.DecimalOrBuilder getQtyLotsOrBuilder() {
    return getQtyLots();
  }

  public static final int CREATEDAT_FIELD_NUMBER = 12;
  private dominvest.backend.core.model.DateTime createdAt_;
  /**
   * <pre>
   * Дата и время создания записи (из колонки created_at)
   * </pre>
   *
   * <code>.dominvest.backend.core.model.DateTime createdAt = 12;</code>
   */
  public boolean hasCreatedAt() {
    return createdAt_ != null;
  }
  /**
   * <pre>
   * Дата и время создания записи (из колонки created_at)
   * </pre>
   *
   * <code>.dominvest.backend.core.model.DateTime createdAt = 12;</code>
   */
  public dominvest.backend.core.model.DateTime getCreatedAt() {
    return createdAt_ == null ? dominvest.backend.core.model.DateTime.getDefaultInstance() : createdAt_;
  }
  /**
   * <pre>
   * Дата и время создания записи (из колонки created_at)
   * </pre>
   *
   * <code>.dominvest.backend.core.model.DateTime createdAt = 12;</code>
   */
  public dominvest.backend.core.model.DateTimeOrBuilder getCreatedAtOrBuilder() {
    return getCreatedAt();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (id_ != 0L) {
      output.writeUInt64(1, id_);
    }
    if (transactionDateTime_ != null) {
      output.writeMessage(2, getTransactionDateTime());
    }
    if (transactionType_ != dominvest.backend.core.model.txn.TransactionTypeOuterClass.TransactionType.NONE.getNumber()) {
      output.writeEnum(3, transactionType_);
    }
    if (!getClientIdBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, clientId_);
    }
    if (!getTransactionIdBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, transactionId_);
    }
    if (!getSecurityIdBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, securityId_);
    }
    if (exchange_ != dominvest.backend.core.model.Exchange.NO_EXCH.getNumber()) {
      output.writeEnum(7, exchange_);
    }
    if (!getBoardBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 8, board_);
    }
    if (!getTickerBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 9, ticker_);
    }
    if (tradeOrderId_ != 0L) {
      output.writeUInt64(10, tradeOrderId_);
    }
    if (qtyLots_ != null) {
      output.writeMessage(11, getQtyLots());
    }
    if (createdAt_ != null) {
      output.writeMessage(12, getCreatedAt());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (id_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(1, id_);
    }
    if (transactionDateTime_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getTransactionDateTime());
    }
    if (transactionType_ != dominvest.backend.core.model.txn.TransactionTypeOuterClass.TransactionType.NONE.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(3, transactionType_);
    }
    if (!getClientIdBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, clientId_);
    }
    if (!getTransactionIdBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, transactionId_);
    }
    if (!getSecurityIdBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, securityId_);
    }
    if (exchange_ != dominvest.backend.core.model.Exchange.NO_EXCH.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(7, exchange_);
    }
    if (!getBoardBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, board_);
    }
    if (!getTickerBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, ticker_);
    }
    if (tradeOrderId_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(10, tradeOrderId_);
    }
    if (qtyLots_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(11, getQtyLots());
    }
    if (createdAt_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(12, getCreatedAt());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof dominvest.backend.core.model.Transaction)) {
      return super.equals(obj);
    }
    dominvest.backend.core.model.Transaction other = (dominvest.backend.core.model.Transaction) obj;

    if (getId()
        != other.getId()) return false;
    if (hasTransactionDateTime() != other.hasTransactionDateTime()) return false;
    if (hasTransactionDateTime()) {
      if (!getTransactionDateTime()
          .equals(other.getTransactionDateTime())) return false;
    }
    if (transactionType_ != other.transactionType_) return false;
    if (!getClientId()
        .equals(other.getClientId())) return false;
    if (!getTransactionId()
        .equals(other.getTransactionId())) return false;
    if (!getSecurityId()
        .equals(other.getSecurityId())) return false;
    if (exchange_ != other.exchange_) return false;
    if (!getBoard()
        .equals(other.getBoard())) return false;
    if (!getTicker()
        .equals(other.getTicker())) return false;
    if (getTradeOrderId()
        != other.getTradeOrderId()) return false;
    if (hasQtyLots() != other.hasQtyLots()) return false;
    if (hasQtyLots()) {
      if (!getQtyLots()
          .equals(other.getQtyLots())) return false;
    }
    if (hasCreatedAt() != other.hasCreatedAt()) return false;
    if (hasCreatedAt()) {
      if (!getCreatedAt()
          .equals(other.getCreatedAt())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getId());
    if (hasTransactionDateTime()) {
      hash = (37 * hash) + TRANSACTIONDATETIME_FIELD_NUMBER;
      hash = (53 * hash) + getTransactionDateTime().hashCode();
    }
    hash = (37 * hash) + TRANSACTIONTYPE_FIELD_NUMBER;
    hash = (53 * hash) + transactionType_;
    hash = (37 * hash) + CLIENTID_FIELD_NUMBER;
    hash = (53 * hash) + getClientId().hashCode();
    hash = (37 * hash) + TRANSACTIONID_FIELD_NUMBER;
    hash = (53 * hash) + getTransactionId().hashCode();
    hash = (37 * hash) + SECURITYID_FIELD_NUMBER;
    hash = (53 * hash) + getSecurityId().hashCode();
    hash = (37 * hash) + EXCHANGE_FIELD_NUMBER;
    hash = (53 * hash) + exchange_;
    hash = (37 * hash) + BOARD_FIELD_NUMBER;
    hash = (53 * hash) + getBoard().hashCode();
    hash = (37 * hash) + TICKER_FIELD_NUMBER;
    hash = (53 * hash) + getTicker().hashCode();
    hash = (37 * hash) + TRADEORDERID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getTradeOrderId());
    if (hasQtyLots()) {
      hash = (37 * hash) + QTYLOTS_FIELD_NUMBER;
      hash = (53 * hash) + getQtyLots().hashCode();
    }
    if (hasCreatedAt()) {
      hash = (37 * hash) + CREATEDAT_FIELD_NUMBER;
      hash = (53 * hash) + getCreatedAt().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static dominvest.backend.core.model.Transaction parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static dominvest.backend.core.model.Transaction parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static dominvest.backend.core.model.Transaction parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static dominvest.backend.core.model.Transaction parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static dominvest.backend.core.model.Transaction parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static dominvest.backend.core.model.Transaction parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static dominvest.backend.core.model.Transaction parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static dominvest.backend.core.model.Transaction parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static dominvest.backend.core.model.Transaction parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static dominvest.backend.core.model.Transaction parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static dominvest.backend.core.model.Transaction parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static dominvest.backend.core.model.Transaction parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(dominvest.backend.core.model.Transaction prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code dominvest.backend.core.model.Transaction}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:dominvest.backend.core.model.Transaction)
      dominvest.backend.core.model.TransactionOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dominvest.backend.core.model.PortfolioAtheneService.internal_static_dominvest_backend_core_model_Transaction_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dominvest.backend.core.model.PortfolioAtheneService.internal_static_dominvest_backend_core_model_Transaction_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dominvest.backend.core.model.Transaction.class, dominvest.backend.core.model.Transaction.Builder.class);
    }

    // Construct using dominvest.backend.core.model.Transaction.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      id_ = 0L;

      if (transactionDateTimeBuilder_ == null) {
        transactionDateTime_ = null;
      } else {
        transactionDateTime_ = null;
        transactionDateTimeBuilder_ = null;
      }
      transactionType_ = 0;

      clientId_ = "";

      transactionId_ = "";

      securityId_ = "";

      exchange_ = 0;

      board_ = "";

      ticker_ = "";

      tradeOrderId_ = 0L;

      if (qtyLotsBuilder_ == null) {
        qtyLots_ = null;
      } else {
        qtyLots_ = null;
        qtyLotsBuilder_ = null;
      }
      if (createdAtBuilder_ == null) {
        createdAt_ = null;
      } else {
        createdAt_ = null;
        createdAtBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return dominvest.backend.core.model.PortfolioAtheneService.internal_static_dominvest_backend_core_model_Transaction_descriptor;
    }

    @java.lang.Override
    public dominvest.backend.core.model.Transaction getDefaultInstanceForType() {
      return dominvest.backend.core.model.Transaction.getDefaultInstance();
    }

    @java.lang.Override
    public dominvest.backend.core.model.Transaction build() {
      dominvest.backend.core.model.Transaction result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public dominvest.backend.core.model.Transaction buildPartial() {
      dominvest.backend.core.model.Transaction result = new dominvest.backend.core.model.Transaction(this);
      result.id_ = id_;
      if (transactionDateTimeBuilder_ == null) {
        result.transactionDateTime_ = transactionDateTime_;
      } else {
        result.transactionDateTime_ = transactionDateTimeBuilder_.build();
      }
      result.transactionType_ = transactionType_;
      result.clientId_ = clientId_;
      result.transactionId_ = transactionId_;
      result.securityId_ = securityId_;
      result.exchange_ = exchange_;
      result.board_ = board_;
      result.ticker_ = ticker_;
      result.tradeOrderId_ = tradeOrderId_;
      if (qtyLotsBuilder_ == null) {
        result.qtyLots_ = qtyLots_;
      } else {
        result.qtyLots_ = qtyLotsBuilder_.build();
      }
      if (createdAtBuilder_ == null) {
        result.createdAt_ = createdAt_;
      } else {
        result.createdAt_ = createdAtBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof dominvest.backend.core.model.Transaction) {
        return mergeFrom((dominvest.backend.core.model.Transaction)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(dominvest.backend.core.model.Transaction other) {
      if (other == dominvest.backend.core.model.Transaction.getDefaultInstance()) return this;
      if (other.getId() != 0L) {
        setId(other.getId());
      }
      if (other.hasTransactionDateTime()) {
        mergeTransactionDateTime(other.getTransactionDateTime());
      }
      if (other.transactionType_ != 0) {
        setTransactionTypeValue(other.getTransactionTypeValue());
      }
      if (!other.getClientId().isEmpty()) {
        clientId_ = other.clientId_;
        onChanged();
      }
      if (!other.getTransactionId().isEmpty()) {
        transactionId_ = other.transactionId_;
        onChanged();
      }
      if (!other.getSecurityId().isEmpty()) {
        securityId_ = other.securityId_;
        onChanged();
      }
      if (other.exchange_ != 0) {
        setExchangeValue(other.getExchangeValue());
      }
      if (!other.getBoard().isEmpty()) {
        board_ = other.board_;
        onChanged();
      }
      if (!other.getTicker().isEmpty()) {
        ticker_ = other.ticker_;
        onChanged();
      }
      if (other.getTradeOrderId() != 0L) {
        setTradeOrderId(other.getTradeOrderId());
      }
      if (other.hasQtyLots()) {
        mergeQtyLots(other.getQtyLots());
      }
      if (other.hasCreatedAt()) {
        mergeCreatedAt(other.getCreatedAt());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      dominvest.backend.core.model.Transaction parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (dominvest.backend.core.model.Transaction) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private long id_ ;
    /**
     * <pre>
     * id записи из таблицы транзакций
     * </pre>
     *
     * <code>uint64 id = 1;</code>
     */
    public long getId() {
      return id_;
    }
    /**
     * <pre>
     * id записи из таблицы транзакций
     * </pre>
     *
     * <code>uint64 id = 1;</code>
     */
    public Builder setId(long value) {
      
      id_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * id записи из таблицы транзакций
     * </pre>
     *
     * <code>uint64 id = 1;</code>
     */
    public Builder clearId() {
      
      id_ = 0L;
      onChanged();
      return this;
    }

    private dominvest.backend.core.model.DateTime transactionDateTime_;
    private com.google.protobuf.SingleFieldBuilderV3<
        dominvest.backend.core.model.DateTime, dominvest.backend.core.model.DateTime.Builder, dominvest.backend.core.model.DateTimeOrBuilder> transactionDateTimeBuilder_;
    /**
     * <pre>
     * Дата и время операции (из колонок date, time)
     * </pre>
     *
     * <code>.dominvest.backend.core.model.DateTime transactionDateTime = 2;</code>
     */
    public boolean hasTransactionDateTime() {
      return transactionDateTimeBuilder_ != null || transactionDateTime_ != null;
    }
    /**
     * <pre>
     * Дата и время операции (из колонок date, time)
     * </pre>
     *
     * <code>.dominvest.backend.core.model.DateTime transactionDateTime = 2;</code>
     */
    public dominvest.backend.core.model.DateTime getTransactionDateTime() {
      if (transactionDateTimeBuilder_ == null) {
        return transactionDateTime_ == null ? dominvest.backend.core.model.DateTime.getDefaultInstance() : transactionDateTime_;
      } else {
        return transactionDateTimeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Дата и время операции (из колонок date, time)
     * </pre>
     *
     * <code>.dominvest.backend.core.model.DateTime transactionDateTime = 2;</code>
     */
    public Builder setTransactionDateTime(dominvest.backend.core.model.DateTime value) {
      if (transactionDateTimeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        transactionDateTime_ = value;
        onChanged();
      } else {
        transactionDateTimeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Дата и время операции (из колонок date, time)
     * </pre>
     *
     * <code>.dominvest.backend.core.model.DateTime transactionDateTime = 2;</code>
     */
    public Builder setTransactionDateTime(
        dominvest.backend.core.model.DateTime.Builder builderForValue) {
      if (transactionDateTimeBuilder_ == null) {
        transactionDateTime_ = builderForValue.build();
        onChanged();
      } else {
        transactionDateTimeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Дата и время операции (из колонок date, time)
     * </pre>
     *
     * <code>.dominvest.backend.core.model.DateTime transactionDateTime = 2;</code>
     */
    public Builder mergeTransactionDateTime(dominvest.backend.core.model.DateTime value) {
      if (transactionDateTimeBuilder_ == null) {
        if (transactionDateTime_ != null) {
          transactionDateTime_ =
            dominvest.backend.core.model.DateTime.newBuilder(transactionDateTime_).mergeFrom(value).buildPartial();
        } else {
          transactionDateTime_ = value;
        }
        onChanged();
      } else {
        transactionDateTimeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Дата и время операции (из колонок date, time)
     * </pre>
     *
     * <code>.dominvest.backend.core.model.DateTime transactionDateTime = 2;</code>
     */
    public Builder clearTransactionDateTime() {
      if (transactionDateTimeBuilder_ == null) {
        transactionDateTime_ = null;
        onChanged();
      } else {
        transactionDateTime_ = null;
        transactionDateTimeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Дата и время операции (из колонок date, time)
     * </pre>
     *
     * <code>.dominvest.backend.core.model.DateTime transactionDateTime = 2;</code>
     */
    public dominvest.backend.core.model.DateTime.Builder getTransactionDateTimeBuilder() {
      
      onChanged();
      return getTransactionDateTimeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Дата и время операции (из колонок date, time)
     * </pre>
     *
     * <code>.dominvest.backend.core.model.DateTime transactionDateTime = 2;</code>
     */
    public dominvest.backend.core.model.DateTimeOrBuilder getTransactionDateTimeOrBuilder() {
      if (transactionDateTimeBuilder_ != null) {
        return transactionDateTimeBuilder_.getMessageOrBuilder();
      } else {
        return transactionDateTime_ == null ?
            dominvest.backend.core.model.DateTime.getDefaultInstance() : transactionDateTime_;
      }
    }
    /**
     * <pre>
     * Дата и время операции (из колонок date, time)
     * </pre>
     *
     * <code>.dominvest.backend.core.model.DateTime transactionDateTime = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        dominvest.backend.core.model.DateTime, dominvest.backend.core.model.DateTime.Builder, dominvest.backend.core.model.DateTimeOrBuilder> 
        getTransactionDateTimeFieldBuilder() {
      if (transactionDateTimeBuilder_ == null) {
        transactionDateTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            dominvest.backend.core.model.DateTime, dominvest.backend.core.model.DateTime.Builder, dominvest.backend.core.model.DateTimeOrBuilder>(
                getTransactionDateTime(),
                getParentForChildren(),
                isClean());
        transactionDateTime_ = null;
      }
      return transactionDateTimeBuilder_;
    }

    private int transactionType_ = 0;
    /**
     * <pre>
     * Значение из колонки type
     * </pre>
     *
     * <code>.dominvest.backend.core.model.txn.TransactionType transactionType = 3;</code>
     */
    public int getTransactionTypeValue() {
      return transactionType_;
    }
    /**
     * <pre>
     * Значение из колонки type
     * </pre>
     *
     * <code>.dominvest.backend.core.model.txn.TransactionType transactionType = 3;</code>
     */
    public Builder setTransactionTypeValue(int value) {
      transactionType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Значение из колонки type
     * </pre>
     *
     * <code>.dominvest.backend.core.model.txn.TransactionType transactionType = 3;</code>
     */
    public dominvest.backend.core.model.txn.TransactionTypeOuterClass.TransactionType getTransactionType() {
      @SuppressWarnings("deprecation")
      dominvest.backend.core.model.txn.TransactionTypeOuterClass.TransactionType result = dominvest.backend.core.model.txn.TransactionTypeOuterClass.TransactionType.valueOf(transactionType_);
      return result == null ? dominvest.backend.core.model.txn.TransactionTypeOuterClass.TransactionType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Значение из колонки type
     * </pre>
     *
     * <code>.dominvest.backend.core.model.txn.TransactionType transactionType = 3;</code>
     */
    public Builder setTransactionType(dominvest.backend.core.model.txn.TransactionTypeOuterClass.TransactionType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      transactionType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Значение из колонки type
     * </pre>
     *
     * <code>.dominvest.backend.core.model.txn.TransactionType transactionType = 3;</code>
     */
    public Builder clearTransactionType() {
      
      transactionType_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object clientId_ = "";
    /**
     * <pre>
     * </pre>
     *
     * <code>string clientId = 4;</code>
     */
    public java.lang.String getClientId() {
      java.lang.Object ref = clientId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        clientId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * </pre>
     *
     * <code>string clientId = 4;</code>
     */
    public com.google.protobuf.ByteString
        getClientIdBytes() {
      java.lang.Object ref = clientId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        clientId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * </pre>
     *
     * <code>string clientId = 4;</code>
     */
    public Builder setClientId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      clientId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * </pre>
     *
     * <code>string clientId = 4;</code>
     */
    public Builder clearClientId() {
      
      clientId_ = getDefaultInstance().getClientId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * </pre>
     *
     * <code>string clientId = 4;</code>
     */
    public Builder setClientIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      clientId_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object transactionId_ = "";
    /**
     * <pre>
     * </pre>
     *
     * <code>string transactionId = 5;</code>
     */
    public java.lang.String getTransactionId() {
      java.lang.Object ref = transactionId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        transactionId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * </pre>
     *
     * <code>string transactionId = 5;</code>
     */
    public com.google.protobuf.ByteString
        getTransactionIdBytes() {
      java.lang.Object ref = transactionId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        transactionId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * </pre>
     *
     * <code>string transactionId = 5;</code>
     */
    public Builder setTransactionId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      transactionId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * </pre>
     *
     * <code>string transactionId = 5;</code>
     */
    public Builder clearTransactionId() {
      
      transactionId_ = getDefaultInstance().getTransactionId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * </pre>
     *
     * <code>string transactionId = 5;</code>
     */
    public Builder setTransactionIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      transactionId_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object securityId_ = "";
    /**
     * <pre>
     * id инструмента
     * </pre>
     *
     * <code>string securityId = 6;</code>
     */
    public java.lang.String getSecurityId() {
      java.lang.Object ref = securityId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        securityId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * id инструмента
     * </pre>
     *
     * <code>string securityId = 6;</code>
     */
    public com.google.protobuf.ByteString
        getSecurityIdBytes() {
      java.lang.Object ref = securityId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        securityId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * id инструмента
     * </pre>
     *
     * <code>string securityId = 6;</code>
     */
    public Builder setSecurityId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      securityId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * id инструмента
     * </pre>
     *
     * <code>string securityId = 6;</code>
     */
    public Builder clearSecurityId() {
      
      securityId_ = getDefaultInstance().getSecurityId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * id инструмента
     * </pre>
     *
     * <code>string securityId = 6;</code>
     */
    public Builder setSecurityIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      securityId_ = value;
      onChanged();
      return this;
    }

    private int exchange_ = 0;
    /**
     * <pre>
     * Биржа, например, MOEX
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Exchange exchange = 7;</code>
     */
    public int getExchangeValue() {
      return exchange_;
    }
    /**
     * <pre>
     * Биржа, например, MOEX
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Exchange exchange = 7;</code>
     */
    public Builder setExchangeValue(int value) {
      exchange_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Биржа, например, MOEX
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Exchange exchange = 7;</code>
     */
    public dominvest.backend.core.model.Exchange getExchange() {
      @SuppressWarnings("deprecation")
      dominvest.backend.core.model.Exchange result = dominvest.backend.core.model.Exchange.valueOf(exchange_);
      return result == null ? dominvest.backend.core.model.Exchange.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Биржа, например, MOEX
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Exchange exchange = 7;</code>
     */
    public Builder setExchange(dominvest.backend.core.model.Exchange value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      exchange_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Биржа, например, MOEX
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Exchange exchange = 7;</code>
     */
    public Builder clearExchange() {
      
      exchange_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object board_ = "";
    /**
     * <pre>
     * Борда биржи, например TQOB
     * </pre>
     *
     * <code>string board = 8;</code>
     */
    public java.lang.String getBoard() {
      java.lang.Object ref = board_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        board_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Борда биржи, например TQOB
     * </pre>
     *
     * <code>string board = 8;</code>
     */
    public com.google.protobuf.ByteString
        getBoardBytes() {
      java.lang.Object ref = board_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        board_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Борда биржи, например TQOB
     * </pre>
     *
     * <code>string board = 8;</code>
     */
    public Builder setBoard(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      board_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Борда биржи, например TQOB
     * </pre>
     *
     * <code>string board = 8;</code>
     */
    public Builder clearBoard() {
      
      board_ = getDefaultInstance().getBoard();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Борда биржи, например TQOB
     * </pre>
     *
     * <code>string board = 8;</code>
     */
    public Builder setBoardBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      board_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object ticker_ = "";
    /**
     * <pre>
     * Тикер
     * </pre>
     *
     * <code>string ticker = 9;</code>
     */
    public java.lang.String getTicker() {
      java.lang.Object ref = ticker_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        ticker_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Тикер
     * </pre>
     *
     * <code>string ticker = 9;</code>
     */
    public com.google.protobuf.ByteString
        getTickerBytes() {
      java.lang.Object ref = ticker_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ticker_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Тикер
     * </pre>
     *
     * <code>string ticker = 9;</code>
     */
    public Builder setTicker(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      ticker_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Тикер
     * </pre>
     *
     * <code>string ticker = 9;</code>
     */
    public Builder clearTicker() {
      
      ticker_ = getDefaultInstance().getTicker();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Тикер
     * </pre>
     *
     * <code>string ticker = 9;</code>
     */
    public Builder setTickerBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      ticker_ = value;
      onChanged();
      return this;
    }

    private long tradeOrderId_ ;
    /**
     * <code>uint64 tradeOrderId = 10;</code>
     */
    public long getTradeOrderId() {
      return tradeOrderId_;
    }
    /**
     * <code>uint64 tradeOrderId = 10;</code>
     */
    public Builder setTradeOrderId(long value) {
      
      tradeOrderId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint64 tradeOrderId = 10;</code>
     */
    public Builder clearTradeOrderId() {
      
      tradeOrderId_ = 0L;
      onChanged();
      return this;
    }

    private dominvest.backend.core.model.Decimal qtyLots_;
    private com.google.protobuf.SingleFieldBuilderV3<
        dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder> qtyLotsBuilder_;
    /**
     * <pre>
     * Кол-во лотов из колонки qty_lots
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal qtyLots = 11;</code>
     */
    public boolean hasQtyLots() {
      return qtyLotsBuilder_ != null || qtyLots_ != null;
    }
    /**
     * <pre>
     * Кол-во лотов из колонки qty_lots
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal qtyLots = 11;</code>
     */
    public dominvest.backend.core.model.Decimal getQtyLots() {
      if (qtyLotsBuilder_ == null) {
        return qtyLots_ == null ? dominvest.backend.core.model.Decimal.getDefaultInstance() : qtyLots_;
      } else {
        return qtyLotsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Кол-во лотов из колонки qty_lots
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal qtyLots = 11;</code>
     */
    public Builder setQtyLots(dominvest.backend.core.model.Decimal value) {
      if (qtyLotsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        qtyLots_ = value;
        onChanged();
      } else {
        qtyLotsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Кол-во лотов из колонки qty_lots
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal qtyLots = 11;</code>
     */
    public Builder setQtyLots(
        dominvest.backend.core.model.Decimal.Builder builderForValue) {
      if (qtyLotsBuilder_ == null) {
        qtyLots_ = builderForValue.build();
        onChanged();
      } else {
        qtyLotsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Кол-во лотов из колонки qty_lots
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal qtyLots = 11;</code>
     */
    public Builder mergeQtyLots(dominvest.backend.core.model.Decimal value) {
      if (qtyLotsBuilder_ == null) {
        if (qtyLots_ != null) {
          qtyLots_ =
            dominvest.backend.core.model.Decimal.newBuilder(qtyLots_).mergeFrom(value).buildPartial();
        } else {
          qtyLots_ = value;
        }
        onChanged();
      } else {
        qtyLotsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Кол-во лотов из колонки qty_lots
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal qtyLots = 11;</code>
     */
    public Builder clearQtyLots() {
      if (qtyLotsBuilder_ == null) {
        qtyLots_ = null;
        onChanged();
      } else {
        qtyLots_ = null;
        qtyLotsBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Кол-во лотов из колонки qty_lots
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal qtyLots = 11;</code>
     */
    public dominvest.backend.core.model.Decimal.Builder getQtyLotsBuilder() {
      
      onChanged();
      return getQtyLotsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Кол-во лотов из колонки qty_lots
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal qtyLots = 11;</code>
     */
    public dominvest.backend.core.model.DecimalOrBuilder getQtyLotsOrBuilder() {
      if (qtyLotsBuilder_ != null) {
        return qtyLotsBuilder_.getMessageOrBuilder();
      } else {
        return qtyLots_ == null ?
            dominvest.backend.core.model.Decimal.getDefaultInstance() : qtyLots_;
      }
    }
    /**
     * <pre>
     * Кол-во лотов из колонки qty_lots
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal qtyLots = 11;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder> 
        getQtyLotsFieldBuilder() {
      if (qtyLotsBuilder_ == null) {
        qtyLotsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder>(
                getQtyLots(),
                getParentForChildren(),
                isClean());
        qtyLots_ = null;
      }
      return qtyLotsBuilder_;
    }

    private dominvest.backend.core.model.DateTime createdAt_;
    private com.google.protobuf.SingleFieldBuilderV3<
        dominvest.backend.core.model.DateTime, dominvest.backend.core.model.DateTime.Builder, dominvest.backend.core.model.DateTimeOrBuilder> createdAtBuilder_;
    /**
     * <pre>
     * Дата и время создания записи (из колонки created_at)
     * </pre>
     *
     * <code>.dominvest.backend.core.model.DateTime createdAt = 12;</code>
     */
    public boolean hasCreatedAt() {
      return createdAtBuilder_ != null || createdAt_ != null;
    }
    /**
     * <pre>
     * Дата и время создания записи (из колонки created_at)
     * </pre>
     *
     * <code>.dominvest.backend.core.model.DateTime createdAt = 12;</code>
     */
    public dominvest.backend.core.model.DateTime getCreatedAt() {
      if (createdAtBuilder_ == null) {
        return createdAt_ == null ? dominvest.backend.core.model.DateTime.getDefaultInstance() : createdAt_;
      } else {
        return createdAtBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Дата и время создания записи (из колонки created_at)
     * </pre>
     *
     * <code>.dominvest.backend.core.model.DateTime createdAt = 12;</code>
     */
    public Builder setCreatedAt(dominvest.backend.core.model.DateTime value) {
      if (createdAtBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        createdAt_ = value;
        onChanged();
      } else {
        createdAtBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Дата и время создания записи (из колонки created_at)
     * </pre>
     *
     * <code>.dominvest.backend.core.model.DateTime createdAt = 12;</code>
     */
    public Builder setCreatedAt(
        dominvest.backend.core.model.DateTime.Builder builderForValue) {
      if (createdAtBuilder_ == null) {
        createdAt_ = builderForValue.build();
        onChanged();
      } else {
        createdAtBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Дата и время создания записи (из колонки created_at)
     * </pre>
     *
     * <code>.dominvest.backend.core.model.DateTime createdAt = 12;</code>
     */
    public Builder mergeCreatedAt(dominvest.backend.core.model.DateTime value) {
      if (createdAtBuilder_ == null) {
        if (createdAt_ != null) {
          createdAt_ =
            dominvest.backend.core.model.DateTime.newBuilder(createdAt_).mergeFrom(value).buildPartial();
        } else {
          createdAt_ = value;
        }
        onChanged();
      } else {
        createdAtBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Дата и время создания записи (из колонки created_at)
     * </pre>
     *
     * <code>.dominvest.backend.core.model.DateTime createdAt = 12;</code>
     */
    public Builder clearCreatedAt() {
      if (createdAtBuilder_ == null) {
        createdAt_ = null;
        onChanged();
      } else {
        createdAt_ = null;
        createdAtBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Дата и время создания записи (из колонки created_at)
     * </pre>
     *
     * <code>.dominvest.backend.core.model.DateTime createdAt = 12;</code>
     */
    public dominvest.backend.core.model.DateTime.Builder getCreatedAtBuilder() {
      
      onChanged();
      return getCreatedAtFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Дата и время создания записи (из колонки created_at)
     * </pre>
     *
     * <code>.dominvest.backend.core.model.DateTime createdAt = 12;</code>
     */
    public dominvest.backend.core.model.DateTimeOrBuilder getCreatedAtOrBuilder() {
      if (createdAtBuilder_ != null) {
        return createdAtBuilder_.getMessageOrBuilder();
      } else {
        return createdAt_ == null ?
            dominvest.backend.core.model.DateTime.getDefaultInstance() : createdAt_;
      }
    }
    /**
     * <pre>
     * Дата и время создания записи (из колонки created_at)
     * </pre>
     *
     * <code>.dominvest.backend.core.model.DateTime createdAt = 12;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        dominvest.backend.core.model.DateTime, dominvest.backend.core.model.DateTime.Builder, dominvest.backend.core.model.DateTimeOrBuilder> 
        getCreatedAtFieldBuilder() {
      if (createdAtBuilder_ == null) {
        createdAtBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            dominvest.backend.core.model.DateTime, dominvest.backend.core.model.DateTime.Builder, dominvest.backend.core.model.DateTimeOrBuilder>(
                getCreatedAt(),
                getParentForChildren(),
                isClean());
        createdAt_ = null;
      }
      return createdAtBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:dominvest.backend.core.model.Transaction)
  }

  // @@protoc_insertion_point(class_scope:dominvest.backend.core.model.Transaction)
  private static final dominvest.backend.core.model.Transaction DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new dominvest.backend.core.model.Transaction();
  }

  public static dominvest.backend.core.model.Transaction getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Transaction>
      PARSER = new com.google.protobuf.AbstractParser<Transaction>() {
    @java.lang.Override
    public Transaction parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Transaction(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Transaction> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Transaction> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public dominvest.backend.core.model.Transaction getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

