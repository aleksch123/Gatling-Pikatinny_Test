// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: OrderStatus.proto

package dominvest.backend.core.model;

/**
 * Protobuf enum {@code dominvest.backend.core.model.OrderStatus}
 */
public enum OrderStatus
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   *null
   * </pre>
   *
   * <code>NO_STATUS = 0;</code>
   */
  NO_STATUS(0),
  /**
   * <pre>
   *new
   * </pre>
   *
   * <code>NEW = 1;</code>
   */
  NEW(1),
  /**
   * <pre>
   *limits_approved
   * </pre>
   *
   * <code>NEW_LIMITS_APPROVED = 2;</code>
   */
  NEW_LIMITS_APPROVED(2),
  /**
   * <pre>
   *placed
   * </pre>
   *
   * <code>PLACED = 3;</code>
   */
  PLACED(3),
  /**
   * <pre>
   *placed_updated
   * </pre>
   *
   * <code>PLACED_IN_PROGRESS = 4;</code>
   */
  PLACED_IN_PROGRESS(4),
  /**
   * <pre>
   *part_filled
   * </pre>
   *
   * <code>PLACED_PART_FILLED = 5;</code>
   */
  PLACED_PART_FILLED(5),
  /**
   * <pre>
   *filled
   * </pre>
   *
   * <code>PLACED_FILLED = 6;</code>
   */
  PLACED_FILLED(6),
  /**
   * <pre>
   *wasn't placed on market, pending decline
   * </pre>
   *
   * <code>PENDING_DECLINE = 7;</code>
   */
  PENDING_DECLINE(7),
  /**
   * <pre>
   *wasnt placed on market, declined
   * </pre>
   *
   * <code>DECLINED = 8;</code>
   */
  DECLINED(8),
  /**
   * <pre>
   *canceled
   * </pre>
   *
   * <code>PENDING_CANCEL = 9;</code>
   */
  PENDING_CANCEL(9),
  /**
   * <pre>
   *was placed on market, canceled
   * </pre>
   *
   * <code>CANCELED = 10;</code>
   */
  CANCELED(10),
  /**
   * <pre>
   * canceled unsolicitedly due to session end, COD, etc. For gate internal use
   * </pre>
   *
   * <code>UNSOLICITED_CANCEL = 11;</code>
   */
  UNSOLICITED_CANCEL(11),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   *null
   * </pre>
   *
   * <code>NO_STATUS = 0;</code>
   */
  public static final int NO_STATUS_VALUE = 0;
  /**
   * <pre>
   *new
   * </pre>
   *
   * <code>NEW = 1;</code>
   */
  public static final int NEW_VALUE = 1;
  /**
   * <pre>
   *limits_approved
   * </pre>
   *
   * <code>NEW_LIMITS_APPROVED = 2;</code>
   */
  public static final int NEW_LIMITS_APPROVED_VALUE = 2;
  /**
   * <pre>
   *placed
   * </pre>
   *
   * <code>PLACED = 3;</code>
   */
  public static final int PLACED_VALUE = 3;
  /**
   * <pre>
   *placed_updated
   * </pre>
   *
   * <code>PLACED_IN_PROGRESS = 4;</code>
   */
  public static final int PLACED_IN_PROGRESS_VALUE = 4;
  /**
   * <pre>
   *part_filled
   * </pre>
   *
   * <code>PLACED_PART_FILLED = 5;</code>
   */
  public static final int PLACED_PART_FILLED_VALUE = 5;
  /**
   * <pre>
   *filled
   * </pre>
   *
   * <code>PLACED_FILLED = 6;</code>
   */
  public static final int PLACED_FILLED_VALUE = 6;
  /**
   * <pre>
   *wasn't placed on market, pending decline
   * </pre>
   *
   * <code>PENDING_DECLINE = 7;</code>
   */
  public static final int PENDING_DECLINE_VALUE = 7;
  /**
   * <pre>
   *wasnt placed on market, declined
   * </pre>
   *
   * <code>DECLINED = 8;</code>
   */
  public static final int DECLINED_VALUE = 8;
  /**
   * <pre>
   *canceled
   * </pre>
   *
   * <code>PENDING_CANCEL = 9;</code>
   */
  public static final int PENDING_CANCEL_VALUE = 9;
  /**
   * <pre>
   *was placed on market, canceled
   * </pre>
   *
   * <code>CANCELED = 10;</code>
   */
  public static final int CANCELED_VALUE = 10;
  /**
   * <pre>
   * canceled unsolicitedly due to session end, COD, etc. For gate internal use
   * </pre>
   *
   * <code>UNSOLICITED_CANCEL = 11;</code>
   */
  public static final int UNSOLICITED_CANCEL_VALUE = 11;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static OrderStatus valueOf(int value) {
    return forNumber(value);
  }

  public static OrderStatus forNumber(int value) {
    switch (value) {
      case 0: return NO_STATUS;
      case 1: return NEW;
      case 2: return NEW_LIMITS_APPROVED;
      case 3: return PLACED;
      case 4: return PLACED_IN_PROGRESS;
      case 5: return PLACED_PART_FILLED;
      case 6: return PLACED_FILLED;
      case 7: return PENDING_DECLINE;
      case 8: return DECLINED;
      case 9: return PENDING_CANCEL;
      case 10: return CANCELED;
      case 11: return UNSOLICITED_CANCEL;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<OrderStatus>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      OrderStatus> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<OrderStatus>() {
          public OrderStatus findValueByNumber(int number) {
            return OrderStatus.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return dominvest.backend.core.model.OrderStatusOuterClass.getDescriptor().getEnumTypes().get(0);
  }

  private static final OrderStatus[] VALUES = values();

  public static OrderStatus valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private OrderStatus(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:dominvest.backend.core.model.OrderStatus)
}

