// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Position.proto

package dominvest.backend.core.model;

public interface PositionOrBuilder extends
    // @@protoc_insertion_point(interface_extends:dominvest.backend.core.model.Position)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.dominvest.backend.core.model.Date date = 1;</code>
   */
  boolean hasDate();
  /**
   * <code>.dominvest.backend.core.model.Date date = 1;</code>
   */
  dominvest.backend.core.model.Date getDate();
  /**
   * <code>.dominvest.backend.core.model.Date date = 1;</code>
   */
  dominvest.backend.core.model.DateOrBuilder getDateOrBuilder();

  /**
   * <pre>
   *идентификатор клиента
   * </pre>
   *
   * <code>string clientId = 2;</code>
   */
  java.lang.String getClientId();
  /**
   * <pre>
   *идентификатор клиента
   * </pre>
   *
   * <code>string clientId = 2;</code>
   */
  com.google.protobuf.ByteString
      getClientIdBytes();

  /**
   * <pre>
   *id бумаги как &lt;id бумаги в бэк-офисе&gt;.&lt;биржа&gt;.&lt;борда&gt;
   * </pre>
   *
   * <code>string securityId = 3;</code>
   */
  java.lang.String getSecurityId();
  /**
   * <pre>
   *id бумаги как &lt;id бумаги в бэк-офисе&gt;.&lt;биржа&gt;.&lt;борда&gt;
   * </pre>
   *
   * <code>string securityId = 3;</code>
   */
  com.google.protobuf.ByteString
      getSecurityIdBytes();

  /**
   * <pre>
   *тип инструмента
   * </pre>
   *
   * <code>.dominvest.backend.core.model.SecurityType securityType = 4;</code>
   */
  int getSecurityTypeValue();
  /**
   * <pre>
   *тип инструмента
   * </pre>
   *
   * <code>.dominvest.backend.core.model.SecurityType securityType = 4;</code>
   */
  dominvest.backend.core.model.SecurityTypeOuterClass.SecurityType getSecurityType();

  /**
   * <pre>
   *тикер на бирже
   * </pre>
   *
   * <code>string ticker = 5;</code>
   */
  java.lang.String getTicker();
  /**
   * <pre>
   *тикер на бирже
   * </pre>
   *
   * <code>string ticker = 5;</code>
   */
  com.google.protobuf.ByteString
      getTickerBytes();

  /**
   * <pre>
   *биржа
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Exchange exchange = 6;</code>
   */
  int getExchangeValue();
  /**
   * <pre>
   *биржа
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Exchange exchange = 6;</code>
   */
  dominvest.backend.core.model.Exchange getExchange();

  /**
   * <pre>
   *классификатор борды
   * </pre>
   *
   * <code>string board = 7;</code>
   */
  java.lang.String getBoard();
  /**
   * <pre>
   *классификатор борды
   * </pre>
   *
   * <code>string board = 7;</code>
   */
  com.google.protobuf.ByteString
      getBoardBytes();

  /**
   * <pre>
   *валюта инструмента
   * </pre>
   *
   * <code>string currency = 8;</code>
   */
  java.lang.String getCurrency();
  /**
   * <pre>
   *валюта инструмента
   * </pre>
   *
   * <code>string currency = 8;</code>
   */
  com.google.protobuf.ByteString
      getCurrencyBytes();

  /**
   * <pre>
   *плановая позиция в T0
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal qtyT0 = 9;</code>
   */
  boolean hasQtyT0();
  /**
   * <pre>
   *плановая позиция в T0
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal qtyT0 = 9;</code>
   */
  dominvest.backend.core.model.Decimal getQtyT0();
  /**
   * <pre>
   *плановая позиция в T0
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal qtyT0 = 9;</code>
   */
  dominvest.backend.core.model.DecimalOrBuilder getQtyT0OrBuilder();

  /**
   * <pre>
   *плановая позиция в T+1
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal qtyT1 = 10;</code>
   */
  boolean hasQtyT1();
  /**
   * <pre>
   *плановая позиция в T+1
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal qtyT1 = 10;</code>
   */
  dominvest.backend.core.model.Decimal getQtyT1();
  /**
   * <pre>
   *плановая позиция в T+1
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal qtyT1 = 10;</code>
   */
  dominvest.backend.core.model.DecimalOrBuilder getQtyT1OrBuilder();

  /**
   * <pre>
   *плановая позиция в T+2
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal qtyT2 = 11;</code>
   */
  boolean hasQtyT2();
  /**
   * <pre>
   *плановая позиция в T+2
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal qtyT2 = 11;</code>
   */
  dominvest.backend.core.model.Decimal getQtyT2();
  /**
   * <pre>
   *плановая позиция в T+2
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal qtyT2 = 11;</code>
   */
  dominvest.backend.core.model.DecimalOrBuilder getQtyT2OrBuilder();

  /**
   * <pre>
   *плановая позиция в Tn
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal qtyTn = 12;</code>
   */
  boolean hasQtyTn();
  /**
   * <pre>
   *плановая позиция в Tn
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal qtyTn = 12;</code>
   */
  dominvest.backend.core.model.Decimal getQtyTn();
  /**
   * <pre>
   *плановая позиция в Tn
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal qtyTn = 12;</code>
   */
  dominvest.backend.core.model.DecimalOrBuilder getQtyTnOrBuilder();

  /**
   * <pre>
   *total позиция как сумма T0 + T+1 + T+2 + Tn
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal qtyTotal = 13;</code>
   */
  boolean hasQtyTotal();
  /**
   * <pre>
   *total позиция как сумма T0 + T+1 + T+2 + Tn
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal qtyTotal = 13;</code>
   */
  dominvest.backend.core.model.Decimal getQtyTotal();
  /**
   * <pre>
   *total позиция как сумма T0 + T+1 + T+2 + Tn
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal qtyTotal = 13;</code>
   */
  dominvest.backend.core.model.DecimalOrBuilder getQtyTotalOrBuilder();

  /**
   * <pre>
   *total сумма заблокированных лимитов по позиции
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal blocked = 14;</code>
   */
  boolean hasBlocked();
  /**
   * <pre>
   *total сумма заблокированных лимитов по позиции
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal blocked = 14;</code>
   */
  dominvest.backend.core.model.Decimal getBlocked();
  /**
   * <pre>
   *total сумма заблокированных лимитов по позиции
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal blocked = 14;</code>
   */
  dominvest.backend.core.model.DecimalOrBuilder getBlockedOrBuilder();

  /**
   * <pre>
   * текущий номинал
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal faceValue = 15;</code>
   */
  boolean hasFaceValue();
  /**
   * <pre>
   * текущий номинал
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal faceValue = 15;</code>
   */
  dominvest.backend.core.model.Decimal getFaceValue();
  /**
   * <pre>
   * текущий номинал
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal faceValue = 15;</code>
   */
  dominvest.backend.core.model.DecimalOrBuilder getFaceValueOrBuilder();

  /**
   * <pre>
   *нкд
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal accrInterest = 16;</code>
   */
  boolean hasAccrInterest();
  /**
   * <pre>
   *нкд
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal accrInterest = 16;</code>
   */
  dominvest.backend.core.model.Decimal getAccrInterest();
  /**
   * <pre>
   *нкд
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal accrInterest = 16;</code>
   */
  dominvest.backend.core.model.DecimalOrBuilder getAccrInterestOrBuilder();

  /**
   * <pre>
   *средневзвеш. цена
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal wap = 17;</code>
   */
  boolean hasWap();
  /**
   * <pre>
   *средневзвеш. цена
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal wap = 17;</code>
   */
  dominvest.backend.core.model.Decimal getWap();
  /**
   * <pre>
   *средневзвеш. цена
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal wap = 17;</code>
   */
  dominvest.backend.core.model.DecimalOrBuilder getWapOrBuilder();

  /**
   * <pre>
   *цена закрытия
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal closePrice = 18;</code>
   */
  boolean hasClosePrice();
  /**
   * <pre>
   *цена закрытия
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal closePrice = 18;</code>
   */
  dominvest.backend.core.model.Decimal getClosePrice();
  /**
   * <pre>
   *цена закрытия
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal closePrice = 18;</code>
   */
  dominvest.backend.core.model.DecimalOrBuilder getClosePriceOrBuilder();

  /**
   * <pre>
   *текущая цена
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal currentPrice = 19;</code>
   */
  boolean hasCurrentPrice();
  /**
   * <pre>
   *текущая цена
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal currentPrice = 19;</code>
   */
  dominvest.backend.core.model.Decimal getCurrentPrice();
  /**
   * <pre>
   *текущая цена
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal currentPrice = 19;</code>
   */
  dominvest.backend.core.model.DecimalOrBuilder getCurrentPriceOrBuilder();

  /**
   * <pre>
   * реализованный profit&amp;loss
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal realPnL = 20;</code>
   */
  boolean hasRealPnL();
  /**
   * <pre>
   * реализованный profit&amp;loss
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal realPnL = 20;</code>
   */
  dominvest.backend.core.model.Decimal getRealPnL();
  /**
   * <pre>
   * реализованный profit&amp;loss
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal realPnL = 20;</code>
   */
  dominvest.backend.core.model.DecimalOrBuilder getRealPnLOrBuilder();

  /**
   * <pre>
   *нереализованный profit&amp;loss за все время
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal unRealPnL = 21;</code>
   */
  boolean hasUnRealPnL();
  /**
   * <pre>
   *нереализованный profit&amp;loss за все время
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal unRealPnL = 21;</code>
   */
  dominvest.backend.core.model.Decimal getUnRealPnL();
  /**
   * <pre>
   *нереализованный profit&amp;loss за все время
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal unRealPnL = 21;</code>
   */
  dominvest.backend.core.model.DecimalOrBuilder getUnRealPnLOrBuilder();

  /**
   * <pre>
   *нереализованный profit&amp;loss за день
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal dailyPnL = 22;</code>
   */
  boolean hasDailyPnL();
  /**
   * <pre>
   *нереализованный profit&amp;loss за день
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal dailyPnL = 22;</code>
   */
  dominvest.backend.core.model.Decimal getDailyPnL();
  /**
   * <pre>
   *нереализованный profit&amp;loss за день
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal dailyPnL = 22;</code>
   */
  dominvest.backend.core.model.DecimalOrBuilder getDailyPnLOrBuilder();

  /**
   * <pre>
   *нереализованный profit&amp;loss за месяц
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal monthlyPnL = 23;</code>
   */
  boolean hasMonthlyPnL();
  /**
   * <pre>
   *нереализованный profit&amp;loss за месяц
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal monthlyPnL = 23;</code>
   */
  dominvest.backend.core.model.Decimal getMonthlyPnL();
  /**
   * <pre>
   *нереализованный profit&amp;loss за месяц
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal monthlyPnL = 23;</code>
   */
  dominvest.backend.core.model.DecimalOrBuilder getMonthlyPnLOrBuilder();

  /**
   * <pre>
   *нереализованныйprofit&amp;loss за неделю
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal weeklyPnL = 24;</code>
   */
  boolean hasWeeklyPnL();
  /**
   * <pre>
   *нереализованныйprofit&amp;loss за неделю
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal weeklyPnL = 24;</code>
   */
  dominvest.backend.core.model.Decimal getWeeklyPnL();
  /**
   * <pre>
   *нереализованныйprofit&amp;loss за неделю
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal weeklyPnL = 24;</code>
   */
  dominvest.backend.core.model.DecimalOrBuilder getWeeklyPnLOrBuilder();

  /**
   * <pre>
   *нереализованный profit%loss за квартал
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal quarterlyPnL = 25;</code>
   */
  boolean hasQuarterlyPnL();
  /**
   * <pre>
   *нереализованный profit%loss за квартал
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal quarterlyPnL = 25;</code>
   */
  dominvest.backend.core.model.Decimal getQuarterlyPnL();
  /**
   * <pre>
   *нереализованный profit%loss за квартал
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal quarterlyPnL = 25;</code>
   */
  dominvest.backend.core.model.DecimalOrBuilder getQuarterlyPnLOrBuilder();

  /**
   * <pre>
   *нереализованный profit&amp;loss с начала года
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal yearlyPnL = 26;</code>
   */
  boolean hasYearlyPnL();
  /**
   * <pre>
   *нереализованный profit&amp;loss с начала года
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal yearlyPnL = 26;</code>
   */
  dominvest.backend.core.model.Decimal getYearlyPnL();
  /**
   * <pre>
   *нереализованный profit&amp;loss с начала года
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal yearlyPnL = 26;</code>
   */
  dominvest.backend.core.model.DecimalOrBuilder getYearlyPnLOrBuilder();

  /**
   * <code>string pactId = 27;</code>
   */
  java.lang.String getPactId();
  /**
   * <code>string pactId = 27;</code>
   */
  com.google.protobuf.ByteString
      getPactIdBytes();
}
