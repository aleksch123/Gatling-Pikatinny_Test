// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Position.proto

package dominvest.backend.core.model;

/**
 * Protobuf type {@code dominvest.backend.core.model.Position}
 */
public  final class Position extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:dominvest.backend.core.model.Position)
    PositionOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Position.newBuilder() to construct.
  private Position(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Position() {
    clientId_ = "";
    securityId_ = "";
    securityType_ = 0;
    ticker_ = "";
    exchange_ = 0;
    board_ = "";
    currency_ = "";
    pactId_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Position();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Position(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            dominvest.backend.core.model.Date.Builder subBuilder = null;
            if (date_ != null) {
              subBuilder = date_.toBuilder();
            }
            date_ = input.readMessage(dominvest.backend.core.model.Date.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(date_);
              date_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            clientId_ = s;
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            securityId_ = s;
            break;
          }
          case 32: {
            int rawValue = input.readEnum();

            securityType_ = rawValue;
            break;
          }
          case 42: {
            java.lang.String s = input.readStringRequireUtf8();

            ticker_ = s;
            break;
          }
          case 48: {
            int rawValue = input.readEnum();

            exchange_ = rawValue;
            break;
          }
          case 58: {
            java.lang.String s = input.readStringRequireUtf8();

            board_ = s;
            break;
          }
          case 66: {
            java.lang.String s = input.readStringRequireUtf8();

            currency_ = s;
            break;
          }
          case 74: {
            dominvest.backend.core.model.Decimal.Builder subBuilder = null;
            if (qtyT0_ != null) {
              subBuilder = qtyT0_.toBuilder();
            }
            qtyT0_ = input.readMessage(dominvest.backend.core.model.Decimal.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(qtyT0_);
              qtyT0_ = subBuilder.buildPartial();
            }

            break;
          }
          case 82: {
            dominvest.backend.core.model.Decimal.Builder subBuilder = null;
            if (qtyT1_ != null) {
              subBuilder = qtyT1_.toBuilder();
            }
            qtyT1_ = input.readMessage(dominvest.backend.core.model.Decimal.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(qtyT1_);
              qtyT1_ = subBuilder.buildPartial();
            }

            break;
          }
          case 90: {
            dominvest.backend.core.model.Decimal.Builder subBuilder = null;
            if (qtyT2_ != null) {
              subBuilder = qtyT2_.toBuilder();
            }
            qtyT2_ = input.readMessage(dominvest.backend.core.model.Decimal.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(qtyT2_);
              qtyT2_ = subBuilder.buildPartial();
            }

            break;
          }
          case 98: {
            dominvest.backend.core.model.Decimal.Builder subBuilder = null;
            if (qtyTn_ != null) {
              subBuilder = qtyTn_.toBuilder();
            }
            qtyTn_ = input.readMessage(dominvest.backend.core.model.Decimal.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(qtyTn_);
              qtyTn_ = subBuilder.buildPartial();
            }

            break;
          }
          case 106: {
            dominvest.backend.core.model.Decimal.Builder subBuilder = null;
            if (qtyTotal_ != null) {
              subBuilder = qtyTotal_.toBuilder();
            }
            qtyTotal_ = input.readMessage(dominvest.backend.core.model.Decimal.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(qtyTotal_);
              qtyTotal_ = subBuilder.buildPartial();
            }

            break;
          }
          case 114: {
            dominvest.backend.core.model.Decimal.Builder subBuilder = null;
            if (blocked_ != null) {
              subBuilder = blocked_.toBuilder();
            }
            blocked_ = input.readMessage(dominvest.backend.core.model.Decimal.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(blocked_);
              blocked_ = subBuilder.buildPartial();
            }

            break;
          }
          case 122: {
            dominvest.backend.core.model.Decimal.Builder subBuilder = null;
            if (faceValue_ != null) {
              subBuilder = faceValue_.toBuilder();
            }
            faceValue_ = input.readMessage(dominvest.backend.core.model.Decimal.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(faceValue_);
              faceValue_ = subBuilder.buildPartial();
            }

            break;
          }
          case 130: {
            dominvest.backend.core.model.Decimal.Builder subBuilder = null;
            if (accrInterest_ != null) {
              subBuilder = accrInterest_.toBuilder();
            }
            accrInterest_ = input.readMessage(dominvest.backend.core.model.Decimal.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(accrInterest_);
              accrInterest_ = subBuilder.buildPartial();
            }

            break;
          }
          case 138: {
            dominvest.backend.core.model.Decimal.Builder subBuilder = null;
            if (wap_ != null) {
              subBuilder = wap_.toBuilder();
            }
            wap_ = input.readMessage(dominvest.backend.core.model.Decimal.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(wap_);
              wap_ = subBuilder.buildPartial();
            }

            break;
          }
          case 146: {
            dominvest.backend.core.model.Decimal.Builder subBuilder = null;
            if (closePrice_ != null) {
              subBuilder = closePrice_.toBuilder();
            }
            closePrice_ = input.readMessage(dominvest.backend.core.model.Decimal.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(closePrice_);
              closePrice_ = subBuilder.buildPartial();
            }

            break;
          }
          case 154: {
            dominvest.backend.core.model.Decimal.Builder subBuilder = null;
            if (currentPrice_ != null) {
              subBuilder = currentPrice_.toBuilder();
            }
            currentPrice_ = input.readMessage(dominvest.backend.core.model.Decimal.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(currentPrice_);
              currentPrice_ = subBuilder.buildPartial();
            }

            break;
          }
          case 162: {
            dominvest.backend.core.model.Decimal.Builder subBuilder = null;
            if (realPnL_ != null) {
              subBuilder = realPnL_.toBuilder();
            }
            realPnL_ = input.readMessage(dominvest.backend.core.model.Decimal.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(realPnL_);
              realPnL_ = subBuilder.buildPartial();
            }

            break;
          }
          case 170: {
            dominvest.backend.core.model.Decimal.Builder subBuilder = null;
            if (unRealPnL_ != null) {
              subBuilder = unRealPnL_.toBuilder();
            }
            unRealPnL_ = input.readMessage(dominvest.backend.core.model.Decimal.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(unRealPnL_);
              unRealPnL_ = subBuilder.buildPartial();
            }

            break;
          }
          case 178: {
            dominvest.backend.core.model.Decimal.Builder subBuilder = null;
            if (dailyPnL_ != null) {
              subBuilder = dailyPnL_.toBuilder();
            }
            dailyPnL_ = input.readMessage(dominvest.backend.core.model.Decimal.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(dailyPnL_);
              dailyPnL_ = subBuilder.buildPartial();
            }

            break;
          }
          case 186: {
            dominvest.backend.core.model.Decimal.Builder subBuilder = null;
            if (monthlyPnL_ != null) {
              subBuilder = monthlyPnL_.toBuilder();
            }
            monthlyPnL_ = input.readMessage(dominvest.backend.core.model.Decimal.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(monthlyPnL_);
              monthlyPnL_ = subBuilder.buildPartial();
            }

            break;
          }
          case 194: {
            dominvest.backend.core.model.Decimal.Builder subBuilder = null;
            if (weeklyPnL_ != null) {
              subBuilder = weeklyPnL_.toBuilder();
            }
            weeklyPnL_ = input.readMessage(dominvest.backend.core.model.Decimal.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(weeklyPnL_);
              weeklyPnL_ = subBuilder.buildPartial();
            }

            break;
          }
          case 202: {
            dominvest.backend.core.model.Decimal.Builder subBuilder = null;
            if (quarterlyPnL_ != null) {
              subBuilder = quarterlyPnL_.toBuilder();
            }
            quarterlyPnL_ = input.readMessage(dominvest.backend.core.model.Decimal.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(quarterlyPnL_);
              quarterlyPnL_ = subBuilder.buildPartial();
            }

            break;
          }
          case 210: {
            dominvest.backend.core.model.Decimal.Builder subBuilder = null;
            if (yearlyPnL_ != null) {
              subBuilder = yearlyPnL_.toBuilder();
            }
            yearlyPnL_ = input.readMessage(dominvest.backend.core.model.Decimal.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(yearlyPnL_);
              yearlyPnL_ = subBuilder.buildPartial();
            }

            break;
          }
          case 218: {
            java.lang.String s = input.readStringRequireUtf8();

            pactId_ = s;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return dominvest.backend.core.model.PositionOuterClass.internal_static_dominvest_backend_core_model_Position_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return dominvest.backend.core.model.PositionOuterClass.internal_static_dominvest_backend_core_model_Position_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            dominvest.backend.core.model.Position.class, dominvest.backend.core.model.Position.Builder.class);
  }

  public static final int DATE_FIELD_NUMBER = 1;
  private dominvest.backend.core.model.Date date_;
  /**
   * <code>.dominvest.backend.core.model.Date date = 1;</code>
   */
  public boolean hasDate() {
    return date_ != null;
  }
  /**
   * <code>.dominvest.backend.core.model.Date date = 1;</code>
   */
  public dominvest.backend.core.model.Date getDate() {
    return date_ == null ? dominvest.backend.core.model.Date.getDefaultInstance() : date_;
  }
  /**
   * <code>.dominvest.backend.core.model.Date date = 1;</code>
   */
  public dominvest.backend.core.model.DateOrBuilder getDateOrBuilder() {
    return getDate();
  }

  public static final int CLIENTID_FIELD_NUMBER = 2;
  private volatile java.lang.Object clientId_;
  /**
   * <pre>
   *идентификатор клиента
   * </pre>
   *
   * <code>string clientId = 2;</code>
   */
  public java.lang.String getClientId() {
    java.lang.Object ref = clientId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      clientId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   *идентификатор клиента
   * </pre>
   *
   * <code>string clientId = 2;</code>
   */
  public com.google.protobuf.ByteString
      getClientIdBytes() {
    java.lang.Object ref = clientId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      clientId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SECURITYID_FIELD_NUMBER = 3;
  private volatile java.lang.Object securityId_;
  /**
   * <pre>
   *id бумаги как &lt;id бумаги в бэк-офисе&gt;.&lt;биржа&gt;.&lt;борда&gt;
   * </pre>
   *
   * <code>string securityId = 3;</code>
   */
  public java.lang.String getSecurityId() {
    java.lang.Object ref = securityId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      securityId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   *id бумаги как &lt;id бумаги в бэк-офисе&gt;.&lt;биржа&gt;.&lt;борда&gt;
   * </pre>
   *
   * <code>string securityId = 3;</code>
   */
  public com.google.protobuf.ByteString
      getSecurityIdBytes() {
    java.lang.Object ref = securityId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      securityId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SECURITYTYPE_FIELD_NUMBER = 4;
  private int securityType_;
  /**
   * <pre>
   *тип инструмента
   * </pre>
   *
   * <code>.dominvest.backend.core.model.SecurityType securityType = 4;</code>
   */
  public int getSecurityTypeValue() {
    return securityType_;
  }
  /**
   * <pre>
   *тип инструмента
   * </pre>
   *
   * <code>.dominvest.backend.core.model.SecurityType securityType = 4;</code>
   */
  public dominvest.backend.core.model.SecurityTypeOuterClass.SecurityType getSecurityType() {
    @SuppressWarnings("deprecation")
    dominvest.backend.core.model.SecurityTypeOuterClass.SecurityType result = dominvest.backend.core.model.SecurityTypeOuterClass.SecurityType.valueOf(securityType_);
    return result == null ? dominvest.backend.core.model.SecurityTypeOuterClass.SecurityType.UNRECOGNIZED : result;
  }

  public static final int TICKER_FIELD_NUMBER = 5;
  private volatile java.lang.Object ticker_;
  /**
   * <pre>
   *тикер на бирже
   * </pre>
   *
   * <code>string ticker = 5;</code>
   */
  public java.lang.String getTicker() {
    java.lang.Object ref = ticker_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      ticker_ = s;
      return s;
    }
  }
  /**
   * <pre>
   *тикер на бирже
   * </pre>
   *
   * <code>string ticker = 5;</code>
   */
  public com.google.protobuf.ByteString
      getTickerBytes() {
    java.lang.Object ref = ticker_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      ticker_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int EXCHANGE_FIELD_NUMBER = 6;
  private int exchange_;
  /**
   * <pre>
   *биржа
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Exchange exchange = 6;</code>
   */
  public int getExchangeValue() {
    return exchange_;
  }
  /**
   * <pre>
   *биржа
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Exchange exchange = 6;</code>
   */
  public dominvest.backend.core.model.Exchange getExchange() {
    @SuppressWarnings("deprecation")
    dominvest.backend.core.model.Exchange result = dominvest.backend.core.model.Exchange.valueOf(exchange_);
    return result == null ? dominvest.backend.core.model.Exchange.UNRECOGNIZED : result;
  }

  public static final int BOARD_FIELD_NUMBER = 7;
  private volatile java.lang.Object board_;
  /**
   * <pre>
   *классификатор борды
   * </pre>
   *
   * <code>string board = 7;</code>
   */
  public java.lang.String getBoard() {
    java.lang.Object ref = board_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      board_ = s;
      return s;
    }
  }
  /**
   * <pre>
   *классификатор борды
   * </pre>
   *
   * <code>string board = 7;</code>
   */
  public com.google.protobuf.ByteString
      getBoardBytes() {
    java.lang.Object ref = board_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      board_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CURRENCY_FIELD_NUMBER = 8;
  private volatile java.lang.Object currency_;
  /**
   * <pre>
   *валюта инструмента
   * </pre>
   *
   * <code>string currency = 8;</code>
   */
  public java.lang.String getCurrency() {
    java.lang.Object ref = currency_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      currency_ = s;
      return s;
    }
  }
  /**
   * <pre>
   *валюта инструмента
   * </pre>
   *
   * <code>string currency = 8;</code>
   */
  public com.google.protobuf.ByteString
      getCurrencyBytes() {
    java.lang.Object ref = currency_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      currency_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int QTYT0_FIELD_NUMBER = 9;
  private dominvest.backend.core.model.Decimal qtyT0_;
  /**
   * <pre>
   *плановая позиция в T0
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal qtyT0 = 9;</code>
   */
  public boolean hasQtyT0() {
    return qtyT0_ != null;
  }
  /**
   * <pre>
   *плановая позиция в T0
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal qtyT0 = 9;</code>
   */
  public dominvest.backend.core.model.Decimal getQtyT0() {
    return qtyT0_ == null ? dominvest.backend.core.model.Decimal.getDefaultInstance() : qtyT0_;
  }
  /**
   * <pre>
   *плановая позиция в T0
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal qtyT0 = 9;</code>
   */
  public dominvest.backend.core.model.DecimalOrBuilder getQtyT0OrBuilder() {
    return getQtyT0();
  }

  public static final int QTYT1_FIELD_NUMBER = 10;
  private dominvest.backend.core.model.Decimal qtyT1_;
  /**
   * <pre>
   *плановая позиция в T+1
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal qtyT1 = 10;</code>
   */
  public boolean hasQtyT1() {
    return qtyT1_ != null;
  }
  /**
   * <pre>
   *плановая позиция в T+1
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal qtyT1 = 10;</code>
   */
  public dominvest.backend.core.model.Decimal getQtyT1() {
    return qtyT1_ == null ? dominvest.backend.core.model.Decimal.getDefaultInstance() : qtyT1_;
  }
  /**
   * <pre>
   *плановая позиция в T+1
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal qtyT1 = 10;</code>
   */
  public dominvest.backend.core.model.DecimalOrBuilder getQtyT1OrBuilder() {
    return getQtyT1();
  }

  public static final int QTYT2_FIELD_NUMBER = 11;
  private dominvest.backend.core.model.Decimal qtyT2_;
  /**
   * <pre>
   *плановая позиция в T+2
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal qtyT2 = 11;</code>
   */
  public boolean hasQtyT2() {
    return qtyT2_ != null;
  }
  /**
   * <pre>
   *плановая позиция в T+2
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal qtyT2 = 11;</code>
   */
  public dominvest.backend.core.model.Decimal getQtyT2() {
    return qtyT2_ == null ? dominvest.backend.core.model.Decimal.getDefaultInstance() : qtyT2_;
  }
  /**
   * <pre>
   *плановая позиция в T+2
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal qtyT2 = 11;</code>
   */
  public dominvest.backend.core.model.DecimalOrBuilder getQtyT2OrBuilder() {
    return getQtyT2();
  }

  public static final int QTYTN_FIELD_NUMBER = 12;
  private dominvest.backend.core.model.Decimal qtyTn_;
  /**
   * <pre>
   *плановая позиция в Tn
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal qtyTn = 12;</code>
   */
  public boolean hasQtyTn() {
    return qtyTn_ != null;
  }
  /**
   * <pre>
   *плановая позиция в Tn
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal qtyTn = 12;</code>
   */
  public dominvest.backend.core.model.Decimal getQtyTn() {
    return qtyTn_ == null ? dominvest.backend.core.model.Decimal.getDefaultInstance() : qtyTn_;
  }
  /**
   * <pre>
   *плановая позиция в Tn
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal qtyTn = 12;</code>
   */
  public dominvest.backend.core.model.DecimalOrBuilder getQtyTnOrBuilder() {
    return getQtyTn();
  }

  public static final int QTYTOTAL_FIELD_NUMBER = 13;
  private dominvest.backend.core.model.Decimal qtyTotal_;
  /**
   * <pre>
   *total позиция как сумма T0 + T+1 + T+2 + Tn
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal qtyTotal = 13;</code>
   */
  public boolean hasQtyTotal() {
    return qtyTotal_ != null;
  }
  /**
   * <pre>
   *total позиция как сумма T0 + T+1 + T+2 + Tn
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal qtyTotal = 13;</code>
   */
  public dominvest.backend.core.model.Decimal getQtyTotal() {
    return qtyTotal_ == null ? dominvest.backend.core.model.Decimal.getDefaultInstance() : qtyTotal_;
  }
  /**
   * <pre>
   *total позиция как сумма T0 + T+1 + T+2 + Tn
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal qtyTotal = 13;</code>
   */
  public dominvest.backend.core.model.DecimalOrBuilder getQtyTotalOrBuilder() {
    return getQtyTotal();
  }

  public static final int BLOCKED_FIELD_NUMBER = 14;
  private dominvest.backend.core.model.Decimal blocked_;
  /**
   * <pre>
   *total сумма заблокированных лимитов по позиции
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal blocked = 14;</code>
   */
  public boolean hasBlocked() {
    return blocked_ != null;
  }
  /**
   * <pre>
   *total сумма заблокированных лимитов по позиции
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal blocked = 14;</code>
   */
  public dominvest.backend.core.model.Decimal getBlocked() {
    return blocked_ == null ? dominvest.backend.core.model.Decimal.getDefaultInstance() : blocked_;
  }
  /**
   * <pre>
   *total сумма заблокированных лимитов по позиции
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal blocked = 14;</code>
   */
  public dominvest.backend.core.model.DecimalOrBuilder getBlockedOrBuilder() {
    return getBlocked();
  }

  public static final int FACEVALUE_FIELD_NUMBER = 15;
  private dominvest.backend.core.model.Decimal faceValue_;
  /**
   * <pre>
   * текущий номинал
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal faceValue = 15;</code>
   */
  public boolean hasFaceValue() {
    return faceValue_ != null;
  }
  /**
   * <pre>
   * текущий номинал
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal faceValue = 15;</code>
   */
  public dominvest.backend.core.model.Decimal getFaceValue() {
    return faceValue_ == null ? dominvest.backend.core.model.Decimal.getDefaultInstance() : faceValue_;
  }
  /**
   * <pre>
   * текущий номинал
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal faceValue = 15;</code>
   */
  public dominvest.backend.core.model.DecimalOrBuilder getFaceValueOrBuilder() {
    return getFaceValue();
  }

  public static final int ACCRINTEREST_FIELD_NUMBER = 16;
  private dominvest.backend.core.model.Decimal accrInterest_;
  /**
   * <pre>
   *нкд
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal accrInterest = 16;</code>
   */
  public boolean hasAccrInterest() {
    return accrInterest_ != null;
  }
  /**
   * <pre>
   *нкд
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal accrInterest = 16;</code>
   */
  public dominvest.backend.core.model.Decimal getAccrInterest() {
    return accrInterest_ == null ? dominvest.backend.core.model.Decimal.getDefaultInstance() : accrInterest_;
  }
  /**
   * <pre>
   *нкд
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal accrInterest = 16;</code>
   */
  public dominvest.backend.core.model.DecimalOrBuilder getAccrInterestOrBuilder() {
    return getAccrInterest();
  }

  public static final int WAP_FIELD_NUMBER = 17;
  private dominvest.backend.core.model.Decimal wap_;
  /**
   * <pre>
   *средневзвеш. цена
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal wap = 17;</code>
   */
  public boolean hasWap() {
    return wap_ != null;
  }
  /**
   * <pre>
   *средневзвеш. цена
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal wap = 17;</code>
   */
  public dominvest.backend.core.model.Decimal getWap() {
    return wap_ == null ? dominvest.backend.core.model.Decimal.getDefaultInstance() : wap_;
  }
  /**
   * <pre>
   *средневзвеш. цена
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal wap = 17;</code>
   */
  public dominvest.backend.core.model.DecimalOrBuilder getWapOrBuilder() {
    return getWap();
  }

  public static final int CLOSEPRICE_FIELD_NUMBER = 18;
  private dominvest.backend.core.model.Decimal closePrice_;
  /**
   * <pre>
   *цена закрытия
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal closePrice = 18;</code>
   */
  public boolean hasClosePrice() {
    return closePrice_ != null;
  }
  /**
   * <pre>
   *цена закрытия
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal closePrice = 18;</code>
   */
  public dominvest.backend.core.model.Decimal getClosePrice() {
    return closePrice_ == null ? dominvest.backend.core.model.Decimal.getDefaultInstance() : closePrice_;
  }
  /**
   * <pre>
   *цена закрытия
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal closePrice = 18;</code>
   */
  public dominvest.backend.core.model.DecimalOrBuilder getClosePriceOrBuilder() {
    return getClosePrice();
  }

  public static final int CURRENTPRICE_FIELD_NUMBER = 19;
  private dominvest.backend.core.model.Decimal currentPrice_;
  /**
   * <pre>
   *текущая цена
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal currentPrice = 19;</code>
   */
  public boolean hasCurrentPrice() {
    return currentPrice_ != null;
  }
  /**
   * <pre>
   *текущая цена
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal currentPrice = 19;</code>
   */
  public dominvest.backend.core.model.Decimal getCurrentPrice() {
    return currentPrice_ == null ? dominvest.backend.core.model.Decimal.getDefaultInstance() : currentPrice_;
  }
  /**
   * <pre>
   *текущая цена
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal currentPrice = 19;</code>
   */
  public dominvest.backend.core.model.DecimalOrBuilder getCurrentPriceOrBuilder() {
    return getCurrentPrice();
  }

  public static final int REALPNL_FIELD_NUMBER = 20;
  private dominvest.backend.core.model.Decimal realPnL_;
  /**
   * <pre>
   * реализованный profit&amp;loss
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal realPnL = 20;</code>
   */
  public boolean hasRealPnL() {
    return realPnL_ != null;
  }
  /**
   * <pre>
   * реализованный profit&amp;loss
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal realPnL = 20;</code>
   */
  public dominvest.backend.core.model.Decimal getRealPnL() {
    return realPnL_ == null ? dominvest.backend.core.model.Decimal.getDefaultInstance() : realPnL_;
  }
  /**
   * <pre>
   * реализованный profit&amp;loss
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal realPnL = 20;</code>
   */
  public dominvest.backend.core.model.DecimalOrBuilder getRealPnLOrBuilder() {
    return getRealPnL();
  }

  public static final int UNREALPNL_FIELD_NUMBER = 21;
  private dominvest.backend.core.model.Decimal unRealPnL_;
  /**
   * <pre>
   *нереализованный profit&amp;loss за все время
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal unRealPnL = 21;</code>
   */
  public boolean hasUnRealPnL() {
    return unRealPnL_ != null;
  }
  /**
   * <pre>
   *нереализованный profit&amp;loss за все время
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal unRealPnL = 21;</code>
   */
  public dominvest.backend.core.model.Decimal getUnRealPnL() {
    return unRealPnL_ == null ? dominvest.backend.core.model.Decimal.getDefaultInstance() : unRealPnL_;
  }
  /**
   * <pre>
   *нереализованный profit&amp;loss за все время
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal unRealPnL = 21;</code>
   */
  public dominvest.backend.core.model.DecimalOrBuilder getUnRealPnLOrBuilder() {
    return getUnRealPnL();
  }

  public static final int DAILYPNL_FIELD_NUMBER = 22;
  private dominvest.backend.core.model.Decimal dailyPnL_;
  /**
   * <pre>
   *нереализованный profit&amp;loss за день
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal dailyPnL = 22;</code>
   */
  public boolean hasDailyPnL() {
    return dailyPnL_ != null;
  }
  /**
   * <pre>
   *нереализованный profit&amp;loss за день
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal dailyPnL = 22;</code>
   */
  public dominvest.backend.core.model.Decimal getDailyPnL() {
    return dailyPnL_ == null ? dominvest.backend.core.model.Decimal.getDefaultInstance() : dailyPnL_;
  }
  /**
   * <pre>
   *нереализованный profit&amp;loss за день
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal dailyPnL = 22;</code>
   */
  public dominvest.backend.core.model.DecimalOrBuilder getDailyPnLOrBuilder() {
    return getDailyPnL();
  }

  public static final int MONTHLYPNL_FIELD_NUMBER = 23;
  private dominvest.backend.core.model.Decimal monthlyPnL_;
  /**
   * <pre>
   *нереализованный profit&amp;loss за месяц
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal monthlyPnL = 23;</code>
   */
  public boolean hasMonthlyPnL() {
    return monthlyPnL_ != null;
  }
  /**
   * <pre>
   *нереализованный profit&amp;loss за месяц
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal monthlyPnL = 23;</code>
   */
  public dominvest.backend.core.model.Decimal getMonthlyPnL() {
    return monthlyPnL_ == null ? dominvest.backend.core.model.Decimal.getDefaultInstance() : monthlyPnL_;
  }
  /**
   * <pre>
   *нереализованный profit&amp;loss за месяц
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal monthlyPnL = 23;</code>
   */
  public dominvest.backend.core.model.DecimalOrBuilder getMonthlyPnLOrBuilder() {
    return getMonthlyPnL();
  }

  public static final int WEEKLYPNL_FIELD_NUMBER = 24;
  private dominvest.backend.core.model.Decimal weeklyPnL_;
  /**
   * <pre>
   *нереализованныйprofit&amp;loss за неделю
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal weeklyPnL = 24;</code>
   */
  public boolean hasWeeklyPnL() {
    return weeklyPnL_ != null;
  }
  /**
   * <pre>
   *нереализованныйprofit&amp;loss за неделю
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal weeklyPnL = 24;</code>
   */
  public dominvest.backend.core.model.Decimal getWeeklyPnL() {
    return weeklyPnL_ == null ? dominvest.backend.core.model.Decimal.getDefaultInstance() : weeklyPnL_;
  }
  /**
   * <pre>
   *нереализованныйprofit&amp;loss за неделю
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal weeklyPnL = 24;</code>
   */
  public dominvest.backend.core.model.DecimalOrBuilder getWeeklyPnLOrBuilder() {
    return getWeeklyPnL();
  }

  public static final int QUARTERLYPNL_FIELD_NUMBER = 25;
  private dominvest.backend.core.model.Decimal quarterlyPnL_;
  /**
   * <pre>
   *нереализованный profit%loss за квартал
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal quarterlyPnL = 25;</code>
   */
  public boolean hasQuarterlyPnL() {
    return quarterlyPnL_ != null;
  }
  /**
   * <pre>
   *нереализованный profit%loss за квартал
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal quarterlyPnL = 25;</code>
   */
  public dominvest.backend.core.model.Decimal getQuarterlyPnL() {
    return quarterlyPnL_ == null ? dominvest.backend.core.model.Decimal.getDefaultInstance() : quarterlyPnL_;
  }
  /**
   * <pre>
   *нереализованный profit%loss за квартал
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal quarterlyPnL = 25;</code>
   */
  public dominvest.backend.core.model.DecimalOrBuilder getQuarterlyPnLOrBuilder() {
    return getQuarterlyPnL();
  }

  public static final int YEARLYPNL_FIELD_NUMBER = 26;
  private dominvest.backend.core.model.Decimal yearlyPnL_;
  /**
   * <pre>
   *нереализованный profit&amp;loss с начала года
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal yearlyPnL = 26;</code>
   */
  public boolean hasYearlyPnL() {
    return yearlyPnL_ != null;
  }
  /**
   * <pre>
   *нереализованный profit&amp;loss с начала года
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal yearlyPnL = 26;</code>
   */
  public dominvest.backend.core.model.Decimal getYearlyPnL() {
    return yearlyPnL_ == null ? dominvest.backend.core.model.Decimal.getDefaultInstance() : yearlyPnL_;
  }
  /**
   * <pre>
   *нереализованный profit&amp;loss с начала года
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal yearlyPnL = 26;</code>
   */
  public dominvest.backend.core.model.DecimalOrBuilder getYearlyPnLOrBuilder() {
    return getYearlyPnL();
  }

  public static final int PACTID_FIELD_NUMBER = 27;
  private volatile java.lang.Object pactId_;
  /**
   * <code>string pactId = 27;</code>
   */
  public java.lang.String getPactId() {
    java.lang.Object ref = pactId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      pactId_ = s;
      return s;
    }
  }
  /**
   * <code>string pactId = 27;</code>
   */
  public com.google.protobuf.ByteString
      getPactIdBytes() {
    java.lang.Object ref = pactId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      pactId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (date_ != null) {
      output.writeMessage(1, getDate());
    }
    if (!getClientIdBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, clientId_);
    }
    if (!getSecurityIdBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, securityId_);
    }
    if (securityType_ != dominvest.backend.core.model.SecurityTypeOuterClass.SecurityType.NONE.getNumber()) {
      output.writeEnum(4, securityType_);
    }
    if (!getTickerBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, ticker_);
    }
    if (exchange_ != dominvest.backend.core.model.Exchange.NO_EXCH.getNumber()) {
      output.writeEnum(6, exchange_);
    }
    if (!getBoardBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 7, board_);
    }
    if (!getCurrencyBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 8, currency_);
    }
    if (qtyT0_ != null) {
      output.writeMessage(9, getQtyT0());
    }
    if (qtyT1_ != null) {
      output.writeMessage(10, getQtyT1());
    }
    if (qtyT2_ != null) {
      output.writeMessage(11, getQtyT2());
    }
    if (qtyTn_ != null) {
      output.writeMessage(12, getQtyTn());
    }
    if (qtyTotal_ != null) {
      output.writeMessage(13, getQtyTotal());
    }
    if (blocked_ != null) {
      output.writeMessage(14, getBlocked());
    }
    if (faceValue_ != null) {
      output.writeMessage(15, getFaceValue());
    }
    if (accrInterest_ != null) {
      output.writeMessage(16, getAccrInterest());
    }
    if (wap_ != null) {
      output.writeMessage(17, getWap());
    }
    if (closePrice_ != null) {
      output.writeMessage(18, getClosePrice());
    }
    if (currentPrice_ != null) {
      output.writeMessage(19, getCurrentPrice());
    }
    if (realPnL_ != null) {
      output.writeMessage(20, getRealPnL());
    }
    if (unRealPnL_ != null) {
      output.writeMessage(21, getUnRealPnL());
    }
    if (dailyPnL_ != null) {
      output.writeMessage(22, getDailyPnL());
    }
    if (monthlyPnL_ != null) {
      output.writeMessage(23, getMonthlyPnL());
    }
    if (weeklyPnL_ != null) {
      output.writeMessage(24, getWeeklyPnL());
    }
    if (quarterlyPnL_ != null) {
      output.writeMessage(25, getQuarterlyPnL());
    }
    if (yearlyPnL_ != null) {
      output.writeMessage(26, getYearlyPnL());
    }
    if (!getPactIdBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 27, pactId_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (date_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getDate());
    }
    if (!getClientIdBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, clientId_);
    }
    if (!getSecurityIdBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, securityId_);
    }
    if (securityType_ != dominvest.backend.core.model.SecurityTypeOuterClass.SecurityType.NONE.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(4, securityType_);
    }
    if (!getTickerBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, ticker_);
    }
    if (exchange_ != dominvest.backend.core.model.Exchange.NO_EXCH.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(6, exchange_);
    }
    if (!getBoardBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, board_);
    }
    if (!getCurrencyBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, currency_);
    }
    if (qtyT0_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, getQtyT0());
    }
    if (qtyT1_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, getQtyT1());
    }
    if (qtyT2_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(11, getQtyT2());
    }
    if (qtyTn_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(12, getQtyTn());
    }
    if (qtyTotal_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(13, getQtyTotal());
    }
    if (blocked_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(14, getBlocked());
    }
    if (faceValue_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(15, getFaceValue());
    }
    if (accrInterest_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(16, getAccrInterest());
    }
    if (wap_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(17, getWap());
    }
    if (closePrice_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(18, getClosePrice());
    }
    if (currentPrice_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(19, getCurrentPrice());
    }
    if (realPnL_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(20, getRealPnL());
    }
    if (unRealPnL_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(21, getUnRealPnL());
    }
    if (dailyPnL_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(22, getDailyPnL());
    }
    if (monthlyPnL_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(23, getMonthlyPnL());
    }
    if (weeklyPnL_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(24, getWeeklyPnL());
    }
    if (quarterlyPnL_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(25, getQuarterlyPnL());
    }
    if (yearlyPnL_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(26, getYearlyPnL());
    }
    if (!getPactIdBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(27, pactId_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof dominvest.backend.core.model.Position)) {
      return super.equals(obj);
    }
    dominvest.backend.core.model.Position other = (dominvest.backend.core.model.Position) obj;

    if (hasDate() != other.hasDate()) return false;
    if (hasDate()) {
      if (!getDate()
          .equals(other.getDate())) return false;
    }
    if (!getClientId()
        .equals(other.getClientId())) return false;
    if (!getSecurityId()
        .equals(other.getSecurityId())) return false;
    if (securityType_ != other.securityType_) return false;
    if (!getTicker()
        .equals(other.getTicker())) return false;
    if (exchange_ != other.exchange_) return false;
    if (!getBoard()
        .equals(other.getBoard())) return false;
    if (!getCurrency()
        .equals(other.getCurrency())) return false;
    if (hasQtyT0() != other.hasQtyT0()) return false;
    if (hasQtyT0()) {
      if (!getQtyT0()
          .equals(other.getQtyT0())) return false;
    }
    if (hasQtyT1() != other.hasQtyT1()) return false;
    if (hasQtyT1()) {
      if (!getQtyT1()
          .equals(other.getQtyT1())) return false;
    }
    if (hasQtyT2() != other.hasQtyT2()) return false;
    if (hasQtyT2()) {
      if (!getQtyT2()
          .equals(other.getQtyT2())) return false;
    }
    if (hasQtyTn() != other.hasQtyTn()) return false;
    if (hasQtyTn()) {
      if (!getQtyTn()
          .equals(other.getQtyTn())) return false;
    }
    if (hasQtyTotal() != other.hasQtyTotal()) return false;
    if (hasQtyTotal()) {
      if (!getQtyTotal()
          .equals(other.getQtyTotal())) return false;
    }
    if (hasBlocked() != other.hasBlocked()) return false;
    if (hasBlocked()) {
      if (!getBlocked()
          .equals(other.getBlocked())) return false;
    }
    if (hasFaceValue() != other.hasFaceValue()) return false;
    if (hasFaceValue()) {
      if (!getFaceValue()
          .equals(other.getFaceValue())) return false;
    }
    if (hasAccrInterest() != other.hasAccrInterest()) return false;
    if (hasAccrInterest()) {
      if (!getAccrInterest()
          .equals(other.getAccrInterest())) return false;
    }
    if (hasWap() != other.hasWap()) return false;
    if (hasWap()) {
      if (!getWap()
          .equals(other.getWap())) return false;
    }
    if (hasClosePrice() != other.hasClosePrice()) return false;
    if (hasClosePrice()) {
      if (!getClosePrice()
          .equals(other.getClosePrice())) return false;
    }
    if (hasCurrentPrice() != other.hasCurrentPrice()) return false;
    if (hasCurrentPrice()) {
      if (!getCurrentPrice()
          .equals(other.getCurrentPrice())) return false;
    }
    if (hasRealPnL() != other.hasRealPnL()) return false;
    if (hasRealPnL()) {
      if (!getRealPnL()
          .equals(other.getRealPnL())) return false;
    }
    if (hasUnRealPnL() != other.hasUnRealPnL()) return false;
    if (hasUnRealPnL()) {
      if (!getUnRealPnL()
          .equals(other.getUnRealPnL())) return false;
    }
    if (hasDailyPnL() != other.hasDailyPnL()) return false;
    if (hasDailyPnL()) {
      if (!getDailyPnL()
          .equals(other.getDailyPnL())) return false;
    }
    if (hasMonthlyPnL() != other.hasMonthlyPnL()) return false;
    if (hasMonthlyPnL()) {
      if (!getMonthlyPnL()
          .equals(other.getMonthlyPnL())) return false;
    }
    if (hasWeeklyPnL() != other.hasWeeklyPnL()) return false;
    if (hasWeeklyPnL()) {
      if (!getWeeklyPnL()
          .equals(other.getWeeklyPnL())) return false;
    }
    if (hasQuarterlyPnL() != other.hasQuarterlyPnL()) return false;
    if (hasQuarterlyPnL()) {
      if (!getQuarterlyPnL()
          .equals(other.getQuarterlyPnL())) return false;
    }
    if (hasYearlyPnL() != other.hasYearlyPnL()) return false;
    if (hasYearlyPnL()) {
      if (!getYearlyPnL()
          .equals(other.getYearlyPnL())) return false;
    }
    if (!getPactId()
        .equals(other.getPactId())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasDate()) {
      hash = (37 * hash) + DATE_FIELD_NUMBER;
      hash = (53 * hash) + getDate().hashCode();
    }
    hash = (37 * hash) + CLIENTID_FIELD_NUMBER;
    hash = (53 * hash) + getClientId().hashCode();
    hash = (37 * hash) + SECURITYID_FIELD_NUMBER;
    hash = (53 * hash) + getSecurityId().hashCode();
    hash = (37 * hash) + SECURITYTYPE_FIELD_NUMBER;
    hash = (53 * hash) + securityType_;
    hash = (37 * hash) + TICKER_FIELD_NUMBER;
    hash = (53 * hash) + getTicker().hashCode();
    hash = (37 * hash) + EXCHANGE_FIELD_NUMBER;
    hash = (53 * hash) + exchange_;
    hash = (37 * hash) + BOARD_FIELD_NUMBER;
    hash = (53 * hash) + getBoard().hashCode();
    hash = (37 * hash) + CURRENCY_FIELD_NUMBER;
    hash = (53 * hash) + getCurrency().hashCode();
    if (hasQtyT0()) {
      hash = (37 * hash) + QTYT0_FIELD_NUMBER;
      hash = (53 * hash) + getQtyT0().hashCode();
    }
    if (hasQtyT1()) {
      hash = (37 * hash) + QTYT1_FIELD_NUMBER;
      hash = (53 * hash) + getQtyT1().hashCode();
    }
    if (hasQtyT2()) {
      hash = (37 * hash) + QTYT2_FIELD_NUMBER;
      hash = (53 * hash) + getQtyT2().hashCode();
    }
    if (hasQtyTn()) {
      hash = (37 * hash) + QTYTN_FIELD_NUMBER;
      hash = (53 * hash) + getQtyTn().hashCode();
    }
    if (hasQtyTotal()) {
      hash = (37 * hash) + QTYTOTAL_FIELD_NUMBER;
      hash = (53 * hash) + getQtyTotal().hashCode();
    }
    if (hasBlocked()) {
      hash = (37 * hash) + BLOCKED_FIELD_NUMBER;
      hash = (53 * hash) + getBlocked().hashCode();
    }
    if (hasFaceValue()) {
      hash = (37 * hash) + FACEVALUE_FIELD_NUMBER;
      hash = (53 * hash) + getFaceValue().hashCode();
    }
    if (hasAccrInterest()) {
      hash = (37 * hash) + ACCRINTEREST_FIELD_NUMBER;
      hash = (53 * hash) + getAccrInterest().hashCode();
    }
    if (hasWap()) {
      hash = (37 * hash) + WAP_FIELD_NUMBER;
      hash = (53 * hash) + getWap().hashCode();
    }
    if (hasClosePrice()) {
      hash = (37 * hash) + CLOSEPRICE_FIELD_NUMBER;
      hash = (53 * hash) + getClosePrice().hashCode();
    }
    if (hasCurrentPrice()) {
      hash = (37 * hash) + CURRENTPRICE_FIELD_NUMBER;
      hash = (53 * hash) + getCurrentPrice().hashCode();
    }
    if (hasRealPnL()) {
      hash = (37 * hash) + REALPNL_FIELD_NUMBER;
      hash = (53 * hash) + getRealPnL().hashCode();
    }
    if (hasUnRealPnL()) {
      hash = (37 * hash) + UNREALPNL_FIELD_NUMBER;
      hash = (53 * hash) + getUnRealPnL().hashCode();
    }
    if (hasDailyPnL()) {
      hash = (37 * hash) + DAILYPNL_FIELD_NUMBER;
      hash = (53 * hash) + getDailyPnL().hashCode();
    }
    if (hasMonthlyPnL()) {
      hash = (37 * hash) + MONTHLYPNL_FIELD_NUMBER;
      hash = (53 * hash) + getMonthlyPnL().hashCode();
    }
    if (hasWeeklyPnL()) {
      hash = (37 * hash) + WEEKLYPNL_FIELD_NUMBER;
      hash = (53 * hash) + getWeeklyPnL().hashCode();
    }
    if (hasQuarterlyPnL()) {
      hash = (37 * hash) + QUARTERLYPNL_FIELD_NUMBER;
      hash = (53 * hash) + getQuarterlyPnL().hashCode();
    }
    if (hasYearlyPnL()) {
      hash = (37 * hash) + YEARLYPNL_FIELD_NUMBER;
      hash = (53 * hash) + getYearlyPnL().hashCode();
    }
    hash = (37 * hash) + PACTID_FIELD_NUMBER;
    hash = (53 * hash) + getPactId().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static dominvest.backend.core.model.Position parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static dominvest.backend.core.model.Position parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static dominvest.backend.core.model.Position parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static dominvest.backend.core.model.Position parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static dominvest.backend.core.model.Position parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static dominvest.backend.core.model.Position parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static dominvest.backend.core.model.Position parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static dominvest.backend.core.model.Position parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static dominvest.backend.core.model.Position parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static dominvest.backend.core.model.Position parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static dominvest.backend.core.model.Position parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static dominvest.backend.core.model.Position parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(dominvest.backend.core.model.Position prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code dominvest.backend.core.model.Position}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:dominvest.backend.core.model.Position)
      dominvest.backend.core.model.PositionOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dominvest.backend.core.model.PositionOuterClass.internal_static_dominvest_backend_core_model_Position_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dominvest.backend.core.model.PositionOuterClass.internal_static_dominvest_backend_core_model_Position_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dominvest.backend.core.model.Position.class, dominvest.backend.core.model.Position.Builder.class);
    }

    // Construct using dominvest.backend.core.model.Position.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (dateBuilder_ == null) {
        date_ = null;
      } else {
        date_ = null;
        dateBuilder_ = null;
      }
      clientId_ = "";

      securityId_ = "";

      securityType_ = 0;

      ticker_ = "";

      exchange_ = 0;

      board_ = "";

      currency_ = "";

      if (qtyT0Builder_ == null) {
        qtyT0_ = null;
      } else {
        qtyT0_ = null;
        qtyT0Builder_ = null;
      }
      if (qtyT1Builder_ == null) {
        qtyT1_ = null;
      } else {
        qtyT1_ = null;
        qtyT1Builder_ = null;
      }
      if (qtyT2Builder_ == null) {
        qtyT2_ = null;
      } else {
        qtyT2_ = null;
        qtyT2Builder_ = null;
      }
      if (qtyTnBuilder_ == null) {
        qtyTn_ = null;
      } else {
        qtyTn_ = null;
        qtyTnBuilder_ = null;
      }
      if (qtyTotalBuilder_ == null) {
        qtyTotal_ = null;
      } else {
        qtyTotal_ = null;
        qtyTotalBuilder_ = null;
      }
      if (blockedBuilder_ == null) {
        blocked_ = null;
      } else {
        blocked_ = null;
        blockedBuilder_ = null;
      }
      if (faceValueBuilder_ == null) {
        faceValue_ = null;
      } else {
        faceValue_ = null;
        faceValueBuilder_ = null;
      }
      if (accrInterestBuilder_ == null) {
        accrInterest_ = null;
      } else {
        accrInterest_ = null;
        accrInterestBuilder_ = null;
      }
      if (wapBuilder_ == null) {
        wap_ = null;
      } else {
        wap_ = null;
        wapBuilder_ = null;
      }
      if (closePriceBuilder_ == null) {
        closePrice_ = null;
      } else {
        closePrice_ = null;
        closePriceBuilder_ = null;
      }
      if (currentPriceBuilder_ == null) {
        currentPrice_ = null;
      } else {
        currentPrice_ = null;
        currentPriceBuilder_ = null;
      }
      if (realPnLBuilder_ == null) {
        realPnL_ = null;
      } else {
        realPnL_ = null;
        realPnLBuilder_ = null;
      }
      if (unRealPnLBuilder_ == null) {
        unRealPnL_ = null;
      } else {
        unRealPnL_ = null;
        unRealPnLBuilder_ = null;
      }
      if (dailyPnLBuilder_ == null) {
        dailyPnL_ = null;
      } else {
        dailyPnL_ = null;
        dailyPnLBuilder_ = null;
      }
      if (monthlyPnLBuilder_ == null) {
        monthlyPnL_ = null;
      } else {
        monthlyPnL_ = null;
        monthlyPnLBuilder_ = null;
      }
      if (weeklyPnLBuilder_ == null) {
        weeklyPnL_ = null;
      } else {
        weeklyPnL_ = null;
        weeklyPnLBuilder_ = null;
      }
      if (quarterlyPnLBuilder_ == null) {
        quarterlyPnL_ = null;
      } else {
        quarterlyPnL_ = null;
        quarterlyPnLBuilder_ = null;
      }
      if (yearlyPnLBuilder_ == null) {
        yearlyPnL_ = null;
      } else {
        yearlyPnL_ = null;
        yearlyPnLBuilder_ = null;
      }
      pactId_ = "";

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return dominvest.backend.core.model.PositionOuterClass.internal_static_dominvest_backend_core_model_Position_descriptor;
    }

    @java.lang.Override
    public dominvest.backend.core.model.Position getDefaultInstanceForType() {
      return dominvest.backend.core.model.Position.getDefaultInstance();
    }

    @java.lang.Override
    public dominvest.backend.core.model.Position build() {
      dominvest.backend.core.model.Position result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public dominvest.backend.core.model.Position buildPartial() {
      dominvest.backend.core.model.Position result = new dominvest.backend.core.model.Position(this);
      if (dateBuilder_ == null) {
        result.date_ = date_;
      } else {
        result.date_ = dateBuilder_.build();
      }
      result.clientId_ = clientId_;
      result.securityId_ = securityId_;
      result.securityType_ = securityType_;
      result.ticker_ = ticker_;
      result.exchange_ = exchange_;
      result.board_ = board_;
      result.currency_ = currency_;
      if (qtyT0Builder_ == null) {
        result.qtyT0_ = qtyT0_;
      } else {
        result.qtyT0_ = qtyT0Builder_.build();
      }
      if (qtyT1Builder_ == null) {
        result.qtyT1_ = qtyT1_;
      } else {
        result.qtyT1_ = qtyT1Builder_.build();
      }
      if (qtyT2Builder_ == null) {
        result.qtyT2_ = qtyT2_;
      } else {
        result.qtyT2_ = qtyT2Builder_.build();
      }
      if (qtyTnBuilder_ == null) {
        result.qtyTn_ = qtyTn_;
      } else {
        result.qtyTn_ = qtyTnBuilder_.build();
      }
      if (qtyTotalBuilder_ == null) {
        result.qtyTotal_ = qtyTotal_;
      } else {
        result.qtyTotal_ = qtyTotalBuilder_.build();
      }
      if (blockedBuilder_ == null) {
        result.blocked_ = blocked_;
      } else {
        result.blocked_ = blockedBuilder_.build();
      }
      if (faceValueBuilder_ == null) {
        result.faceValue_ = faceValue_;
      } else {
        result.faceValue_ = faceValueBuilder_.build();
      }
      if (accrInterestBuilder_ == null) {
        result.accrInterest_ = accrInterest_;
      } else {
        result.accrInterest_ = accrInterestBuilder_.build();
      }
      if (wapBuilder_ == null) {
        result.wap_ = wap_;
      } else {
        result.wap_ = wapBuilder_.build();
      }
      if (closePriceBuilder_ == null) {
        result.closePrice_ = closePrice_;
      } else {
        result.closePrice_ = closePriceBuilder_.build();
      }
      if (currentPriceBuilder_ == null) {
        result.currentPrice_ = currentPrice_;
      } else {
        result.currentPrice_ = currentPriceBuilder_.build();
      }
      if (realPnLBuilder_ == null) {
        result.realPnL_ = realPnL_;
      } else {
        result.realPnL_ = realPnLBuilder_.build();
      }
      if (unRealPnLBuilder_ == null) {
        result.unRealPnL_ = unRealPnL_;
      } else {
        result.unRealPnL_ = unRealPnLBuilder_.build();
      }
      if (dailyPnLBuilder_ == null) {
        result.dailyPnL_ = dailyPnL_;
      } else {
        result.dailyPnL_ = dailyPnLBuilder_.build();
      }
      if (monthlyPnLBuilder_ == null) {
        result.monthlyPnL_ = monthlyPnL_;
      } else {
        result.monthlyPnL_ = monthlyPnLBuilder_.build();
      }
      if (weeklyPnLBuilder_ == null) {
        result.weeklyPnL_ = weeklyPnL_;
      } else {
        result.weeklyPnL_ = weeklyPnLBuilder_.build();
      }
      if (quarterlyPnLBuilder_ == null) {
        result.quarterlyPnL_ = quarterlyPnL_;
      } else {
        result.quarterlyPnL_ = quarterlyPnLBuilder_.build();
      }
      if (yearlyPnLBuilder_ == null) {
        result.yearlyPnL_ = yearlyPnL_;
      } else {
        result.yearlyPnL_ = yearlyPnLBuilder_.build();
      }
      result.pactId_ = pactId_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof dominvest.backend.core.model.Position) {
        return mergeFrom((dominvest.backend.core.model.Position)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(dominvest.backend.core.model.Position other) {
      if (other == dominvest.backend.core.model.Position.getDefaultInstance()) return this;
      if (other.hasDate()) {
        mergeDate(other.getDate());
      }
      if (!other.getClientId().isEmpty()) {
        clientId_ = other.clientId_;
        onChanged();
      }
      if (!other.getSecurityId().isEmpty()) {
        securityId_ = other.securityId_;
        onChanged();
      }
      if (other.securityType_ != 0) {
        setSecurityTypeValue(other.getSecurityTypeValue());
      }
      if (!other.getTicker().isEmpty()) {
        ticker_ = other.ticker_;
        onChanged();
      }
      if (other.exchange_ != 0) {
        setExchangeValue(other.getExchangeValue());
      }
      if (!other.getBoard().isEmpty()) {
        board_ = other.board_;
        onChanged();
      }
      if (!other.getCurrency().isEmpty()) {
        currency_ = other.currency_;
        onChanged();
      }
      if (other.hasQtyT0()) {
        mergeQtyT0(other.getQtyT0());
      }
      if (other.hasQtyT1()) {
        mergeQtyT1(other.getQtyT1());
      }
      if (other.hasQtyT2()) {
        mergeQtyT2(other.getQtyT2());
      }
      if (other.hasQtyTn()) {
        mergeQtyTn(other.getQtyTn());
      }
      if (other.hasQtyTotal()) {
        mergeQtyTotal(other.getQtyTotal());
      }
      if (other.hasBlocked()) {
        mergeBlocked(other.getBlocked());
      }
      if (other.hasFaceValue()) {
        mergeFaceValue(other.getFaceValue());
      }
      if (other.hasAccrInterest()) {
        mergeAccrInterest(other.getAccrInterest());
      }
      if (other.hasWap()) {
        mergeWap(other.getWap());
      }
      if (other.hasClosePrice()) {
        mergeClosePrice(other.getClosePrice());
      }
      if (other.hasCurrentPrice()) {
        mergeCurrentPrice(other.getCurrentPrice());
      }
      if (other.hasRealPnL()) {
        mergeRealPnL(other.getRealPnL());
      }
      if (other.hasUnRealPnL()) {
        mergeUnRealPnL(other.getUnRealPnL());
      }
      if (other.hasDailyPnL()) {
        mergeDailyPnL(other.getDailyPnL());
      }
      if (other.hasMonthlyPnL()) {
        mergeMonthlyPnL(other.getMonthlyPnL());
      }
      if (other.hasWeeklyPnL()) {
        mergeWeeklyPnL(other.getWeeklyPnL());
      }
      if (other.hasQuarterlyPnL()) {
        mergeQuarterlyPnL(other.getQuarterlyPnL());
      }
      if (other.hasYearlyPnL()) {
        mergeYearlyPnL(other.getYearlyPnL());
      }
      if (!other.getPactId().isEmpty()) {
        pactId_ = other.pactId_;
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      dominvest.backend.core.model.Position parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (dominvest.backend.core.model.Position) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private dominvest.backend.core.model.Date date_;
    private com.google.protobuf.SingleFieldBuilderV3<
        dominvest.backend.core.model.Date, dominvest.backend.core.model.Date.Builder, dominvest.backend.core.model.DateOrBuilder> dateBuilder_;
    /**
     * <code>.dominvest.backend.core.model.Date date = 1;</code>
     */
    public boolean hasDate() {
      return dateBuilder_ != null || date_ != null;
    }
    /**
     * <code>.dominvest.backend.core.model.Date date = 1;</code>
     */
    public dominvest.backend.core.model.Date getDate() {
      if (dateBuilder_ == null) {
        return date_ == null ? dominvest.backend.core.model.Date.getDefaultInstance() : date_;
      } else {
        return dateBuilder_.getMessage();
      }
    }
    /**
     * <code>.dominvest.backend.core.model.Date date = 1;</code>
     */
    public Builder setDate(dominvest.backend.core.model.Date value) {
      if (dateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        date_ = value;
        onChanged();
      } else {
        dateBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.dominvest.backend.core.model.Date date = 1;</code>
     */
    public Builder setDate(
        dominvest.backend.core.model.Date.Builder builderForValue) {
      if (dateBuilder_ == null) {
        date_ = builderForValue.build();
        onChanged();
      } else {
        dateBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.dominvest.backend.core.model.Date date = 1;</code>
     */
    public Builder mergeDate(dominvest.backend.core.model.Date value) {
      if (dateBuilder_ == null) {
        if (date_ != null) {
          date_ =
            dominvest.backend.core.model.Date.newBuilder(date_).mergeFrom(value).buildPartial();
        } else {
          date_ = value;
        }
        onChanged();
      } else {
        dateBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.dominvest.backend.core.model.Date date = 1;</code>
     */
    public Builder clearDate() {
      if (dateBuilder_ == null) {
        date_ = null;
        onChanged();
      } else {
        date_ = null;
        dateBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.dominvest.backend.core.model.Date date = 1;</code>
     */
    public dominvest.backend.core.model.Date.Builder getDateBuilder() {
      
      onChanged();
      return getDateFieldBuilder().getBuilder();
    }
    /**
     * <code>.dominvest.backend.core.model.Date date = 1;</code>
     */
    public dominvest.backend.core.model.DateOrBuilder getDateOrBuilder() {
      if (dateBuilder_ != null) {
        return dateBuilder_.getMessageOrBuilder();
      } else {
        return date_ == null ?
            dominvest.backend.core.model.Date.getDefaultInstance() : date_;
      }
    }
    /**
     * <code>.dominvest.backend.core.model.Date date = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        dominvest.backend.core.model.Date, dominvest.backend.core.model.Date.Builder, dominvest.backend.core.model.DateOrBuilder> 
        getDateFieldBuilder() {
      if (dateBuilder_ == null) {
        dateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            dominvest.backend.core.model.Date, dominvest.backend.core.model.Date.Builder, dominvest.backend.core.model.DateOrBuilder>(
                getDate(),
                getParentForChildren(),
                isClean());
        date_ = null;
      }
      return dateBuilder_;
    }

    private java.lang.Object clientId_ = "";
    /**
     * <pre>
     *идентификатор клиента
     * </pre>
     *
     * <code>string clientId = 2;</code>
     */
    public java.lang.String getClientId() {
      java.lang.Object ref = clientId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        clientId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     *идентификатор клиента
     * </pre>
     *
     * <code>string clientId = 2;</code>
     */
    public com.google.protobuf.ByteString
        getClientIdBytes() {
      java.lang.Object ref = clientId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        clientId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *идентификатор клиента
     * </pre>
     *
     * <code>string clientId = 2;</code>
     */
    public Builder setClientId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      clientId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *идентификатор клиента
     * </pre>
     *
     * <code>string clientId = 2;</code>
     */
    public Builder clearClientId() {
      
      clientId_ = getDefaultInstance().getClientId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *идентификатор клиента
     * </pre>
     *
     * <code>string clientId = 2;</code>
     */
    public Builder setClientIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      clientId_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object securityId_ = "";
    /**
     * <pre>
     *id бумаги как &lt;id бумаги в бэк-офисе&gt;.&lt;биржа&gt;.&lt;борда&gt;
     * </pre>
     *
     * <code>string securityId = 3;</code>
     */
    public java.lang.String getSecurityId() {
      java.lang.Object ref = securityId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        securityId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     *id бумаги как &lt;id бумаги в бэк-офисе&gt;.&lt;биржа&gt;.&lt;борда&gt;
     * </pre>
     *
     * <code>string securityId = 3;</code>
     */
    public com.google.protobuf.ByteString
        getSecurityIdBytes() {
      java.lang.Object ref = securityId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        securityId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *id бумаги как &lt;id бумаги в бэк-офисе&gt;.&lt;биржа&gt;.&lt;борда&gt;
     * </pre>
     *
     * <code>string securityId = 3;</code>
     */
    public Builder setSecurityId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      securityId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *id бумаги как &lt;id бумаги в бэк-офисе&gt;.&lt;биржа&gt;.&lt;борда&gt;
     * </pre>
     *
     * <code>string securityId = 3;</code>
     */
    public Builder clearSecurityId() {
      
      securityId_ = getDefaultInstance().getSecurityId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *id бумаги как &lt;id бумаги в бэк-офисе&gt;.&lt;биржа&gt;.&lt;борда&gt;
     * </pre>
     *
     * <code>string securityId = 3;</code>
     */
    public Builder setSecurityIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      securityId_ = value;
      onChanged();
      return this;
    }

    private int securityType_ = 0;
    /**
     * <pre>
     *тип инструмента
     * </pre>
     *
     * <code>.dominvest.backend.core.model.SecurityType securityType = 4;</code>
     */
    public int getSecurityTypeValue() {
      return securityType_;
    }
    /**
     * <pre>
     *тип инструмента
     * </pre>
     *
     * <code>.dominvest.backend.core.model.SecurityType securityType = 4;</code>
     */
    public Builder setSecurityTypeValue(int value) {
      securityType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *тип инструмента
     * </pre>
     *
     * <code>.dominvest.backend.core.model.SecurityType securityType = 4;</code>
     */
    public dominvest.backend.core.model.SecurityTypeOuterClass.SecurityType getSecurityType() {
      @SuppressWarnings("deprecation")
      dominvest.backend.core.model.SecurityTypeOuterClass.SecurityType result = dominvest.backend.core.model.SecurityTypeOuterClass.SecurityType.valueOf(securityType_);
      return result == null ? dominvest.backend.core.model.SecurityTypeOuterClass.SecurityType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     *тип инструмента
     * </pre>
     *
     * <code>.dominvest.backend.core.model.SecurityType securityType = 4;</code>
     */
    public Builder setSecurityType(dominvest.backend.core.model.SecurityTypeOuterClass.SecurityType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      securityType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *тип инструмента
     * </pre>
     *
     * <code>.dominvest.backend.core.model.SecurityType securityType = 4;</code>
     */
    public Builder clearSecurityType() {
      
      securityType_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object ticker_ = "";
    /**
     * <pre>
     *тикер на бирже
     * </pre>
     *
     * <code>string ticker = 5;</code>
     */
    public java.lang.String getTicker() {
      java.lang.Object ref = ticker_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        ticker_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     *тикер на бирже
     * </pre>
     *
     * <code>string ticker = 5;</code>
     */
    public com.google.protobuf.ByteString
        getTickerBytes() {
      java.lang.Object ref = ticker_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ticker_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *тикер на бирже
     * </pre>
     *
     * <code>string ticker = 5;</code>
     */
    public Builder setTicker(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      ticker_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *тикер на бирже
     * </pre>
     *
     * <code>string ticker = 5;</code>
     */
    public Builder clearTicker() {
      
      ticker_ = getDefaultInstance().getTicker();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *тикер на бирже
     * </pre>
     *
     * <code>string ticker = 5;</code>
     */
    public Builder setTickerBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      ticker_ = value;
      onChanged();
      return this;
    }

    private int exchange_ = 0;
    /**
     * <pre>
     *биржа
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Exchange exchange = 6;</code>
     */
    public int getExchangeValue() {
      return exchange_;
    }
    /**
     * <pre>
     *биржа
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Exchange exchange = 6;</code>
     */
    public Builder setExchangeValue(int value) {
      exchange_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *биржа
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Exchange exchange = 6;</code>
     */
    public dominvest.backend.core.model.Exchange getExchange() {
      @SuppressWarnings("deprecation")
      dominvest.backend.core.model.Exchange result = dominvest.backend.core.model.Exchange.valueOf(exchange_);
      return result == null ? dominvest.backend.core.model.Exchange.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     *биржа
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Exchange exchange = 6;</code>
     */
    public Builder setExchange(dominvest.backend.core.model.Exchange value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      exchange_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *биржа
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Exchange exchange = 6;</code>
     */
    public Builder clearExchange() {
      
      exchange_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object board_ = "";
    /**
     * <pre>
     *классификатор борды
     * </pre>
     *
     * <code>string board = 7;</code>
     */
    public java.lang.String getBoard() {
      java.lang.Object ref = board_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        board_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     *классификатор борды
     * </pre>
     *
     * <code>string board = 7;</code>
     */
    public com.google.protobuf.ByteString
        getBoardBytes() {
      java.lang.Object ref = board_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        board_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *классификатор борды
     * </pre>
     *
     * <code>string board = 7;</code>
     */
    public Builder setBoard(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      board_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *классификатор борды
     * </pre>
     *
     * <code>string board = 7;</code>
     */
    public Builder clearBoard() {
      
      board_ = getDefaultInstance().getBoard();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *классификатор борды
     * </pre>
     *
     * <code>string board = 7;</code>
     */
    public Builder setBoardBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      board_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object currency_ = "";
    /**
     * <pre>
     *валюта инструмента
     * </pre>
     *
     * <code>string currency = 8;</code>
     */
    public java.lang.String getCurrency() {
      java.lang.Object ref = currency_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        currency_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     *валюта инструмента
     * </pre>
     *
     * <code>string currency = 8;</code>
     */
    public com.google.protobuf.ByteString
        getCurrencyBytes() {
      java.lang.Object ref = currency_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        currency_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *валюта инструмента
     * </pre>
     *
     * <code>string currency = 8;</code>
     */
    public Builder setCurrency(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      currency_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *валюта инструмента
     * </pre>
     *
     * <code>string currency = 8;</code>
     */
    public Builder clearCurrency() {
      
      currency_ = getDefaultInstance().getCurrency();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *валюта инструмента
     * </pre>
     *
     * <code>string currency = 8;</code>
     */
    public Builder setCurrencyBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      currency_ = value;
      onChanged();
      return this;
    }

    private dominvest.backend.core.model.Decimal qtyT0_;
    private com.google.protobuf.SingleFieldBuilderV3<
        dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder> qtyT0Builder_;
    /**
     * <pre>
     *плановая позиция в T0
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal qtyT0 = 9;</code>
     */
    public boolean hasQtyT0() {
      return qtyT0Builder_ != null || qtyT0_ != null;
    }
    /**
     * <pre>
     *плановая позиция в T0
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal qtyT0 = 9;</code>
     */
    public dominvest.backend.core.model.Decimal getQtyT0() {
      if (qtyT0Builder_ == null) {
        return qtyT0_ == null ? dominvest.backend.core.model.Decimal.getDefaultInstance() : qtyT0_;
      } else {
        return qtyT0Builder_.getMessage();
      }
    }
    /**
     * <pre>
     *плановая позиция в T0
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal qtyT0 = 9;</code>
     */
    public Builder setQtyT0(dominvest.backend.core.model.Decimal value) {
      if (qtyT0Builder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        qtyT0_ = value;
        onChanged();
      } else {
        qtyT0Builder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     *плановая позиция в T0
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal qtyT0 = 9;</code>
     */
    public Builder setQtyT0(
        dominvest.backend.core.model.Decimal.Builder builderForValue) {
      if (qtyT0Builder_ == null) {
        qtyT0_ = builderForValue.build();
        onChanged();
      } else {
        qtyT0Builder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     *плановая позиция в T0
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal qtyT0 = 9;</code>
     */
    public Builder mergeQtyT0(dominvest.backend.core.model.Decimal value) {
      if (qtyT0Builder_ == null) {
        if (qtyT0_ != null) {
          qtyT0_ =
            dominvest.backend.core.model.Decimal.newBuilder(qtyT0_).mergeFrom(value).buildPartial();
        } else {
          qtyT0_ = value;
        }
        onChanged();
      } else {
        qtyT0Builder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     *плановая позиция в T0
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal qtyT0 = 9;</code>
     */
    public Builder clearQtyT0() {
      if (qtyT0Builder_ == null) {
        qtyT0_ = null;
        onChanged();
      } else {
        qtyT0_ = null;
        qtyT0Builder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     *плановая позиция в T0
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal qtyT0 = 9;</code>
     */
    public dominvest.backend.core.model.Decimal.Builder getQtyT0Builder() {
      
      onChanged();
      return getQtyT0FieldBuilder().getBuilder();
    }
    /**
     * <pre>
     *плановая позиция в T0
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal qtyT0 = 9;</code>
     */
    public dominvest.backend.core.model.DecimalOrBuilder getQtyT0OrBuilder() {
      if (qtyT0Builder_ != null) {
        return qtyT0Builder_.getMessageOrBuilder();
      } else {
        return qtyT0_ == null ?
            dominvest.backend.core.model.Decimal.getDefaultInstance() : qtyT0_;
      }
    }
    /**
     * <pre>
     *плановая позиция в T0
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal qtyT0 = 9;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder> 
        getQtyT0FieldBuilder() {
      if (qtyT0Builder_ == null) {
        qtyT0Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
            dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder>(
                getQtyT0(),
                getParentForChildren(),
                isClean());
        qtyT0_ = null;
      }
      return qtyT0Builder_;
    }

    private dominvest.backend.core.model.Decimal qtyT1_;
    private com.google.protobuf.SingleFieldBuilderV3<
        dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder> qtyT1Builder_;
    /**
     * <pre>
     *плановая позиция в T+1
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal qtyT1 = 10;</code>
     */
    public boolean hasQtyT1() {
      return qtyT1Builder_ != null || qtyT1_ != null;
    }
    /**
     * <pre>
     *плановая позиция в T+1
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal qtyT1 = 10;</code>
     */
    public dominvest.backend.core.model.Decimal getQtyT1() {
      if (qtyT1Builder_ == null) {
        return qtyT1_ == null ? dominvest.backend.core.model.Decimal.getDefaultInstance() : qtyT1_;
      } else {
        return qtyT1Builder_.getMessage();
      }
    }
    /**
     * <pre>
     *плановая позиция в T+1
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal qtyT1 = 10;</code>
     */
    public Builder setQtyT1(dominvest.backend.core.model.Decimal value) {
      if (qtyT1Builder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        qtyT1_ = value;
        onChanged();
      } else {
        qtyT1Builder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     *плановая позиция в T+1
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal qtyT1 = 10;</code>
     */
    public Builder setQtyT1(
        dominvest.backend.core.model.Decimal.Builder builderForValue) {
      if (qtyT1Builder_ == null) {
        qtyT1_ = builderForValue.build();
        onChanged();
      } else {
        qtyT1Builder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     *плановая позиция в T+1
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal qtyT1 = 10;</code>
     */
    public Builder mergeQtyT1(dominvest.backend.core.model.Decimal value) {
      if (qtyT1Builder_ == null) {
        if (qtyT1_ != null) {
          qtyT1_ =
            dominvest.backend.core.model.Decimal.newBuilder(qtyT1_).mergeFrom(value).buildPartial();
        } else {
          qtyT1_ = value;
        }
        onChanged();
      } else {
        qtyT1Builder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     *плановая позиция в T+1
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal qtyT1 = 10;</code>
     */
    public Builder clearQtyT1() {
      if (qtyT1Builder_ == null) {
        qtyT1_ = null;
        onChanged();
      } else {
        qtyT1_ = null;
        qtyT1Builder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     *плановая позиция в T+1
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal qtyT1 = 10;</code>
     */
    public dominvest.backend.core.model.Decimal.Builder getQtyT1Builder() {
      
      onChanged();
      return getQtyT1FieldBuilder().getBuilder();
    }
    /**
     * <pre>
     *плановая позиция в T+1
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal qtyT1 = 10;</code>
     */
    public dominvest.backend.core.model.DecimalOrBuilder getQtyT1OrBuilder() {
      if (qtyT1Builder_ != null) {
        return qtyT1Builder_.getMessageOrBuilder();
      } else {
        return qtyT1_ == null ?
            dominvest.backend.core.model.Decimal.getDefaultInstance() : qtyT1_;
      }
    }
    /**
     * <pre>
     *плановая позиция в T+1
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal qtyT1 = 10;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder> 
        getQtyT1FieldBuilder() {
      if (qtyT1Builder_ == null) {
        qtyT1Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
            dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder>(
                getQtyT1(),
                getParentForChildren(),
                isClean());
        qtyT1_ = null;
      }
      return qtyT1Builder_;
    }

    private dominvest.backend.core.model.Decimal qtyT2_;
    private com.google.protobuf.SingleFieldBuilderV3<
        dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder> qtyT2Builder_;
    /**
     * <pre>
     *плановая позиция в T+2
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal qtyT2 = 11;</code>
     */
    public boolean hasQtyT2() {
      return qtyT2Builder_ != null || qtyT2_ != null;
    }
    /**
     * <pre>
     *плановая позиция в T+2
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal qtyT2 = 11;</code>
     */
    public dominvest.backend.core.model.Decimal getQtyT2() {
      if (qtyT2Builder_ == null) {
        return qtyT2_ == null ? dominvest.backend.core.model.Decimal.getDefaultInstance() : qtyT2_;
      } else {
        return qtyT2Builder_.getMessage();
      }
    }
    /**
     * <pre>
     *плановая позиция в T+2
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal qtyT2 = 11;</code>
     */
    public Builder setQtyT2(dominvest.backend.core.model.Decimal value) {
      if (qtyT2Builder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        qtyT2_ = value;
        onChanged();
      } else {
        qtyT2Builder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     *плановая позиция в T+2
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal qtyT2 = 11;</code>
     */
    public Builder setQtyT2(
        dominvest.backend.core.model.Decimal.Builder builderForValue) {
      if (qtyT2Builder_ == null) {
        qtyT2_ = builderForValue.build();
        onChanged();
      } else {
        qtyT2Builder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     *плановая позиция в T+2
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal qtyT2 = 11;</code>
     */
    public Builder mergeQtyT2(dominvest.backend.core.model.Decimal value) {
      if (qtyT2Builder_ == null) {
        if (qtyT2_ != null) {
          qtyT2_ =
            dominvest.backend.core.model.Decimal.newBuilder(qtyT2_).mergeFrom(value).buildPartial();
        } else {
          qtyT2_ = value;
        }
        onChanged();
      } else {
        qtyT2Builder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     *плановая позиция в T+2
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal qtyT2 = 11;</code>
     */
    public Builder clearQtyT2() {
      if (qtyT2Builder_ == null) {
        qtyT2_ = null;
        onChanged();
      } else {
        qtyT2_ = null;
        qtyT2Builder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     *плановая позиция в T+2
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal qtyT2 = 11;</code>
     */
    public dominvest.backend.core.model.Decimal.Builder getQtyT2Builder() {
      
      onChanged();
      return getQtyT2FieldBuilder().getBuilder();
    }
    /**
     * <pre>
     *плановая позиция в T+2
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal qtyT2 = 11;</code>
     */
    public dominvest.backend.core.model.DecimalOrBuilder getQtyT2OrBuilder() {
      if (qtyT2Builder_ != null) {
        return qtyT2Builder_.getMessageOrBuilder();
      } else {
        return qtyT2_ == null ?
            dominvest.backend.core.model.Decimal.getDefaultInstance() : qtyT2_;
      }
    }
    /**
     * <pre>
     *плановая позиция в T+2
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal qtyT2 = 11;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder> 
        getQtyT2FieldBuilder() {
      if (qtyT2Builder_ == null) {
        qtyT2Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
            dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder>(
                getQtyT2(),
                getParentForChildren(),
                isClean());
        qtyT2_ = null;
      }
      return qtyT2Builder_;
    }

    private dominvest.backend.core.model.Decimal qtyTn_;
    private com.google.protobuf.SingleFieldBuilderV3<
        dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder> qtyTnBuilder_;
    /**
     * <pre>
     *плановая позиция в Tn
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal qtyTn = 12;</code>
     */
    public boolean hasQtyTn() {
      return qtyTnBuilder_ != null || qtyTn_ != null;
    }
    /**
     * <pre>
     *плановая позиция в Tn
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal qtyTn = 12;</code>
     */
    public dominvest.backend.core.model.Decimal getQtyTn() {
      if (qtyTnBuilder_ == null) {
        return qtyTn_ == null ? dominvest.backend.core.model.Decimal.getDefaultInstance() : qtyTn_;
      } else {
        return qtyTnBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     *плановая позиция в Tn
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal qtyTn = 12;</code>
     */
    public Builder setQtyTn(dominvest.backend.core.model.Decimal value) {
      if (qtyTnBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        qtyTn_ = value;
        onChanged();
      } else {
        qtyTnBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     *плановая позиция в Tn
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal qtyTn = 12;</code>
     */
    public Builder setQtyTn(
        dominvest.backend.core.model.Decimal.Builder builderForValue) {
      if (qtyTnBuilder_ == null) {
        qtyTn_ = builderForValue.build();
        onChanged();
      } else {
        qtyTnBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     *плановая позиция в Tn
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal qtyTn = 12;</code>
     */
    public Builder mergeQtyTn(dominvest.backend.core.model.Decimal value) {
      if (qtyTnBuilder_ == null) {
        if (qtyTn_ != null) {
          qtyTn_ =
            dominvest.backend.core.model.Decimal.newBuilder(qtyTn_).mergeFrom(value).buildPartial();
        } else {
          qtyTn_ = value;
        }
        onChanged();
      } else {
        qtyTnBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     *плановая позиция в Tn
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal qtyTn = 12;</code>
     */
    public Builder clearQtyTn() {
      if (qtyTnBuilder_ == null) {
        qtyTn_ = null;
        onChanged();
      } else {
        qtyTn_ = null;
        qtyTnBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     *плановая позиция в Tn
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal qtyTn = 12;</code>
     */
    public dominvest.backend.core.model.Decimal.Builder getQtyTnBuilder() {
      
      onChanged();
      return getQtyTnFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     *плановая позиция в Tn
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal qtyTn = 12;</code>
     */
    public dominvest.backend.core.model.DecimalOrBuilder getQtyTnOrBuilder() {
      if (qtyTnBuilder_ != null) {
        return qtyTnBuilder_.getMessageOrBuilder();
      } else {
        return qtyTn_ == null ?
            dominvest.backend.core.model.Decimal.getDefaultInstance() : qtyTn_;
      }
    }
    /**
     * <pre>
     *плановая позиция в Tn
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal qtyTn = 12;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder> 
        getQtyTnFieldBuilder() {
      if (qtyTnBuilder_ == null) {
        qtyTnBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder>(
                getQtyTn(),
                getParentForChildren(),
                isClean());
        qtyTn_ = null;
      }
      return qtyTnBuilder_;
    }

    private dominvest.backend.core.model.Decimal qtyTotal_;
    private com.google.protobuf.SingleFieldBuilderV3<
        dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder> qtyTotalBuilder_;
    /**
     * <pre>
     *total позиция как сумма T0 + T+1 + T+2 + Tn
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal qtyTotal = 13;</code>
     */
    public boolean hasQtyTotal() {
      return qtyTotalBuilder_ != null || qtyTotal_ != null;
    }
    /**
     * <pre>
     *total позиция как сумма T0 + T+1 + T+2 + Tn
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal qtyTotal = 13;</code>
     */
    public dominvest.backend.core.model.Decimal getQtyTotal() {
      if (qtyTotalBuilder_ == null) {
        return qtyTotal_ == null ? dominvest.backend.core.model.Decimal.getDefaultInstance() : qtyTotal_;
      } else {
        return qtyTotalBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     *total позиция как сумма T0 + T+1 + T+2 + Tn
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal qtyTotal = 13;</code>
     */
    public Builder setQtyTotal(dominvest.backend.core.model.Decimal value) {
      if (qtyTotalBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        qtyTotal_ = value;
        onChanged();
      } else {
        qtyTotalBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     *total позиция как сумма T0 + T+1 + T+2 + Tn
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal qtyTotal = 13;</code>
     */
    public Builder setQtyTotal(
        dominvest.backend.core.model.Decimal.Builder builderForValue) {
      if (qtyTotalBuilder_ == null) {
        qtyTotal_ = builderForValue.build();
        onChanged();
      } else {
        qtyTotalBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     *total позиция как сумма T0 + T+1 + T+2 + Tn
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal qtyTotal = 13;</code>
     */
    public Builder mergeQtyTotal(dominvest.backend.core.model.Decimal value) {
      if (qtyTotalBuilder_ == null) {
        if (qtyTotal_ != null) {
          qtyTotal_ =
            dominvest.backend.core.model.Decimal.newBuilder(qtyTotal_).mergeFrom(value).buildPartial();
        } else {
          qtyTotal_ = value;
        }
        onChanged();
      } else {
        qtyTotalBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     *total позиция как сумма T0 + T+1 + T+2 + Tn
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal qtyTotal = 13;</code>
     */
    public Builder clearQtyTotal() {
      if (qtyTotalBuilder_ == null) {
        qtyTotal_ = null;
        onChanged();
      } else {
        qtyTotal_ = null;
        qtyTotalBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     *total позиция как сумма T0 + T+1 + T+2 + Tn
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal qtyTotal = 13;</code>
     */
    public dominvest.backend.core.model.Decimal.Builder getQtyTotalBuilder() {
      
      onChanged();
      return getQtyTotalFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     *total позиция как сумма T0 + T+1 + T+2 + Tn
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal qtyTotal = 13;</code>
     */
    public dominvest.backend.core.model.DecimalOrBuilder getQtyTotalOrBuilder() {
      if (qtyTotalBuilder_ != null) {
        return qtyTotalBuilder_.getMessageOrBuilder();
      } else {
        return qtyTotal_ == null ?
            dominvest.backend.core.model.Decimal.getDefaultInstance() : qtyTotal_;
      }
    }
    /**
     * <pre>
     *total позиция как сумма T0 + T+1 + T+2 + Tn
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal qtyTotal = 13;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder> 
        getQtyTotalFieldBuilder() {
      if (qtyTotalBuilder_ == null) {
        qtyTotalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder>(
                getQtyTotal(),
                getParentForChildren(),
                isClean());
        qtyTotal_ = null;
      }
      return qtyTotalBuilder_;
    }

    private dominvest.backend.core.model.Decimal blocked_;
    private com.google.protobuf.SingleFieldBuilderV3<
        dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder> blockedBuilder_;
    /**
     * <pre>
     *total сумма заблокированных лимитов по позиции
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal blocked = 14;</code>
     */
    public boolean hasBlocked() {
      return blockedBuilder_ != null || blocked_ != null;
    }
    /**
     * <pre>
     *total сумма заблокированных лимитов по позиции
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal blocked = 14;</code>
     */
    public dominvest.backend.core.model.Decimal getBlocked() {
      if (blockedBuilder_ == null) {
        return blocked_ == null ? dominvest.backend.core.model.Decimal.getDefaultInstance() : blocked_;
      } else {
        return blockedBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     *total сумма заблокированных лимитов по позиции
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal blocked = 14;</code>
     */
    public Builder setBlocked(dominvest.backend.core.model.Decimal value) {
      if (blockedBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        blocked_ = value;
        onChanged();
      } else {
        blockedBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     *total сумма заблокированных лимитов по позиции
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal blocked = 14;</code>
     */
    public Builder setBlocked(
        dominvest.backend.core.model.Decimal.Builder builderForValue) {
      if (blockedBuilder_ == null) {
        blocked_ = builderForValue.build();
        onChanged();
      } else {
        blockedBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     *total сумма заблокированных лимитов по позиции
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal blocked = 14;</code>
     */
    public Builder mergeBlocked(dominvest.backend.core.model.Decimal value) {
      if (blockedBuilder_ == null) {
        if (blocked_ != null) {
          blocked_ =
            dominvest.backend.core.model.Decimal.newBuilder(blocked_).mergeFrom(value).buildPartial();
        } else {
          blocked_ = value;
        }
        onChanged();
      } else {
        blockedBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     *total сумма заблокированных лимитов по позиции
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal blocked = 14;</code>
     */
    public Builder clearBlocked() {
      if (blockedBuilder_ == null) {
        blocked_ = null;
        onChanged();
      } else {
        blocked_ = null;
        blockedBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     *total сумма заблокированных лимитов по позиции
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal blocked = 14;</code>
     */
    public dominvest.backend.core.model.Decimal.Builder getBlockedBuilder() {
      
      onChanged();
      return getBlockedFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     *total сумма заблокированных лимитов по позиции
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal blocked = 14;</code>
     */
    public dominvest.backend.core.model.DecimalOrBuilder getBlockedOrBuilder() {
      if (blockedBuilder_ != null) {
        return blockedBuilder_.getMessageOrBuilder();
      } else {
        return blocked_ == null ?
            dominvest.backend.core.model.Decimal.getDefaultInstance() : blocked_;
      }
    }
    /**
     * <pre>
     *total сумма заблокированных лимитов по позиции
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal blocked = 14;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder> 
        getBlockedFieldBuilder() {
      if (blockedBuilder_ == null) {
        blockedBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder>(
                getBlocked(),
                getParentForChildren(),
                isClean());
        blocked_ = null;
      }
      return blockedBuilder_;
    }

    private dominvest.backend.core.model.Decimal faceValue_;
    private com.google.protobuf.SingleFieldBuilderV3<
        dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder> faceValueBuilder_;
    /**
     * <pre>
     * текущий номинал
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal faceValue = 15;</code>
     */
    public boolean hasFaceValue() {
      return faceValueBuilder_ != null || faceValue_ != null;
    }
    /**
     * <pre>
     * текущий номинал
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal faceValue = 15;</code>
     */
    public dominvest.backend.core.model.Decimal getFaceValue() {
      if (faceValueBuilder_ == null) {
        return faceValue_ == null ? dominvest.backend.core.model.Decimal.getDefaultInstance() : faceValue_;
      } else {
        return faceValueBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * текущий номинал
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal faceValue = 15;</code>
     */
    public Builder setFaceValue(dominvest.backend.core.model.Decimal value) {
      if (faceValueBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        faceValue_ = value;
        onChanged();
      } else {
        faceValueBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * текущий номинал
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal faceValue = 15;</code>
     */
    public Builder setFaceValue(
        dominvest.backend.core.model.Decimal.Builder builderForValue) {
      if (faceValueBuilder_ == null) {
        faceValue_ = builderForValue.build();
        onChanged();
      } else {
        faceValueBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * текущий номинал
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal faceValue = 15;</code>
     */
    public Builder mergeFaceValue(dominvest.backend.core.model.Decimal value) {
      if (faceValueBuilder_ == null) {
        if (faceValue_ != null) {
          faceValue_ =
            dominvest.backend.core.model.Decimal.newBuilder(faceValue_).mergeFrom(value).buildPartial();
        } else {
          faceValue_ = value;
        }
        onChanged();
      } else {
        faceValueBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * текущий номинал
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal faceValue = 15;</code>
     */
    public Builder clearFaceValue() {
      if (faceValueBuilder_ == null) {
        faceValue_ = null;
        onChanged();
      } else {
        faceValue_ = null;
        faceValueBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * текущий номинал
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal faceValue = 15;</code>
     */
    public dominvest.backend.core.model.Decimal.Builder getFaceValueBuilder() {
      
      onChanged();
      return getFaceValueFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * текущий номинал
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal faceValue = 15;</code>
     */
    public dominvest.backend.core.model.DecimalOrBuilder getFaceValueOrBuilder() {
      if (faceValueBuilder_ != null) {
        return faceValueBuilder_.getMessageOrBuilder();
      } else {
        return faceValue_ == null ?
            dominvest.backend.core.model.Decimal.getDefaultInstance() : faceValue_;
      }
    }
    /**
     * <pre>
     * текущий номинал
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal faceValue = 15;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder> 
        getFaceValueFieldBuilder() {
      if (faceValueBuilder_ == null) {
        faceValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder>(
                getFaceValue(),
                getParentForChildren(),
                isClean());
        faceValue_ = null;
      }
      return faceValueBuilder_;
    }

    private dominvest.backend.core.model.Decimal accrInterest_;
    private com.google.protobuf.SingleFieldBuilderV3<
        dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder> accrInterestBuilder_;
    /**
     * <pre>
     *нкд
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal accrInterest = 16;</code>
     */
    public boolean hasAccrInterest() {
      return accrInterestBuilder_ != null || accrInterest_ != null;
    }
    /**
     * <pre>
     *нкд
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal accrInterest = 16;</code>
     */
    public dominvest.backend.core.model.Decimal getAccrInterest() {
      if (accrInterestBuilder_ == null) {
        return accrInterest_ == null ? dominvest.backend.core.model.Decimal.getDefaultInstance() : accrInterest_;
      } else {
        return accrInterestBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     *нкд
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal accrInterest = 16;</code>
     */
    public Builder setAccrInterest(dominvest.backend.core.model.Decimal value) {
      if (accrInterestBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        accrInterest_ = value;
        onChanged();
      } else {
        accrInterestBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     *нкд
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal accrInterest = 16;</code>
     */
    public Builder setAccrInterest(
        dominvest.backend.core.model.Decimal.Builder builderForValue) {
      if (accrInterestBuilder_ == null) {
        accrInterest_ = builderForValue.build();
        onChanged();
      } else {
        accrInterestBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     *нкд
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal accrInterest = 16;</code>
     */
    public Builder mergeAccrInterest(dominvest.backend.core.model.Decimal value) {
      if (accrInterestBuilder_ == null) {
        if (accrInterest_ != null) {
          accrInterest_ =
            dominvest.backend.core.model.Decimal.newBuilder(accrInterest_).mergeFrom(value).buildPartial();
        } else {
          accrInterest_ = value;
        }
        onChanged();
      } else {
        accrInterestBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     *нкд
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal accrInterest = 16;</code>
     */
    public Builder clearAccrInterest() {
      if (accrInterestBuilder_ == null) {
        accrInterest_ = null;
        onChanged();
      } else {
        accrInterest_ = null;
        accrInterestBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     *нкд
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal accrInterest = 16;</code>
     */
    public dominvest.backend.core.model.Decimal.Builder getAccrInterestBuilder() {
      
      onChanged();
      return getAccrInterestFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     *нкд
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal accrInterest = 16;</code>
     */
    public dominvest.backend.core.model.DecimalOrBuilder getAccrInterestOrBuilder() {
      if (accrInterestBuilder_ != null) {
        return accrInterestBuilder_.getMessageOrBuilder();
      } else {
        return accrInterest_ == null ?
            dominvest.backend.core.model.Decimal.getDefaultInstance() : accrInterest_;
      }
    }
    /**
     * <pre>
     *нкд
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal accrInterest = 16;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder> 
        getAccrInterestFieldBuilder() {
      if (accrInterestBuilder_ == null) {
        accrInterestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder>(
                getAccrInterest(),
                getParentForChildren(),
                isClean());
        accrInterest_ = null;
      }
      return accrInterestBuilder_;
    }

    private dominvest.backend.core.model.Decimal wap_;
    private com.google.protobuf.SingleFieldBuilderV3<
        dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder> wapBuilder_;
    /**
     * <pre>
     *средневзвеш. цена
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal wap = 17;</code>
     */
    public boolean hasWap() {
      return wapBuilder_ != null || wap_ != null;
    }
    /**
     * <pre>
     *средневзвеш. цена
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal wap = 17;</code>
     */
    public dominvest.backend.core.model.Decimal getWap() {
      if (wapBuilder_ == null) {
        return wap_ == null ? dominvest.backend.core.model.Decimal.getDefaultInstance() : wap_;
      } else {
        return wapBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     *средневзвеш. цена
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal wap = 17;</code>
     */
    public Builder setWap(dominvest.backend.core.model.Decimal value) {
      if (wapBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        wap_ = value;
        onChanged();
      } else {
        wapBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     *средневзвеш. цена
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal wap = 17;</code>
     */
    public Builder setWap(
        dominvest.backend.core.model.Decimal.Builder builderForValue) {
      if (wapBuilder_ == null) {
        wap_ = builderForValue.build();
        onChanged();
      } else {
        wapBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     *средневзвеш. цена
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal wap = 17;</code>
     */
    public Builder mergeWap(dominvest.backend.core.model.Decimal value) {
      if (wapBuilder_ == null) {
        if (wap_ != null) {
          wap_ =
            dominvest.backend.core.model.Decimal.newBuilder(wap_).mergeFrom(value).buildPartial();
        } else {
          wap_ = value;
        }
        onChanged();
      } else {
        wapBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     *средневзвеш. цена
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal wap = 17;</code>
     */
    public Builder clearWap() {
      if (wapBuilder_ == null) {
        wap_ = null;
        onChanged();
      } else {
        wap_ = null;
        wapBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     *средневзвеш. цена
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal wap = 17;</code>
     */
    public dominvest.backend.core.model.Decimal.Builder getWapBuilder() {
      
      onChanged();
      return getWapFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     *средневзвеш. цена
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal wap = 17;</code>
     */
    public dominvest.backend.core.model.DecimalOrBuilder getWapOrBuilder() {
      if (wapBuilder_ != null) {
        return wapBuilder_.getMessageOrBuilder();
      } else {
        return wap_ == null ?
            dominvest.backend.core.model.Decimal.getDefaultInstance() : wap_;
      }
    }
    /**
     * <pre>
     *средневзвеш. цена
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal wap = 17;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder> 
        getWapFieldBuilder() {
      if (wapBuilder_ == null) {
        wapBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder>(
                getWap(),
                getParentForChildren(),
                isClean());
        wap_ = null;
      }
      return wapBuilder_;
    }

    private dominvest.backend.core.model.Decimal closePrice_;
    private com.google.protobuf.SingleFieldBuilderV3<
        dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder> closePriceBuilder_;
    /**
     * <pre>
     *цена закрытия
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal closePrice = 18;</code>
     */
    public boolean hasClosePrice() {
      return closePriceBuilder_ != null || closePrice_ != null;
    }
    /**
     * <pre>
     *цена закрытия
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal closePrice = 18;</code>
     */
    public dominvest.backend.core.model.Decimal getClosePrice() {
      if (closePriceBuilder_ == null) {
        return closePrice_ == null ? dominvest.backend.core.model.Decimal.getDefaultInstance() : closePrice_;
      } else {
        return closePriceBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     *цена закрытия
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal closePrice = 18;</code>
     */
    public Builder setClosePrice(dominvest.backend.core.model.Decimal value) {
      if (closePriceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        closePrice_ = value;
        onChanged();
      } else {
        closePriceBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     *цена закрытия
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal closePrice = 18;</code>
     */
    public Builder setClosePrice(
        dominvest.backend.core.model.Decimal.Builder builderForValue) {
      if (closePriceBuilder_ == null) {
        closePrice_ = builderForValue.build();
        onChanged();
      } else {
        closePriceBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     *цена закрытия
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal closePrice = 18;</code>
     */
    public Builder mergeClosePrice(dominvest.backend.core.model.Decimal value) {
      if (closePriceBuilder_ == null) {
        if (closePrice_ != null) {
          closePrice_ =
            dominvest.backend.core.model.Decimal.newBuilder(closePrice_).mergeFrom(value).buildPartial();
        } else {
          closePrice_ = value;
        }
        onChanged();
      } else {
        closePriceBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     *цена закрытия
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal closePrice = 18;</code>
     */
    public Builder clearClosePrice() {
      if (closePriceBuilder_ == null) {
        closePrice_ = null;
        onChanged();
      } else {
        closePrice_ = null;
        closePriceBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     *цена закрытия
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal closePrice = 18;</code>
     */
    public dominvest.backend.core.model.Decimal.Builder getClosePriceBuilder() {
      
      onChanged();
      return getClosePriceFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     *цена закрытия
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal closePrice = 18;</code>
     */
    public dominvest.backend.core.model.DecimalOrBuilder getClosePriceOrBuilder() {
      if (closePriceBuilder_ != null) {
        return closePriceBuilder_.getMessageOrBuilder();
      } else {
        return closePrice_ == null ?
            dominvest.backend.core.model.Decimal.getDefaultInstance() : closePrice_;
      }
    }
    /**
     * <pre>
     *цена закрытия
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal closePrice = 18;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder> 
        getClosePriceFieldBuilder() {
      if (closePriceBuilder_ == null) {
        closePriceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder>(
                getClosePrice(),
                getParentForChildren(),
                isClean());
        closePrice_ = null;
      }
      return closePriceBuilder_;
    }

    private dominvest.backend.core.model.Decimal currentPrice_;
    private com.google.protobuf.SingleFieldBuilderV3<
        dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder> currentPriceBuilder_;
    /**
     * <pre>
     *текущая цена
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal currentPrice = 19;</code>
     */
    public boolean hasCurrentPrice() {
      return currentPriceBuilder_ != null || currentPrice_ != null;
    }
    /**
     * <pre>
     *текущая цена
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal currentPrice = 19;</code>
     */
    public dominvest.backend.core.model.Decimal getCurrentPrice() {
      if (currentPriceBuilder_ == null) {
        return currentPrice_ == null ? dominvest.backend.core.model.Decimal.getDefaultInstance() : currentPrice_;
      } else {
        return currentPriceBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     *текущая цена
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal currentPrice = 19;</code>
     */
    public Builder setCurrentPrice(dominvest.backend.core.model.Decimal value) {
      if (currentPriceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        currentPrice_ = value;
        onChanged();
      } else {
        currentPriceBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     *текущая цена
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal currentPrice = 19;</code>
     */
    public Builder setCurrentPrice(
        dominvest.backend.core.model.Decimal.Builder builderForValue) {
      if (currentPriceBuilder_ == null) {
        currentPrice_ = builderForValue.build();
        onChanged();
      } else {
        currentPriceBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     *текущая цена
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal currentPrice = 19;</code>
     */
    public Builder mergeCurrentPrice(dominvest.backend.core.model.Decimal value) {
      if (currentPriceBuilder_ == null) {
        if (currentPrice_ != null) {
          currentPrice_ =
            dominvest.backend.core.model.Decimal.newBuilder(currentPrice_).mergeFrom(value).buildPartial();
        } else {
          currentPrice_ = value;
        }
        onChanged();
      } else {
        currentPriceBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     *текущая цена
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal currentPrice = 19;</code>
     */
    public Builder clearCurrentPrice() {
      if (currentPriceBuilder_ == null) {
        currentPrice_ = null;
        onChanged();
      } else {
        currentPrice_ = null;
        currentPriceBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     *текущая цена
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal currentPrice = 19;</code>
     */
    public dominvest.backend.core.model.Decimal.Builder getCurrentPriceBuilder() {
      
      onChanged();
      return getCurrentPriceFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     *текущая цена
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal currentPrice = 19;</code>
     */
    public dominvest.backend.core.model.DecimalOrBuilder getCurrentPriceOrBuilder() {
      if (currentPriceBuilder_ != null) {
        return currentPriceBuilder_.getMessageOrBuilder();
      } else {
        return currentPrice_ == null ?
            dominvest.backend.core.model.Decimal.getDefaultInstance() : currentPrice_;
      }
    }
    /**
     * <pre>
     *текущая цена
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal currentPrice = 19;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder> 
        getCurrentPriceFieldBuilder() {
      if (currentPriceBuilder_ == null) {
        currentPriceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder>(
                getCurrentPrice(),
                getParentForChildren(),
                isClean());
        currentPrice_ = null;
      }
      return currentPriceBuilder_;
    }

    private dominvest.backend.core.model.Decimal realPnL_;
    private com.google.protobuf.SingleFieldBuilderV3<
        dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder> realPnLBuilder_;
    /**
     * <pre>
     * реализованный profit&amp;loss
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal realPnL = 20;</code>
     */
    public boolean hasRealPnL() {
      return realPnLBuilder_ != null || realPnL_ != null;
    }
    /**
     * <pre>
     * реализованный profit&amp;loss
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal realPnL = 20;</code>
     */
    public dominvest.backend.core.model.Decimal getRealPnL() {
      if (realPnLBuilder_ == null) {
        return realPnL_ == null ? dominvest.backend.core.model.Decimal.getDefaultInstance() : realPnL_;
      } else {
        return realPnLBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * реализованный profit&amp;loss
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal realPnL = 20;</code>
     */
    public Builder setRealPnL(dominvest.backend.core.model.Decimal value) {
      if (realPnLBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        realPnL_ = value;
        onChanged();
      } else {
        realPnLBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * реализованный profit&amp;loss
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal realPnL = 20;</code>
     */
    public Builder setRealPnL(
        dominvest.backend.core.model.Decimal.Builder builderForValue) {
      if (realPnLBuilder_ == null) {
        realPnL_ = builderForValue.build();
        onChanged();
      } else {
        realPnLBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * реализованный profit&amp;loss
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal realPnL = 20;</code>
     */
    public Builder mergeRealPnL(dominvest.backend.core.model.Decimal value) {
      if (realPnLBuilder_ == null) {
        if (realPnL_ != null) {
          realPnL_ =
            dominvest.backend.core.model.Decimal.newBuilder(realPnL_).mergeFrom(value).buildPartial();
        } else {
          realPnL_ = value;
        }
        onChanged();
      } else {
        realPnLBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * реализованный profit&amp;loss
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal realPnL = 20;</code>
     */
    public Builder clearRealPnL() {
      if (realPnLBuilder_ == null) {
        realPnL_ = null;
        onChanged();
      } else {
        realPnL_ = null;
        realPnLBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * реализованный profit&amp;loss
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal realPnL = 20;</code>
     */
    public dominvest.backend.core.model.Decimal.Builder getRealPnLBuilder() {
      
      onChanged();
      return getRealPnLFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * реализованный profit&amp;loss
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal realPnL = 20;</code>
     */
    public dominvest.backend.core.model.DecimalOrBuilder getRealPnLOrBuilder() {
      if (realPnLBuilder_ != null) {
        return realPnLBuilder_.getMessageOrBuilder();
      } else {
        return realPnL_ == null ?
            dominvest.backend.core.model.Decimal.getDefaultInstance() : realPnL_;
      }
    }
    /**
     * <pre>
     * реализованный profit&amp;loss
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal realPnL = 20;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder> 
        getRealPnLFieldBuilder() {
      if (realPnLBuilder_ == null) {
        realPnLBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder>(
                getRealPnL(),
                getParentForChildren(),
                isClean());
        realPnL_ = null;
      }
      return realPnLBuilder_;
    }

    private dominvest.backend.core.model.Decimal unRealPnL_;
    private com.google.protobuf.SingleFieldBuilderV3<
        dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder> unRealPnLBuilder_;
    /**
     * <pre>
     *нереализованный profit&amp;loss за все время
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal unRealPnL = 21;</code>
     */
    public boolean hasUnRealPnL() {
      return unRealPnLBuilder_ != null || unRealPnL_ != null;
    }
    /**
     * <pre>
     *нереализованный profit&amp;loss за все время
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal unRealPnL = 21;</code>
     */
    public dominvest.backend.core.model.Decimal getUnRealPnL() {
      if (unRealPnLBuilder_ == null) {
        return unRealPnL_ == null ? dominvest.backend.core.model.Decimal.getDefaultInstance() : unRealPnL_;
      } else {
        return unRealPnLBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     *нереализованный profit&amp;loss за все время
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal unRealPnL = 21;</code>
     */
    public Builder setUnRealPnL(dominvest.backend.core.model.Decimal value) {
      if (unRealPnLBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        unRealPnL_ = value;
        onChanged();
      } else {
        unRealPnLBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     *нереализованный profit&amp;loss за все время
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal unRealPnL = 21;</code>
     */
    public Builder setUnRealPnL(
        dominvest.backend.core.model.Decimal.Builder builderForValue) {
      if (unRealPnLBuilder_ == null) {
        unRealPnL_ = builderForValue.build();
        onChanged();
      } else {
        unRealPnLBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     *нереализованный profit&amp;loss за все время
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal unRealPnL = 21;</code>
     */
    public Builder mergeUnRealPnL(dominvest.backend.core.model.Decimal value) {
      if (unRealPnLBuilder_ == null) {
        if (unRealPnL_ != null) {
          unRealPnL_ =
            dominvest.backend.core.model.Decimal.newBuilder(unRealPnL_).mergeFrom(value).buildPartial();
        } else {
          unRealPnL_ = value;
        }
        onChanged();
      } else {
        unRealPnLBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     *нереализованный profit&amp;loss за все время
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal unRealPnL = 21;</code>
     */
    public Builder clearUnRealPnL() {
      if (unRealPnLBuilder_ == null) {
        unRealPnL_ = null;
        onChanged();
      } else {
        unRealPnL_ = null;
        unRealPnLBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     *нереализованный profit&amp;loss за все время
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal unRealPnL = 21;</code>
     */
    public dominvest.backend.core.model.Decimal.Builder getUnRealPnLBuilder() {
      
      onChanged();
      return getUnRealPnLFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     *нереализованный profit&amp;loss за все время
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal unRealPnL = 21;</code>
     */
    public dominvest.backend.core.model.DecimalOrBuilder getUnRealPnLOrBuilder() {
      if (unRealPnLBuilder_ != null) {
        return unRealPnLBuilder_.getMessageOrBuilder();
      } else {
        return unRealPnL_ == null ?
            dominvest.backend.core.model.Decimal.getDefaultInstance() : unRealPnL_;
      }
    }
    /**
     * <pre>
     *нереализованный profit&amp;loss за все время
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal unRealPnL = 21;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder> 
        getUnRealPnLFieldBuilder() {
      if (unRealPnLBuilder_ == null) {
        unRealPnLBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder>(
                getUnRealPnL(),
                getParentForChildren(),
                isClean());
        unRealPnL_ = null;
      }
      return unRealPnLBuilder_;
    }

    private dominvest.backend.core.model.Decimal dailyPnL_;
    private com.google.protobuf.SingleFieldBuilderV3<
        dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder> dailyPnLBuilder_;
    /**
     * <pre>
     *нереализованный profit&amp;loss за день
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal dailyPnL = 22;</code>
     */
    public boolean hasDailyPnL() {
      return dailyPnLBuilder_ != null || dailyPnL_ != null;
    }
    /**
     * <pre>
     *нереализованный profit&amp;loss за день
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal dailyPnL = 22;</code>
     */
    public dominvest.backend.core.model.Decimal getDailyPnL() {
      if (dailyPnLBuilder_ == null) {
        return dailyPnL_ == null ? dominvest.backend.core.model.Decimal.getDefaultInstance() : dailyPnL_;
      } else {
        return dailyPnLBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     *нереализованный profit&amp;loss за день
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal dailyPnL = 22;</code>
     */
    public Builder setDailyPnL(dominvest.backend.core.model.Decimal value) {
      if (dailyPnLBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        dailyPnL_ = value;
        onChanged();
      } else {
        dailyPnLBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     *нереализованный profit&amp;loss за день
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal dailyPnL = 22;</code>
     */
    public Builder setDailyPnL(
        dominvest.backend.core.model.Decimal.Builder builderForValue) {
      if (dailyPnLBuilder_ == null) {
        dailyPnL_ = builderForValue.build();
        onChanged();
      } else {
        dailyPnLBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     *нереализованный profit&amp;loss за день
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal dailyPnL = 22;</code>
     */
    public Builder mergeDailyPnL(dominvest.backend.core.model.Decimal value) {
      if (dailyPnLBuilder_ == null) {
        if (dailyPnL_ != null) {
          dailyPnL_ =
            dominvest.backend.core.model.Decimal.newBuilder(dailyPnL_).mergeFrom(value).buildPartial();
        } else {
          dailyPnL_ = value;
        }
        onChanged();
      } else {
        dailyPnLBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     *нереализованный profit&amp;loss за день
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal dailyPnL = 22;</code>
     */
    public Builder clearDailyPnL() {
      if (dailyPnLBuilder_ == null) {
        dailyPnL_ = null;
        onChanged();
      } else {
        dailyPnL_ = null;
        dailyPnLBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     *нереализованный profit&amp;loss за день
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal dailyPnL = 22;</code>
     */
    public dominvest.backend.core.model.Decimal.Builder getDailyPnLBuilder() {
      
      onChanged();
      return getDailyPnLFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     *нереализованный profit&amp;loss за день
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal dailyPnL = 22;</code>
     */
    public dominvest.backend.core.model.DecimalOrBuilder getDailyPnLOrBuilder() {
      if (dailyPnLBuilder_ != null) {
        return dailyPnLBuilder_.getMessageOrBuilder();
      } else {
        return dailyPnL_ == null ?
            dominvest.backend.core.model.Decimal.getDefaultInstance() : dailyPnL_;
      }
    }
    /**
     * <pre>
     *нереализованный profit&amp;loss за день
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal dailyPnL = 22;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder> 
        getDailyPnLFieldBuilder() {
      if (dailyPnLBuilder_ == null) {
        dailyPnLBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder>(
                getDailyPnL(),
                getParentForChildren(),
                isClean());
        dailyPnL_ = null;
      }
      return dailyPnLBuilder_;
    }

    private dominvest.backend.core.model.Decimal monthlyPnL_;
    private com.google.protobuf.SingleFieldBuilderV3<
        dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder> monthlyPnLBuilder_;
    /**
     * <pre>
     *нереализованный profit&amp;loss за месяц
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal monthlyPnL = 23;</code>
     */
    public boolean hasMonthlyPnL() {
      return monthlyPnLBuilder_ != null || monthlyPnL_ != null;
    }
    /**
     * <pre>
     *нереализованный profit&amp;loss за месяц
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal monthlyPnL = 23;</code>
     */
    public dominvest.backend.core.model.Decimal getMonthlyPnL() {
      if (monthlyPnLBuilder_ == null) {
        return monthlyPnL_ == null ? dominvest.backend.core.model.Decimal.getDefaultInstance() : monthlyPnL_;
      } else {
        return monthlyPnLBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     *нереализованный profit&amp;loss за месяц
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal monthlyPnL = 23;</code>
     */
    public Builder setMonthlyPnL(dominvest.backend.core.model.Decimal value) {
      if (monthlyPnLBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        monthlyPnL_ = value;
        onChanged();
      } else {
        monthlyPnLBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     *нереализованный profit&amp;loss за месяц
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal monthlyPnL = 23;</code>
     */
    public Builder setMonthlyPnL(
        dominvest.backend.core.model.Decimal.Builder builderForValue) {
      if (monthlyPnLBuilder_ == null) {
        monthlyPnL_ = builderForValue.build();
        onChanged();
      } else {
        monthlyPnLBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     *нереализованный profit&amp;loss за месяц
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal monthlyPnL = 23;</code>
     */
    public Builder mergeMonthlyPnL(dominvest.backend.core.model.Decimal value) {
      if (monthlyPnLBuilder_ == null) {
        if (monthlyPnL_ != null) {
          monthlyPnL_ =
            dominvest.backend.core.model.Decimal.newBuilder(monthlyPnL_).mergeFrom(value).buildPartial();
        } else {
          monthlyPnL_ = value;
        }
        onChanged();
      } else {
        monthlyPnLBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     *нереализованный profit&amp;loss за месяц
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal monthlyPnL = 23;</code>
     */
    public Builder clearMonthlyPnL() {
      if (monthlyPnLBuilder_ == null) {
        monthlyPnL_ = null;
        onChanged();
      } else {
        monthlyPnL_ = null;
        monthlyPnLBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     *нереализованный profit&amp;loss за месяц
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal monthlyPnL = 23;</code>
     */
    public dominvest.backend.core.model.Decimal.Builder getMonthlyPnLBuilder() {
      
      onChanged();
      return getMonthlyPnLFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     *нереализованный profit&amp;loss за месяц
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal monthlyPnL = 23;</code>
     */
    public dominvest.backend.core.model.DecimalOrBuilder getMonthlyPnLOrBuilder() {
      if (monthlyPnLBuilder_ != null) {
        return monthlyPnLBuilder_.getMessageOrBuilder();
      } else {
        return monthlyPnL_ == null ?
            dominvest.backend.core.model.Decimal.getDefaultInstance() : monthlyPnL_;
      }
    }
    /**
     * <pre>
     *нереализованный profit&amp;loss за месяц
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal monthlyPnL = 23;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder> 
        getMonthlyPnLFieldBuilder() {
      if (monthlyPnLBuilder_ == null) {
        monthlyPnLBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder>(
                getMonthlyPnL(),
                getParentForChildren(),
                isClean());
        monthlyPnL_ = null;
      }
      return monthlyPnLBuilder_;
    }

    private dominvest.backend.core.model.Decimal weeklyPnL_;
    private com.google.protobuf.SingleFieldBuilderV3<
        dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder> weeklyPnLBuilder_;
    /**
     * <pre>
     *нереализованныйprofit&amp;loss за неделю
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal weeklyPnL = 24;</code>
     */
    public boolean hasWeeklyPnL() {
      return weeklyPnLBuilder_ != null || weeklyPnL_ != null;
    }
    /**
     * <pre>
     *нереализованныйprofit&amp;loss за неделю
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal weeklyPnL = 24;</code>
     */
    public dominvest.backend.core.model.Decimal getWeeklyPnL() {
      if (weeklyPnLBuilder_ == null) {
        return weeklyPnL_ == null ? dominvest.backend.core.model.Decimal.getDefaultInstance() : weeklyPnL_;
      } else {
        return weeklyPnLBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     *нереализованныйprofit&amp;loss за неделю
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal weeklyPnL = 24;</code>
     */
    public Builder setWeeklyPnL(dominvest.backend.core.model.Decimal value) {
      if (weeklyPnLBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        weeklyPnL_ = value;
        onChanged();
      } else {
        weeklyPnLBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     *нереализованныйprofit&amp;loss за неделю
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal weeklyPnL = 24;</code>
     */
    public Builder setWeeklyPnL(
        dominvest.backend.core.model.Decimal.Builder builderForValue) {
      if (weeklyPnLBuilder_ == null) {
        weeklyPnL_ = builderForValue.build();
        onChanged();
      } else {
        weeklyPnLBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     *нереализованныйprofit&amp;loss за неделю
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal weeklyPnL = 24;</code>
     */
    public Builder mergeWeeklyPnL(dominvest.backend.core.model.Decimal value) {
      if (weeklyPnLBuilder_ == null) {
        if (weeklyPnL_ != null) {
          weeklyPnL_ =
            dominvest.backend.core.model.Decimal.newBuilder(weeklyPnL_).mergeFrom(value).buildPartial();
        } else {
          weeklyPnL_ = value;
        }
        onChanged();
      } else {
        weeklyPnLBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     *нереализованныйprofit&amp;loss за неделю
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal weeklyPnL = 24;</code>
     */
    public Builder clearWeeklyPnL() {
      if (weeklyPnLBuilder_ == null) {
        weeklyPnL_ = null;
        onChanged();
      } else {
        weeklyPnL_ = null;
        weeklyPnLBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     *нереализованныйprofit&amp;loss за неделю
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal weeklyPnL = 24;</code>
     */
    public dominvest.backend.core.model.Decimal.Builder getWeeklyPnLBuilder() {
      
      onChanged();
      return getWeeklyPnLFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     *нереализованныйprofit&amp;loss за неделю
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal weeklyPnL = 24;</code>
     */
    public dominvest.backend.core.model.DecimalOrBuilder getWeeklyPnLOrBuilder() {
      if (weeklyPnLBuilder_ != null) {
        return weeklyPnLBuilder_.getMessageOrBuilder();
      } else {
        return weeklyPnL_ == null ?
            dominvest.backend.core.model.Decimal.getDefaultInstance() : weeklyPnL_;
      }
    }
    /**
     * <pre>
     *нереализованныйprofit&amp;loss за неделю
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal weeklyPnL = 24;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder> 
        getWeeklyPnLFieldBuilder() {
      if (weeklyPnLBuilder_ == null) {
        weeklyPnLBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder>(
                getWeeklyPnL(),
                getParentForChildren(),
                isClean());
        weeklyPnL_ = null;
      }
      return weeklyPnLBuilder_;
    }

    private dominvest.backend.core.model.Decimal quarterlyPnL_;
    private com.google.protobuf.SingleFieldBuilderV3<
        dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder> quarterlyPnLBuilder_;
    /**
     * <pre>
     *нереализованный profit%loss за квартал
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal quarterlyPnL = 25;</code>
     */
    public boolean hasQuarterlyPnL() {
      return quarterlyPnLBuilder_ != null || quarterlyPnL_ != null;
    }
    /**
     * <pre>
     *нереализованный profit%loss за квартал
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal quarterlyPnL = 25;</code>
     */
    public dominvest.backend.core.model.Decimal getQuarterlyPnL() {
      if (quarterlyPnLBuilder_ == null) {
        return quarterlyPnL_ == null ? dominvest.backend.core.model.Decimal.getDefaultInstance() : quarterlyPnL_;
      } else {
        return quarterlyPnLBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     *нереализованный profit%loss за квартал
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal quarterlyPnL = 25;</code>
     */
    public Builder setQuarterlyPnL(dominvest.backend.core.model.Decimal value) {
      if (quarterlyPnLBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        quarterlyPnL_ = value;
        onChanged();
      } else {
        quarterlyPnLBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     *нереализованный profit%loss за квартал
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal quarterlyPnL = 25;</code>
     */
    public Builder setQuarterlyPnL(
        dominvest.backend.core.model.Decimal.Builder builderForValue) {
      if (quarterlyPnLBuilder_ == null) {
        quarterlyPnL_ = builderForValue.build();
        onChanged();
      } else {
        quarterlyPnLBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     *нереализованный profit%loss за квартал
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal quarterlyPnL = 25;</code>
     */
    public Builder mergeQuarterlyPnL(dominvest.backend.core.model.Decimal value) {
      if (quarterlyPnLBuilder_ == null) {
        if (quarterlyPnL_ != null) {
          quarterlyPnL_ =
            dominvest.backend.core.model.Decimal.newBuilder(quarterlyPnL_).mergeFrom(value).buildPartial();
        } else {
          quarterlyPnL_ = value;
        }
        onChanged();
      } else {
        quarterlyPnLBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     *нереализованный profit%loss за квартал
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal quarterlyPnL = 25;</code>
     */
    public Builder clearQuarterlyPnL() {
      if (quarterlyPnLBuilder_ == null) {
        quarterlyPnL_ = null;
        onChanged();
      } else {
        quarterlyPnL_ = null;
        quarterlyPnLBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     *нереализованный profit%loss за квартал
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal quarterlyPnL = 25;</code>
     */
    public dominvest.backend.core.model.Decimal.Builder getQuarterlyPnLBuilder() {
      
      onChanged();
      return getQuarterlyPnLFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     *нереализованный profit%loss за квартал
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal quarterlyPnL = 25;</code>
     */
    public dominvest.backend.core.model.DecimalOrBuilder getQuarterlyPnLOrBuilder() {
      if (quarterlyPnLBuilder_ != null) {
        return quarterlyPnLBuilder_.getMessageOrBuilder();
      } else {
        return quarterlyPnL_ == null ?
            dominvest.backend.core.model.Decimal.getDefaultInstance() : quarterlyPnL_;
      }
    }
    /**
     * <pre>
     *нереализованный profit%loss за квартал
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal quarterlyPnL = 25;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder> 
        getQuarterlyPnLFieldBuilder() {
      if (quarterlyPnLBuilder_ == null) {
        quarterlyPnLBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder>(
                getQuarterlyPnL(),
                getParentForChildren(),
                isClean());
        quarterlyPnL_ = null;
      }
      return quarterlyPnLBuilder_;
    }

    private dominvest.backend.core.model.Decimal yearlyPnL_;
    private com.google.protobuf.SingleFieldBuilderV3<
        dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder> yearlyPnLBuilder_;
    /**
     * <pre>
     *нереализованный profit&amp;loss с начала года
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal yearlyPnL = 26;</code>
     */
    public boolean hasYearlyPnL() {
      return yearlyPnLBuilder_ != null || yearlyPnL_ != null;
    }
    /**
     * <pre>
     *нереализованный profit&amp;loss с начала года
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal yearlyPnL = 26;</code>
     */
    public dominvest.backend.core.model.Decimal getYearlyPnL() {
      if (yearlyPnLBuilder_ == null) {
        return yearlyPnL_ == null ? dominvest.backend.core.model.Decimal.getDefaultInstance() : yearlyPnL_;
      } else {
        return yearlyPnLBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     *нереализованный profit&amp;loss с начала года
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal yearlyPnL = 26;</code>
     */
    public Builder setYearlyPnL(dominvest.backend.core.model.Decimal value) {
      if (yearlyPnLBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        yearlyPnL_ = value;
        onChanged();
      } else {
        yearlyPnLBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     *нереализованный profit&amp;loss с начала года
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal yearlyPnL = 26;</code>
     */
    public Builder setYearlyPnL(
        dominvest.backend.core.model.Decimal.Builder builderForValue) {
      if (yearlyPnLBuilder_ == null) {
        yearlyPnL_ = builderForValue.build();
        onChanged();
      } else {
        yearlyPnLBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     *нереализованный profit&amp;loss с начала года
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal yearlyPnL = 26;</code>
     */
    public Builder mergeYearlyPnL(dominvest.backend.core.model.Decimal value) {
      if (yearlyPnLBuilder_ == null) {
        if (yearlyPnL_ != null) {
          yearlyPnL_ =
            dominvest.backend.core.model.Decimal.newBuilder(yearlyPnL_).mergeFrom(value).buildPartial();
        } else {
          yearlyPnL_ = value;
        }
        onChanged();
      } else {
        yearlyPnLBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     *нереализованный profit&amp;loss с начала года
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal yearlyPnL = 26;</code>
     */
    public Builder clearYearlyPnL() {
      if (yearlyPnLBuilder_ == null) {
        yearlyPnL_ = null;
        onChanged();
      } else {
        yearlyPnL_ = null;
        yearlyPnLBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     *нереализованный profit&amp;loss с начала года
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal yearlyPnL = 26;</code>
     */
    public dominvest.backend.core.model.Decimal.Builder getYearlyPnLBuilder() {
      
      onChanged();
      return getYearlyPnLFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     *нереализованный profit&amp;loss с начала года
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal yearlyPnL = 26;</code>
     */
    public dominvest.backend.core.model.DecimalOrBuilder getYearlyPnLOrBuilder() {
      if (yearlyPnLBuilder_ != null) {
        return yearlyPnLBuilder_.getMessageOrBuilder();
      } else {
        return yearlyPnL_ == null ?
            dominvest.backend.core.model.Decimal.getDefaultInstance() : yearlyPnL_;
      }
    }
    /**
     * <pre>
     *нереализованный profit&amp;loss с начала года
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal yearlyPnL = 26;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder> 
        getYearlyPnLFieldBuilder() {
      if (yearlyPnLBuilder_ == null) {
        yearlyPnLBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder>(
                getYearlyPnL(),
                getParentForChildren(),
                isClean());
        yearlyPnL_ = null;
      }
      return yearlyPnLBuilder_;
    }

    private java.lang.Object pactId_ = "";
    /**
     * <code>string pactId = 27;</code>
     */
    public java.lang.String getPactId() {
      java.lang.Object ref = pactId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        pactId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string pactId = 27;</code>
     */
    public com.google.protobuf.ByteString
        getPactIdBytes() {
      java.lang.Object ref = pactId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pactId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string pactId = 27;</code>
     */
    public Builder setPactId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      pactId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string pactId = 27;</code>
     */
    public Builder clearPactId() {
      
      pactId_ = getDefaultInstance().getPactId();
      onChanged();
      return this;
    }
    /**
     * <code>string pactId = 27;</code>
     */
    public Builder setPactIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      pactId_ = value;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:dominvest.backend.core.model.Position)
  }

  // @@protoc_insertion_point(class_scope:dominvest.backend.core.model.Position)
  private static final dominvest.backend.core.model.Position DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new dominvest.backend.core.model.Position();
  }

  public static dominvest.backend.core.model.Position getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Position>
      PARSER = new com.google.protobuf.AbstractParser<Position>() {
    @java.lang.Override
    public Position parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Position(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Position> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Position> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public dominvest.backend.core.model.Position getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

