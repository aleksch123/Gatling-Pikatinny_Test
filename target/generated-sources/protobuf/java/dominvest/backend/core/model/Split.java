// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PortfolioAtheneService.proto

package dominvest.backend.core.model;

/**
 * <pre>
 *параметры для сплита
 * </pre>
 *
 * Protobuf type {@code dominvest.backend.core.model.Split}
 */
public  final class Split extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:dominvest.backend.core.model.Split)
    SplitOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Split.newBuilder() to construct.
  private Split(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Split() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Split();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Split(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            dominvest.backend.core.model.Decimal.Builder subBuilder = null;
            if (prevQty_ != null) {
              subBuilder = prevQty_.toBuilder();
            }
            prevQty_ = input.readMessage(dominvest.backend.core.model.Decimal.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(prevQty_);
              prevQty_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            dominvest.backend.core.model.Decimal.Builder subBuilder = null;
            if (prevPrice_ != null) {
              subBuilder = prevPrice_.toBuilder();
            }
            prevPrice_ = input.readMessage(dominvest.backend.core.model.Decimal.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(prevPrice_);
              prevPrice_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            dominvest.backend.core.model.Decimal.Builder subBuilder = null;
            if (splitQty_ != null) {
              subBuilder = splitQty_.toBuilder();
            }
            splitQty_ = input.readMessage(dominvest.backend.core.model.Decimal.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(splitQty_);
              splitQty_ = subBuilder.buildPartial();
            }

            break;
          }
          case 34: {
            dominvest.backend.core.model.Decimal.Builder subBuilder = null;
            if (splitPrice_ != null) {
              subBuilder = splitPrice_.toBuilder();
            }
            splitPrice_ = input.readMessage(dominvest.backend.core.model.Decimal.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(splitPrice_);
              splitPrice_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return dominvest.backend.core.model.PortfolioAtheneService.internal_static_dominvest_backend_core_model_Split_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return dominvest.backend.core.model.PortfolioAtheneService.internal_static_dominvest_backend_core_model_Split_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            dominvest.backend.core.model.Split.class, dominvest.backend.core.model.Split.Builder.class);
  }

  public static final int PREVQTY_FIELD_NUMBER = 1;
  private dominvest.backend.core.model.Decimal prevQty_;
  /**
   * <pre>
   *кол-во до сплита
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal prevQty = 1;</code>
   */
  public boolean hasPrevQty() {
    return prevQty_ != null;
  }
  /**
   * <pre>
   *кол-во до сплита
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal prevQty = 1;</code>
   */
  public dominvest.backend.core.model.Decimal getPrevQty() {
    return prevQty_ == null ? dominvest.backend.core.model.Decimal.getDefaultInstance() : prevQty_;
  }
  /**
   * <pre>
   *кол-во до сплита
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal prevQty = 1;</code>
   */
  public dominvest.backend.core.model.DecimalOrBuilder getPrevQtyOrBuilder() {
    return getPrevQty();
  }

  public static final int PREVPRICE_FIELD_NUMBER = 2;
  private dominvest.backend.core.model.Decimal prevPrice_;
  /**
   * <pre>
   *цена до сплита
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal prevPrice = 2;</code>
   */
  public boolean hasPrevPrice() {
    return prevPrice_ != null;
  }
  /**
   * <pre>
   *цена до сплита
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal prevPrice = 2;</code>
   */
  public dominvest.backend.core.model.Decimal getPrevPrice() {
    return prevPrice_ == null ? dominvest.backend.core.model.Decimal.getDefaultInstance() : prevPrice_;
  }
  /**
   * <pre>
   *цена до сплита
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal prevPrice = 2;</code>
   */
  public dominvest.backend.core.model.DecimalOrBuilder getPrevPriceOrBuilder() {
    return getPrevPrice();
  }

  public static final int SPLITQTY_FIELD_NUMBER = 3;
  private dominvest.backend.core.model.Decimal splitQty_;
  /**
   * <pre>
   *цена до сплита
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal splitQty = 3;</code>
   */
  public boolean hasSplitQty() {
    return splitQty_ != null;
  }
  /**
   * <pre>
   *цена до сплита
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal splitQty = 3;</code>
   */
  public dominvest.backend.core.model.Decimal getSplitQty() {
    return splitQty_ == null ? dominvest.backend.core.model.Decimal.getDefaultInstance() : splitQty_;
  }
  /**
   * <pre>
   *цена до сплита
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal splitQty = 3;</code>
   */
  public dominvest.backend.core.model.DecimalOrBuilder getSplitQtyOrBuilder() {
    return getSplitQty();
  }

  public static final int SPLITPRICE_FIELD_NUMBER = 4;
  private dominvest.backend.core.model.Decimal splitPrice_;
  /**
   * <pre>
   *цена до сплита
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal splitPrice = 4;</code>
   */
  public boolean hasSplitPrice() {
    return splitPrice_ != null;
  }
  /**
   * <pre>
   *цена до сплита
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal splitPrice = 4;</code>
   */
  public dominvest.backend.core.model.Decimal getSplitPrice() {
    return splitPrice_ == null ? dominvest.backend.core.model.Decimal.getDefaultInstance() : splitPrice_;
  }
  /**
   * <pre>
   *цена до сплита
   * </pre>
   *
   * <code>.dominvest.backend.core.model.Decimal splitPrice = 4;</code>
   */
  public dominvest.backend.core.model.DecimalOrBuilder getSplitPriceOrBuilder() {
    return getSplitPrice();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (prevQty_ != null) {
      output.writeMessage(1, getPrevQty());
    }
    if (prevPrice_ != null) {
      output.writeMessage(2, getPrevPrice());
    }
    if (splitQty_ != null) {
      output.writeMessage(3, getSplitQty());
    }
    if (splitPrice_ != null) {
      output.writeMessage(4, getSplitPrice());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (prevQty_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getPrevQty());
    }
    if (prevPrice_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getPrevPrice());
    }
    if (splitQty_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getSplitQty());
    }
    if (splitPrice_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getSplitPrice());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof dominvest.backend.core.model.Split)) {
      return super.equals(obj);
    }
    dominvest.backend.core.model.Split other = (dominvest.backend.core.model.Split) obj;

    if (hasPrevQty() != other.hasPrevQty()) return false;
    if (hasPrevQty()) {
      if (!getPrevQty()
          .equals(other.getPrevQty())) return false;
    }
    if (hasPrevPrice() != other.hasPrevPrice()) return false;
    if (hasPrevPrice()) {
      if (!getPrevPrice()
          .equals(other.getPrevPrice())) return false;
    }
    if (hasSplitQty() != other.hasSplitQty()) return false;
    if (hasSplitQty()) {
      if (!getSplitQty()
          .equals(other.getSplitQty())) return false;
    }
    if (hasSplitPrice() != other.hasSplitPrice()) return false;
    if (hasSplitPrice()) {
      if (!getSplitPrice()
          .equals(other.getSplitPrice())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasPrevQty()) {
      hash = (37 * hash) + PREVQTY_FIELD_NUMBER;
      hash = (53 * hash) + getPrevQty().hashCode();
    }
    if (hasPrevPrice()) {
      hash = (37 * hash) + PREVPRICE_FIELD_NUMBER;
      hash = (53 * hash) + getPrevPrice().hashCode();
    }
    if (hasSplitQty()) {
      hash = (37 * hash) + SPLITQTY_FIELD_NUMBER;
      hash = (53 * hash) + getSplitQty().hashCode();
    }
    if (hasSplitPrice()) {
      hash = (37 * hash) + SPLITPRICE_FIELD_NUMBER;
      hash = (53 * hash) + getSplitPrice().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static dominvest.backend.core.model.Split parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static dominvest.backend.core.model.Split parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static dominvest.backend.core.model.Split parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static dominvest.backend.core.model.Split parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static dominvest.backend.core.model.Split parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static dominvest.backend.core.model.Split parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static dominvest.backend.core.model.Split parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static dominvest.backend.core.model.Split parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static dominvest.backend.core.model.Split parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static dominvest.backend.core.model.Split parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static dominvest.backend.core.model.Split parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static dominvest.backend.core.model.Split parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(dominvest.backend.core.model.Split prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   *параметры для сплита
   * </pre>
   *
   * Protobuf type {@code dominvest.backend.core.model.Split}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:dominvest.backend.core.model.Split)
      dominvest.backend.core.model.SplitOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dominvest.backend.core.model.PortfolioAtheneService.internal_static_dominvest_backend_core_model_Split_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dominvest.backend.core.model.PortfolioAtheneService.internal_static_dominvest_backend_core_model_Split_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dominvest.backend.core.model.Split.class, dominvest.backend.core.model.Split.Builder.class);
    }

    // Construct using dominvest.backend.core.model.Split.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (prevQtyBuilder_ == null) {
        prevQty_ = null;
      } else {
        prevQty_ = null;
        prevQtyBuilder_ = null;
      }
      if (prevPriceBuilder_ == null) {
        prevPrice_ = null;
      } else {
        prevPrice_ = null;
        prevPriceBuilder_ = null;
      }
      if (splitQtyBuilder_ == null) {
        splitQty_ = null;
      } else {
        splitQty_ = null;
        splitQtyBuilder_ = null;
      }
      if (splitPriceBuilder_ == null) {
        splitPrice_ = null;
      } else {
        splitPrice_ = null;
        splitPriceBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return dominvest.backend.core.model.PortfolioAtheneService.internal_static_dominvest_backend_core_model_Split_descriptor;
    }

    @java.lang.Override
    public dominvest.backend.core.model.Split getDefaultInstanceForType() {
      return dominvest.backend.core.model.Split.getDefaultInstance();
    }

    @java.lang.Override
    public dominvest.backend.core.model.Split build() {
      dominvest.backend.core.model.Split result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public dominvest.backend.core.model.Split buildPartial() {
      dominvest.backend.core.model.Split result = new dominvest.backend.core.model.Split(this);
      if (prevQtyBuilder_ == null) {
        result.prevQty_ = prevQty_;
      } else {
        result.prevQty_ = prevQtyBuilder_.build();
      }
      if (prevPriceBuilder_ == null) {
        result.prevPrice_ = prevPrice_;
      } else {
        result.prevPrice_ = prevPriceBuilder_.build();
      }
      if (splitQtyBuilder_ == null) {
        result.splitQty_ = splitQty_;
      } else {
        result.splitQty_ = splitQtyBuilder_.build();
      }
      if (splitPriceBuilder_ == null) {
        result.splitPrice_ = splitPrice_;
      } else {
        result.splitPrice_ = splitPriceBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof dominvest.backend.core.model.Split) {
        return mergeFrom((dominvest.backend.core.model.Split)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(dominvest.backend.core.model.Split other) {
      if (other == dominvest.backend.core.model.Split.getDefaultInstance()) return this;
      if (other.hasPrevQty()) {
        mergePrevQty(other.getPrevQty());
      }
      if (other.hasPrevPrice()) {
        mergePrevPrice(other.getPrevPrice());
      }
      if (other.hasSplitQty()) {
        mergeSplitQty(other.getSplitQty());
      }
      if (other.hasSplitPrice()) {
        mergeSplitPrice(other.getSplitPrice());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      dominvest.backend.core.model.Split parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (dominvest.backend.core.model.Split) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private dominvest.backend.core.model.Decimal prevQty_;
    private com.google.protobuf.SingleFieldBuilderV3<
        dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder> prevQtyBuilder_;
    /**
     * <pre>
     *кол-во до сплита
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal prevQty = 1;</code>
     */
    public boolean hasPrevQty() {
      return prevQtyBuilder_ != null || prevQty_ != null;
    }
    /**
     * <pre>
     *кол-во до сплита
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal prevQty = 1;</code>
     */
    public dominvest.backend.core.model.Decimal getPrevQty() {
      if (prevQtyBuilder_ == null) {
        return prevQty_ == null ? dominvest.backend.core.model.Decimal.getDefaultInstance() : prevQty_;
      } else {
        return prevQtyBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     *кол-во до сплита
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal prevQty = 1;</code>
     */
    public Builder setPrevQty(dominvest.backend.core.model.Decimal value) {
      if (prevQtyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        prevQty_ = value;
        onChanged();
      } else {
        prevQtyBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     *кол-во до сплита
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal prevQty = 1;</code>
     */
    public Builder setPrevQty(
        dominvest.backend.core.model.Decimal.Builder builderForValue) {
      if (prevQtyBuilder_ == null) {
        prevQty_ = builderForValue.build();
        onChanged();
      } else {
        prevQtyBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     *кол-во до сплита
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal prevQty = 1;</code>
     */
    public Builder mergePrevQty(dominvest.backend.core.model.Decimal value) {
      if (prevQtyBuilder_ == null) {
        if (prevQty_ != null) {
          prevQty_ =
            dominvest.backend.core.model.Decimal.newBuilder(prevQty_).mergeFrom(value).buildPartial();
        } else {
          prevQty_ = value;
        }
        onChanged();
      } else {
        prevQtyBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     *кол-во до сплита
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal prevQty = 1;</code>
     */
    public Builder clearPrevQty() {
      if (prevQtyBuilder_ == null) {
        prevQty_ = null;
        onChanged();
      } else {
        prevQty_ = null;
        prevQtyBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     *кол-во до сплита
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal prevQty = 1;</code>
     */
    public dominvest.backend.core.model.Decimal.Builder getPrevQtyBuilder() {
      
      onChanged();
      return getPrevQtyFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     *кол-во до сплита
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal prevQty = 1;</code>
     */
    public dominvest.backend.core.model.DecimalOrBuilder getPrevQtyOrBuilder() {
      if (prevQtyBuilder_ != null) {
        return prevQtyBuilder_.getMessageOrBuilder();
      } else {
        return prevQty_ == null ?
            dominvest.backend.core.model.Decimal.getDefaultInstance() : prevQty_;
      }
    }
    /**
     * <pre>
     *кол-во до сплита
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal prevQty = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder> 
        getPrevQtyFieldBuilder() {
      if (prevQtyBuilder_ == null) {
        prevQtyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder>(
                getPrevQty(),
                getParentForChildren(),
                isClean());
        prevQty_ = null;
      }
      return prevQtyBuilder_;
    }

    private dominvest.backend.core.model.Decimal prevPrice_;
    private com.google.protobuf.SingleFieldBuilderV3<
        dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder> prevPriceBuilder_;
    /**
     * <pre>
     *цена до сплита
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal prevPrice = 2;</code>
     */
    public boolean hasPrevPrice() {
      return prevPriceBuilder_ != null || prevPrice_ != null;
    }
    /**
     * <pre>
     *цена до сплита
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal prevPrice = 2;</code>
     */
    public dominvest.backend.core.model.Decimal getPrevPrice() {
      if (prevPriceBuilder_ == null) {
        return prevPrice_ == null ? dominvest.backend.core.model.Decimal.getDefaultInstance() : prevPrice_;
      } else {
        return prevPriceBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     *цена до сплита
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal prevPrice = 2;</code>
     */
    public Builder setPrevPrice(dominvest.backend.core.model.Decimal value) {
      if (prevPriceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        prevPrice_ = value;
        onChanged();
      } else {
        prevPriceBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     *цена до сплита
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal prevPrice = 2;</code>
     */
    public Builder setPrevPrice(
        dominvest.backend.core.model.Decimal.Builder builderForValue) {
      if (prevPriceBuilder_ == null) {
        prevPrice_ = builderForValue.build();
        onChanged();
      } else {
        prevPriceBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     *цена до сплита
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal prevPrice = 2;</code>
     */
    public Builder mergePrevPrice(dominvest.backend.core.model.Decimal value) {
      if (prevPriceBuilder_ == null) {
        if (prevPrice_ != null) {
          prevPrice_ =
            dominvest.backend.core.model.Decimal.newBuilder(prevPrice_).mergeFrom(value).buildPartial();
        } else {
          prevPrice_ = value;
        }
        onChanged();
      } else {
        prevPriceBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     *цена до сплита
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal prevPrice = 2;</code>
     */
    public Builder clearPrevPrice() {
      if (prevPriceBuilder_ == null) {
        prevPrice_ = null;
        onChanged();
      } else {
        prevPrice_ = null;
        prevPriceBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     *цена до сплита
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal prevPrice = 2;</code>
     */
    public dominvest.backend.core.model.Decimal.Builder getPrevPriceBuilder() {
      
      onChanged();
      return getPrevPriceFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     *цена до сплита
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal prevPrice = 2;</code>
     */
    public dominvest.backend.core.model.DecimalOrBuilder getPrevPriceOrBuilder() {
      if (prevPriceBuilder_ != null) {
        return prevPriceBuilder_.getMessageOrBuilder();
      } else {
        return prevPrice_ == null ?
            dominvest.backend.core.model.Decimal.getDefaultInstance() : prevPrice_;
      }
    }
    /**
     * <pre>
     *цена до сплита
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal prevPrice = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder> 
        getPrevPriceFieldBuilder() {
      if (prevPriceBuilder_ == null) {
        prevPriceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder>(
                getPrevPrice(),
                getParentForChildren(),
                isClean());
        prevPrice_ = null;
      }
      return prevPriceBuilder_;
    }

    private dominvest.backend.core.model.Decimal splitQty_;
    private com.google.protobuf.SingleFieldBuilderV3<
        dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder> splitQtyBuilder_;
    /**
     * <pre>
     *цена до сплита
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal splitQty = 3;</code>
     */
    public boolean hasSplitQty() {
      return splitQtyBuilder_ != null || splitQty_ != null;
    }
    /**
     * <pre>
     *цена до сплита
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal splitQty = 3;</code>
     */
    public dominvest.backend.core.model.Decimal getSplitQty() {
      if (splitQtyBuilder_ == null) {
        return splitQty_ == null ? dominvest.backend.core.model.Decimal.getDefaultInstance() : splitQty_;
      } else {
        return splitQtyBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     *цена до сплита
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal splitQty = 3;</code>
     */
    public Builder setSplitQty(dominvest.backend.core.model.Decimal value) {
      if (splitQtyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        splitQty_ = value;
        onChanged();
      } else {
        splitQtyBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     *цена до сплита
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal splitQty = 3;</code>
     */
    public Builder setSplitQty(
        dominvest.backend.core.model.Decimal.Builder builderForValue) {
      if (splitQtyBuilder_ == null) {
        splitQty_ = builderForValue.build();
        onChanged();
      } else {
        splitQtyBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     *цена до сплита
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal splitQty = 3;</code>
     */
    public Builder mergeSplitQty(dominvest.backend.core.model.Decimal value) {
      if (splitQtyBuilder_ == null) {
        if (splitQty_ != null) {
          splitQty_ =
            dominvest.backend.core.model.Decimal.newBuilder(splitQty_).mergeFrom(value).buildPartial();
        } else {
          splitQty_ = value;
        }
        onChanged();
      } else {
        splitQtyBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     *цена до сплита
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal splitQty = 3;</code>
     */
    public Builder clearSplitQty() {
      if (splitQtyBuilder_ == null) {
        splitQty_ = null;
        onChanged();
      } else {
        splitQty_ = null;
        splitQtyBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     *цена до сплита
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal splitQty = 3;</code>
     */
    public dominvest.backend.core.model.Decimal.Builder getSplitQtyBuilder() {
      
      onChanged();
      return getSplitQtyFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     *цена до сплита
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal splitQty = 3;</code>
     */
    public dominvest.backend.core.model.DecimalOrBuilder getSplitQtyOrBuilder() {
      if (splitQtyBuilder_ != null) {
        return splitQtyBuilder_.getMessageOrBuilder();
      } else {
        return splitQty_ == null ?
            dominvest.backend.core.model.Decimal.getDefaultInstance() : splitQty_;
      }
    }
    /**
     * <pre>
     *цена до сплита
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal splitQty = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder> 
        getSplitQtyFieldBuilder() {
      if (splitQtyBuilder_ == null) {
        splitQtyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder>(
                getSplitQty(),
                getParentForChildren(),
                isClean());
        splitQty_ = null;
      }
      return splitQtyBuilder_;
    }

    private dominvest.backend.core.model.Decimal splitPrice_;
    private com.google.protobuf.SingleFieldBuilderV3<
        dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder> splitPriceBuilder_;
    /**
     * <pre>
     *цена до сплита
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal splitPrice = 4;</code>
     */
    public boolean hasSplitPrice() {
      return splitPriceBuilder_ != null || splitPrice_ != null;
    }
    /**
     * <pre>
     *цена до сплита
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal splitPrice = 4;</code>
     */
    public dominvest.backend.core.model.Decimal getSplitPrice() {
      if (splitPriceBuilder_ == null) {
        return splitPrice_ == null ? dominvest.backend.core.model.Decimal.getDefaultInstance() : splitPrice_;
      } else {
        return splitPriceBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     *цена до сплита
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal splitPrice = 4;</code>
     */
    public Builder setSplitPrice(dominvest.backend.core.model.Decimal value) {
      if (splitPriceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        splitPrice_ = value;
        onChanged();
      } else {
        splitPriceBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     *цена до сплита
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal splitPrice = 4;</code>
     */
    public Builder setSplitPrice(
        dominvest.backend.core.model.Decimal.Builder builderForValue) {
      if (splitPriceBuilder_ == null) {
        splitPrice_ = builderForValue.build();
        onChanged();
      } else {
        splitPriceBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     *цена до сплита
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal splitPrice = 4;</code>
     */
    public Builder mergeSplitPrice(dominvest.backend.core.model.Decimal value) {
      if (splitPriceBuilder_ == null) {
        if (splitPrice_ != null) {
          splitPrice_ =
            dominvest.backend.core.model.Decimal.newBuilder(splitPrice_).mergeFrom(value).buildPartial();
        } else {
          splitPrice_ = value;
        }
        onChanged();
      } else {
        splitPriceBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     *цена до сплита
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal splitPrice = 4;</code>
     */
    public Builder clearSplitPrice() {
      if (splitPriceBuilder_ == null) {
        splitPrice_ = null;
        onChanged();
      } else {
        splitPrice_ = null;
        splitPriceBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     *цена до сплита
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal splitPrice = 4;</code>
     */
    public dominvest.backend.core.model.Decimal.Builder getSplitPriceBuilder() {
      
      onChanged();
      return getSplitPriceFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     *цена до сплита
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal splitPrice = 4;</code>
     */
    public dominvest.backend.core.model.DecimalOrBuilder getSplitPriceOrBuilder() {
      if (splitPriceBuilder_ != null) {
        return splitPriceBuilder_.getMessageOrBuilder();
      } else {
        return splitPrice_ == null ?
            dominvest.backend.core.model.Decimal.getDefaultInstance() : splitPrice_;
      }
    }
    /**
     * <pre>
     *цена до сплита
     * </pre>
     *
     * <code>.dominvest.backend.core.model.Decimal splitPrice = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder> 
        getSplitPriceFieldBuilder() {
      if (splitPriceBuilder_ == null) {
        splitPriceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            dominvest.backend.core.model.Decimal, dominvest.backend.core.model.Decimal.Builder, dominvest.backend.core.model.DecimalOrBuilder>(
                getSplitPrice(),
                getParentForChildren(),
                isClean());
        splitPrice_ = null;
      }
      return splitPriceBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:dominvest.backend.core.model.Split)
  }

  // @@protoc_insertion_point(class_scope:dominvest.backend.core.model.Split)
  private static final dominvest.backend.core.model.Split DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new dominvest.backend.core.model.Split();
  }

  public static dominvest.backend.core.model.Split getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Split>
      PARSER = new com.google.protobuf.AbstractParser<Split>() {
    @java.lang.Override
    public Split parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Split(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Split> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Split> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public dominvest.backend.core.model.Split getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

