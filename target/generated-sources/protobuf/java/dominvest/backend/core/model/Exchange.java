// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Exchange.proto

package dominvest.backend.core.model;

/**
 * Protobuf enum {@code dominvest.backend.core.model.Exchange}
 */
public enum Exchange
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>NO_EXCH = 0;</code>
   */
  NO_EXCH(0),
  /**
   * <code>MOEX = 1;</code>
   */
  MOEX(1),
  /**
   * <code>SPB = 2;</code>
   */
  SPB(2),
  /**
   * <code>OTC = 3;</code>
   */
  OTC(3),
  /**
   * <code>DOM_RF = 4;</code>
   */
  DOM_RF(4),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>NO_EXCH = 0;</code>
   */
  public static final int NO_EXCH_VALUE = 0;
  /**
   * <code>MOEX = 1;</code>
   */
  public static final int MOEX_VALUE = 1;
  /**
   * <code>SPB = 2;</code>
   */
  public static final int SPB_VALUE = 2;
  /**
   * <code>OTC = 3;</code>
   */
  public static final int OTC_VALUE = 3;
  /**
   * <code>DOM_RF = 4;</code>
   */
  public static final int DOM_RF_VALUE = 4;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static Exchange valueOf(int value) {
    return forNumber(value);
  }

  public static Exchange forNumber(int value) {
    switch (value) {
      case 0: return NO_EXCH;
      case 1: return MOEX;
      case 2: return SPB;
      case 3: return OTC;
      case 4: return DOM_RF;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<Exchange>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      Exchange> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<Exchange>() {
          public Exchange findValueByNumber(int number) {
            return Exchange.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return dominvest.backend.core.model.ExchangeOuterClass.getDescriptor().getEnumTypes().get(0);
  }

  private static final Exchange[] VALUES = values();

  public static Exchange valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private Exchange(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:dominvest.backend.core.model.Exchange)
}

