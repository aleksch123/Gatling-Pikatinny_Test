// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PortfolioAtheneService.proto

package dominvest.backend.core.model;

/**
 * Protobuf type {@code dominvest.backend.core.model.TransactionByOrderIdResponse}
 */
public  final class TransactionByOrderIdResponse extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:dominvest.backend.core.model.TransactionByOrderIdResponse)
    TransactionByOrderIdResponseOrBuilder {
private static final long serialVersionUID = 0L;
  // Use TransactionByOrderIdResponse.newBuilder() to construct.
  private TransactionByOrderIdResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private TransactionByOrderIdResponse() {
    transaction_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new TransactionByOrderIdResponse();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private TransactionByOrderIdResponse(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            dominvest.backend.core.model.ErrorCodeOuterClass.ErrorCode.Builder subBuilder = null;
            if (error_ != null) {
              subBuilder = error_.toBuilder();
            }
            error_ = input.readMessage(dominvest.backend.core.model.ErrorCodeOuterClass.ErrorCode.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(error_);
              error_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              transaction_ = new java.util.ArrayList<dominvest.backend.core.model.Transaction>();
              mutable_bitField0_ |= 0x00000001;
            }
            transaction_.add(
                input.readMessage(dominvest.backend.core.model.Transaction.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        transaction_ = java.util.Collections.unmodifiableList(transaction_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return dominvest.backend.core.model.PortfolioAtheneService.internal_static_dominvest_backend_core_model_TransactionByOrderIdResponse_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return dominvest.backend.core.model.PortfolioAtheneService.internal_static_dominvest_backend_core_model_TransactionByOrderIdResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            dominvest.backend.core.model.TransactionByOrderIdResponse.class, dominvest.backend.core.model.TransactionByOrderIdResponse.Builder.class);
  }

  public static final int ERROR_FIELD_NUMBER = 1;
  private dominvest.backend.core.model.ErrorCodeOuterClass.ErrorCode error_;
  /**
   * <code>.dominvest.backend.core.model.ErrorCode error = 1;</code>
   */
  public boolean hasError() {
    return error_ != null;
  }
  /**
   * <code>.dominvest.backend.core.model.ErrorCode error = 1;</code>
   */
  public dominvest.backend.core.model.ErrorCodeOuterClass.ErrorCode getError() {
    return error_ == null ? dominvest.backend.core.model.ErrorCodeOuterClass.ErrorCode.getDefaultInstance() : error_;
  }
  /**
   * <code>.dominvest.backend.core.model.ErrorCode error = 1;</code>
   */
  public dominvest.backend.core.model.ErrorCodeOuterClass.ErrorCodeOrBuilder getErrorOrBuilder() {
    return getError();
  }

  public static final int TRANSACTION_FIELD_NUMBER = 2;
  private java.util.List<dominvest.backend.core.model.Transaction> transaction_;
  /**
   * <pre>
   * Найденные транзакции
   * </pre>
   *
   * <code>repeated .dominvest.backend.core.model.Transaction transaction = 2;</code>
   */
  public java.util.List<dominvest.backend.core.model.Transaction> getTransactionList() {
    return transaction_;
  }
  /**
   * <pre>
   * Найденные транзакции
   * </pre>
   *
   * <code>repeated .dominvest.backend.core.model.Transaction transaction = 2;</code>
   */
  public java.util.List<? extends dominvest.backend.core.model.TransactionOrBuilder> 
      getTransactionOrBuilderList() {
    return transaction_;
  }
  /**
   * <pre>
   * Найденные транзакции
   * </pre>
   *
   * <code>repeated .dominvest.backend.core.model.Transaction transaction = 2;</code>
   */
  public int getTransactionCount() {
    return transaction_.size();
  }
  /**
   * <pre>
   * Найденные транзакции
   * </pre>
   *
   * <code>repeated .dominvest.backend.core.model.Transaction transaction = 2;</code>
   */
  public dominvest.backend.core.model.Transaction getTransaction(int index) {
    return transaction_.get(index);
  }
  /**
   * <pre>
   * Найденные транзакции
   * </pre>
   *
   * <code>repeated .dominvest.backend.core.model.Transaction transaction = 2;</code>
   */
  public dominvest.backend.core.model.TransactionOrBuilder getTransactionOrBuilder(
      int index) {
    return transaction_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (error_ != null) {
      output.writeMessage(1, getError());
    }
    for (int i = 0; i < transaction_.size(); i++) {
      output.writeMessage(2, transaction_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (error_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getError());
    }
    for (int i = 0; i < transaction_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, transaction_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof dominvest.backend.core.model.TransactionByOrderIdResponse)) {
      return super.equals(obj);
    }
    dominvest.backend.core.model.TransactionByOrderIdResponse other = (dominvest.backend.core.model.TransactionByOrderIdResponse) obj;

    if (hasError() != other.hasError()) return false;
    if (hasError()) {
      if (!getError()
          .equals(other.getError())) return false;
    }
    if (!getTransactionList()
        .equals(other.getTransactionList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasError()) {
      hash = (37 * hash) + ERROR_FIELD_NUMBER;
      hash = (53 * hash) + getError().hashCode();
    }
    if (getTransactionCount() > 0) {
      hash = (37 * hash) + TRANSACTION_FIELD_NUMBER;
      hash = (53 * hash) + getTransactionList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static dominvest.backend.core.model.TransactionByOrderIdResponse parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static dominvest.backend.core.model.TransactionByOrderIdResponse parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static dominvest.backend.core.model.TransactionByOrderIdResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static dominvest.backend.core.model.TransactionByOrderIdResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static dominvest.backend.core.model.TransactionByOrderIdResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static dominvest.backend.core.model.TransactionByOrderIdResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static dominvest.backend.core.model.TransactionByOrderIdResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static dominvest.backend.core.model.TransactionByOrderIdResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static dominvest.backend.core.model.TransactionByOrderIdResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static dominvest.backend.core.model.TransactionByOrderIdResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static dominvest.backend.core.model.TransactionByOrderIdResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static dominvest.backend.core.model.TransactionByOrderIdResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(dominvest.backend.core.model.TransactionByOrderIdResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code dominvest.backend.core.model.TransactionByOrderIdResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:dominvest.backend.core.model.TransactionByOrderIdResponse)
      dominvest.backend.core.model.TransactionByOrderIdResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dominvest.backend.core.model.PortfolioAtheneService.internal_static_dominvest_backend_core_model_TransactionByOrderIdResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dominvest.backend.core.model.PortfolioAtheneService.internal_static_dominvest_backend_core_model_TransactionByOrderIdResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dominvest.backend.core.model.TransactionByOrderIdResponse.class, dominvest.backend.core.model.TransactionByOrderIdResponse.Builder.class);
    }

    // Construct using dominvest.backend.core.model.TransactionByOrderIdResponse.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getTransactionFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (errorBuilder_ == null) {
        error_ = null;
      } else {
        error_ = null;
        errorBuilder_ = null;
      }
      if (transactionBuilder_ == null) {
        transaction_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        transactionBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return dominvest.backend.core.model.PortfolioAtheneService.internal_static_dominvest_backend_core_model_TransactionByOrderIdResponse_descriptor;
    }

    @java.lang.Override
    public dominvest.backend.core.model.TransactionByOrderIdResponse getDefaultInstanceForType() {
      return dominvest.backend.core.model.TransactionByOrderIdResponse.getDefaultInstance();
    }

    @java.lang.Override
    public dominvest.backend.core.model.TransactionByOrderIdResponse build() {
      dominvest.backend.core.model.TransactionByOrderIdResponse result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public dominvest.backend.core.model.TransactionByOrderIdResponse buildPartial() {
      dominvest.backend.core.model.TransactionByOrderIdResponse result = new dominvest.backend.core.model.TransactionByOrderIdResponse(this);
      int from_bitField0_ = bitField0_;
      if (errorBuilder_ == null) {
        result.error_ = error_;
      } else {
        result.error_ = errorBuilder_.build();
      }
      if (transactionBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          transaction_ = java.util.Collections.unmodifiableList(transaction_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.transaction_ = transaction_;
      } else {
        result.transaction_ = transactionBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof dominvest.backend.core.model.TransactionByOrderIdResponse) {
        return mergeFrom((dominvest.backend.core.model.TransactionByOrderIdResponse)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(dominvest.backend.core.model.TransactionByOrderIdResponse other) {
      if (other == dominvest.backend.core.model.TransactionByOrderIdResponse.getDefaultInstance()) return this;
      if (other.hasError()) {
        mergeError(other.getError());
      }
      if (transactionBuilder_ == null) {
        if (!other.transaction_.isEmpty()) {
          if (transaction_.isEmpty()) {
            transaction_ = other.transaction_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTransactionIsMutable();
            transaction_.addAll(other.transaction_);
          }
          onChanged();
        }
      } else {
        if (!other.transaction_.isEmpty()) {
          if (transactionBuilder_.isEmpty()) {
            transactionBuilder_.dispose();
            transactionBuilder_ = null;
            transaction_ = other.transaction_;
            bitField0_ = (bitField0_ & ~0x00000001);
            transactionBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getTransactionFieldBuilder() : null;
          } else {
            transactionBuilder_.addAllMessages(other.transaction_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      dominvest.backend.core.model.TransactionByOrderIdResponse parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (dominvest.backend.core.model.TransactionByOrderIdResponse) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private dominvest.backend.core.model.ErrorCodeOuterClass.ErrorCode error_;
    private com.google.protobuf.SingleFieldBuilderV3<
        dominvest.backend.core.model.ErrorCodeOuterClass.ErrorCode, dominvest.backend.core.model.ErrorCodeOuterClass.ErrorCode.Builder, dominvest.backend.core.model.ErrorCodeOuterClass.ErrorCodeOrBuilder> errorBuilder_;
    /**
     * <code>.dominvest.backend.core.model.ErrorCode error = 1;</code>
     */
    public boolean hasError() {
      return errorBuilder_ != null || error_ != null;
    }
    /**
     * <code>.dominvest.backend.core.model.ErrorCode error = 1;</code>
     */
    public dominvest.backend.core.model.ErrorCodeOuterClass.ErrorCode getError() {
      if (errorBuilder_ == null) {
        return error_ == null ? dominvest.backend.core.model.ErrorCodeOuterClass.ErrorCode.getDefaultInstance() : error_;
      } else {
        return errorBuilder_.getMessage();
      }
    }
    /**
     * <code>.dominvest.backend.core.model.ErrorCode error = 1;</code>
     */
    public Builder setError(dominvest.backend.core.model.ErrorCodeOuterClass.ErrorCode value) {
      if (errorBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        error_ = value;
        onChanged();
      } else {
        errorBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.dominvest.backend.core.model.ErrorCode error = 1;</code>
     */
    public Builder setError(
        dominvest.backend.core.model.ErrorCodeOuterClass.ErrorCode.Builder builderForValue) {
      if (errorBuilder_ == null) {
        error_ = builderForValue.build();
        onChanged();
      } else {
        errorBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.dominvest.backend.core.model.ErrorCode error = 1;</code>
     */
    public Builder mergeError(dominvest.backend.core.model.ErrorCodeOuterClass.ErrorCode value) {
      if (errorBuilder_ == null) {
        if (error_ != null) {
          error_ =
            dominvest.backend.core.model.ErrorCodeOuterClass.ErrorCode.newBuilder(error_).mergeFrom(value).buildPartial();
        } else {
          error_ = value;
        }
        onChanged();
      } else {
        errorBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.dominvest.backend.core.model.ErrorCode error = 1;</code>
     */
    public Builder clearError() {
      if (errorBuilder_ == null) {
        error_ = null;
        onChanged();
      } else {
        error_ = null;
        errorBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.dominvest.backend.core.model.ErrorCode error = 1;</code>
     */
    public dominvest.backend.core.model.ErrorCodeOuterClass.ErrorCode.Builder getErrorBuilder() {
      
      onChanged();
      return getErrorFieldBuilder().getBuilder();
    }
    /**
     * <code>.dominvest.backend.core.model.ErrorCode error = 1;</code>
     */
    public dominvest.backend.core.model.ErrorCodeOuterClass.ErrorCodeOrBuilder getErrorOrBuilder() {
      if (errorBuilder_ != null) {
        return errorBuilder_.getMessageOrBuilder();
      } else {
        return error_ == null ?
            dominvest.backend.core.model.ErrorCodeOuterClass.ErrorCode.getDefaultInstance() : error_;
      }
    }
    /**
     * <code>.dominvest.backend.core.model.ErrorCode error = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        dominvest.backend.core.model.ErrorCodeOuterClass.ErrorCode, dominvest.backend.core.model.ErrorCodeOuterClass.ErrorCode.Builder, dominvest.backend.core.model.ErrorCodeOuterClass.ErrorCodeOrBuilder> 
        getErrorFieldBuilder() {
      if (errorBuilder_ == null) {
        errorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            dominvest.backend.core.model.ErrorCodeOuterClass.ErrorCode, dominvest.backend.core.model.ErrorCodeOuterClass.ErrorCode.Builder, dominvest.backend.core.model.ErrorCodeOuterClass.ErrorCodeOrBuilder>(
                getError(),
                getParentForChildren(),
                isClean());
        error_ = null;
      }
      return errorBuilder_;
    }

    private java.util.List<dominvest.backend.core.model.Transaction> transaction_ =
      java.util.Collections.emptyList();
    private void ensureTransactionIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        transaction_ = new java.util.ArrayList<dominvest.backend.core.model.Transaction>(transaction_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        dominvest.backend.core.model.Transaction, dominvest.backend.core.model.Transaction.Builder, dominvest.backend.core.model.TransactionOrBuilder> transactionBuilder_;

    /**
     * <pre>
     * Найденные транзакции
     * </pre>
     *
     * <code>repeated .dominvest.backend.core.model.Transaction transaction = 2;</code>
     */
    public java.util.List<dominvest.backend.core.model.Transaction> getTransactionList() {
      if (transactionBuilder_ == null) {
        return java.util.Collections.unmodifiableList(transaction_);
      } else {
        return transactionBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Найденные транзакции
     * </pre>
     *
     * <code>repeated .dominvest.backend.core.model.Transaction transaction = 2;</code>
     */
    public int getTransactionCount() {
      if (transactionBuilder_ == null) {
        return transaction_.size();
      } else {
        return transactionBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Найденные транзакции
     * </pre>
     *
     * <code>repeated .dominvest.backend.core.model.Transaction transaction = 2;</code>
     */
    public dominvest.backend.core.model.Transaction getTransaction(int index) {
      if (transactionBuilder_ == null) {
        return transaction_.get(index);
      } else {
        return transactionBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Найденные транзакции
     * </pre>
     *
     * <code>repeated .dominvest.backend.core.model.Transaction transaction = 2;</code>
     */
    public Builder setTransaction(
        int index, dominvest.backend.core.model.Transaction value) {
      if (transactionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTransactionIsMutable();
        transaction_.set(index, value);
        onChanged();
      } else {
        transactionBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Найденные транзакции
     * </pre>
     *
     * <code>repeated .dominvest.backend.core.model.Transaction transaction = 2;</code>
     */
    public Builder setTransaction(
        int index, dominvest.backend.core.model.Transaction.Builder builderForValue) {
      if (transactionBuilder_ == null) {
        ensureTransactionIsMutable();
        transaction_.set(index, builderForValue.build());
        onChanged();
      } else {
        transactionBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Найденные транзакции
     * </pre>
     *
     * <code>repeated .dominvest.backend.core.model.Transaction transaction = 2;</code>
     */
    public Builder addTransaction(dominvest.backend.core.model.Transaction value) {
      if (transactionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTransactionIsMutable();
        transaction_.add(value);
        onChanged();
      } else {
        transactionBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Найденные транзакции
     * </pre>
     *
     * <code>repeated .dominvest.backend.core.model.Transaction transaction = 2;</code>
     */
    public Builder addTransaction(
        int index, dominvest.backend.core.model.Transaction value) {
      if (transactionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTransactionIsMutable();
        transaction_.add(index, value);
        onChanged();
      } else {
        transactionBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Найденные транзакции
     * </pre>
     *
     * <code>repeated .dominvest.backend.core.model.Transaction transaction = 2;</code>
     */
    public Builder addTransaction(
        dominvest.backend.core.model.Transaction.Builder builderForValue) {
      if (transactionBuilder_ == null) {
        ensureTransactionIsMutable();
        transaction_.add(builderForValue.build());
        onChanged();
      } else {
        transactionBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Найденные транзакции
     * </pre>
     *
     * <code>repeated .dominvest.backend.core.model.Transaction transaction = 2;</code>
     */
    public Builder addTransaction(
        int index, dominvest.backend.core.model.Transaction.Builder builderForValue) {
      if (transactionBuilder_ == null) {
        ensureTransactionIsMutable();
        transaction_.add(index, builderForValue.build());
        onChanged();
      } else {
        transactionBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Найденные транзакции
     * </pre>
     *
     * <code>repeated .dominvest.backend.core.model.Transaction transaction = 2;</code>
     */
    public Builder addAllTransaction(
        java.lang.Iterable<? extends dominvest.backend.core.model.Transaction> values) {
      if (transactionBuilder_ == null) {
        ensureTransactionIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, transaction_);
        onChanged();
      } else {
        transactionBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Найденные транзакции
     * </pre>
     *
     * <code>repeated .dominvest.backend.core.model.Transaction transaction = 2;</code>
     */
    public Builder clearTransaction() {
      if (transactionBuilder_ == null) {
        transaction_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        transactionBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Найденные транзакции
     * </pre>
     *
     * <code>repeated .dominvest.backend.core.model.Transaction transaction = 2;</code>
     */
    public Builder removeTransaction(int index) {
      if (transactionBuilder_ == null) {
        ensureTransactionIsMutable();
        transaction_.remove(index);
        onChanged();
      } else {
        transactionBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Найденные транзакции
     * </pre>
     *
     * <code>repeated .dominvest.backend.core.model.Transaction transaction = 2;</code>
     */
    public dominvest.backend.core.model.Transaction.Builder getTransactionBuilder(
        int index) {
      return getTransactionFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Найденные транзакции
     * </pre>
     *
     * <code>repeated .dominvest.backend.core.model.Transaction transaction = 2;</code>
     */
    public dominvest.backend.core.model.TransactionOrBuilder getTransactionOrBuilder(
        int index) {
      if (transactionBuilder_ == null) {
        return transaction_.get(index);  } else {
        return transactionBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Найденные транзакции
     * </pre>
     *
     * <code>repeated .dominvest.backend.core.model.Transaction transaction = 2;</code>
     */
    public java.util.List<? extends dominvest.backend.core.model.TransactionOrBuilder> 
         getTransactionOrBuilderList() {
      if (transactionBuilder_ != null) {
        return transactionBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(transaction_);
      }
    }
    /**
     * <pre>
     * Найденные транзакции
     * </pre>
     *
     * <code>repeated .dominvest.backend.core.model.Transaction transaction = 2;</code>
     */
    public dominvest.backend.core.model.Transaction.Builder addTransactionBuilder() {
      return getTransactionFieldBuilder().addBuilder(
          dominvest.backend.core.model.Transaction.getDefaultInstance());
    }
    /**
     * <pre>
     * Найденные транзакции
     * </pre>
     *
     * <code>repeated .dominvest.backend.core.model.Transaction transaction = 2;</code>
     */
    public dominvest.backend.core.model.Transaction.Builder addTransactionBuilder(
        int index) {
      return getTransactionFieldBuilder().addBuilder(
          index, dominvest.backend.core.model.Transaction.getDefaultInstance());
    }
    /**
     * <pre>
     * Найденные транзакции
     * </pre>
     *
     * <code>repeated .dominvest.backend.core.model.Transaction transaction = 2;</code>
     */
    public java.util.List<dominvest.backend.core.model.Transaction.Builder> 
         getTransactionBuilderList() {
      return getTransactionFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        dominvest.backend.core.model.Transaction, dominvest.backend.core.model.Transaction.Builder, dominvest.backend.core.model.TransactionOrBuilder> 
        getTransactionFieldBuilder() {
      if (transactionBuilder_ == null) {
        transactionBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            dominvest.backend.core.model.Transaction, dominvest.backend.core.model.Transaction.Builder, dominvest.backend.core.model.TransactionOrBuilder>(
                transaction_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        transaction_ = null;
      }
      return transactionBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:dominvest.backend.core.model.TransactionByOrderIdResponse)
  }

  // @@protoc_insertion_point(class_scope:dominvest.backend.core.model.TransactionByOrderIdResponse)
  private static final dominvest.backend.core.model.TransactionByOrderIdResponse DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new dominvest.backend.core.model.TransactionByOrderIdResponse();
  }

  public static dominvest.backend.core.model.TransactionByOrderIdResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<TransactionByOrderIdResponse>
      PARSER = new com.google.protobuf.AbstractParser<TransactionByOrderIdResponse>() {
    @java.lang.Override
    public TransactionByOrderIdResponse parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new TransactionByOrderIdResponse(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<TransactionByOrderIdResponse> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TransactionByOrderIdResponse> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public dominvest.backend.core.model.TransactionByOrderIdResponse getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

